DOMAINS
	okko = {OK>KO};
	bool = {true>false};
	MID_state = {OK>not_refreshed};
	LINK_state = {UP>DEAD>not_refreshed};
END

RESOURCE AVCDM1{OK,KO}
	CONSUMES_SERVICE
		AVCDM1_ADBG1.ALIVE{bool},
		AVCDM1_ADBG2.ALIVE{bool},
		AVCDM1_DSU1.ALIVE{bool},
		AVCDM1_DSU2.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG1_AVCDM1.ALIVE{bool},
		ADBG2_AVCDM1.ALIVE{bool},
		DSU1_AVCDM1.ALIVE{bool},
		DSU2_AVCDM1.ALIVE{bool},
		MID.AVCDM1{MID_state},
		Communication{okko},
		MID.AVCDM1.ADBG1.LINK{LINK_state},
		MID.AVCDM1.ADBG2.LINK{LINK_state},
		MID.AVCDM1.DSU1.LINK{LINK_state},
		MID.AVCDM1.DSU2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG1_AVCDM1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE ADBG2_AVCDM1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU1_AVCDM1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU2_AVCDM1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.AVCDM1 DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.AVCDM1.ADBG1.LINK DEPENDS_ON AVCDM1_ADBG1.ALIVE, status:
		DEAD IF AVCDM1_ADBG1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.AVCDM1.ADBG2.LINK DEPENDS_ON AVCDM1_ADBG2.ALIVE, status:
		DEAD IF AVCDM1_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.AVCDM1.DSU1.LINK DEPENDS_ON AVCDM1_DSU1.ALIVE, status:
		DEAD IF AVCDM1_DSU1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.AVCDM1.DSU2.LINK DEPENDS_ON AVCDM1_DSU2.ALIVE, status:
		DEAD IF AVCDM1_DSU2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE ADBG1{OK,KO}
	CONSUMES_SERVICE
		ADBG1_AVCDM1.ALIVE{bool},
		ADBG1_DSU1.ALIVE{bool},
		ADBG1_QSEB4AC.ALIVE{bool},
		ADBG1_QSEB1DF.ALIVE{bool},
		ADBG1_QSEB10ABC.ALIVE{bool},
		ADBG1_QSEB8DEF.ALIVE{bool};
	PROVIDES_SERVICE
		AVCDM1_ADBG1.ALIVE{bool},
		DSU1_ADBG1.ALIVE{bool},
		QSEB4AC_ADBG1.ALIVE{bool},
		QSEB1DF_ADBG1.ALIVE{bool},
		QSEB10ABC_ADBG1.ALIVE{bool},
		QSEB8DEF_ADBG1.ALIVE{bool},
		MID.ADBG1{MID_state},
		Communication{okko},
		MID.ADBG1.AVCDM1.LINK{LINK_state},
		MID.ADBG1.DSU1.LINK{LINK_state},
		MID.ADBG1.QSEB4AC.LINK{LINK_state},
		MID.ADBG1.QSEB1DF.LINK{LINK_state},
		MID.ADBG1.QSEB10ABC.LINK{LINK_state},
		MID.ADBG1.QSEB8DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE AVCDM1_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU1_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB4AC_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB1DF_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB10ABC_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB8DEF_ADBG1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.ADBG1 DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.ADBG1.AVCDM1.LINK DEPENDS_ON ADBG1_AVCDM1.ALIVE, status:
		DEAD IF ADBG1_AVCDM1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG1.DSU1.LINK DEPENDS_ON ADBG1_DSU1.ALIVE, status:
		DEAD IF ADBG1_DSU1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG1.QSEB4AC.LINK DEPENDS_ON ADBG1_QSEB4AC.ALIVE, status:
		DEAD IF ADBG1_QSEB4AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG1.QSEB1DF.LINK DEPENDS_ON ADBG1_QSEB1DF.ALIVE, status:
		DEAD IF ADBG1_QSEB1DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG1.QSEB10ABC.LINK DEPENDS_ON ADBG1_QSEB10ABC.ALIVE, status:
		DEAD IF ADBG1_QSEB10ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG1.QSEB8DEF.LINK DEPENDS_ON ADBG1_QSEB8DEF.ALIVE, status:
		DEAD IF ADBG1_QSEB8DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_AVCDM1_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG1_AVCDM1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE ADBG2{OK,KO}
	CONSUMES_SERVICE
		ADBG2_AVCDM1.ALIVE{bool},
		ADBG2_DSU2.ALIVE{bool},
		ADBG2_QSEB18ABC.ALIVE{bool},
		ADBG2_QSEB18DEF.ALIVE{bool},
		ADBG2_QSEB31ABC.ALIVE{bool},
		ADBG2_QSEB30DEF.ALIVE{bool};
	PROVIDES_SERVICE
		AVCDM1_ADBG2.ALIVE{bool},
		DSU2_ADBG2.ALIVE{bool},
		QSEB18ABC_ADBG2.ALIVE{bool},
		QSEB18DEF_ADBG2.ALIVE{bool},
		QSEB31ABC_ADBG2.ALIVE{bool},
		QSEB30DEF_ADBG2.ALIVE{bool},
		MID.ADBG2{MID_state},
		Communication{okko},
		MID.ADBG2.AVCDM1.LINK{LINK_state},
		MID.ADBG2.DSU2.LINK{LINK_state},
		MID.ADBG2.QSEB18ABC.LINK{LINK_state},
		MID.ADBG2.QSEB18DEF.LINK{LINK_state},
		MID.ADBG2.QSEB31ABC.LINK{LINK_state},
		MID.ADBG2.QSEB30DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE AVCDM1_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU2_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB18ABC_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB18DEF_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB31ABC_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB30DEF_ADBG2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.ADBG2 DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.ADBG2.AVCDM1.LINK DEPENDS_ON ADBG2_AVCDM1.ALIVE, status:
		DEAD IF ADBG2_AVCDM1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG2.DSU2.LINK DEPENDS_ON ADBG2_DSU2.ALIVE, status:
		DEAD IF ADBG2_DSU2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG2.QSEB18ABC.LINK DEPENDS_ON ADBG2_QSEB18ABC.ALIVE, status:
		DEAD IF ADBG2_QSEB18ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG2.QSEB18DEF.LINK DEPENDS_ON ADBG2_QSEB18DEF.ALIVE, status:
		DEAD IF ADBG2_QSEB18DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG2.QSEB31ABC.LINK DEPENDS_ON ADBG2_QSEB31ABC.ALIVE, status:
		DEAD IF ADBG2_QSEB31ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.ADBG2.QSEB30DEF.LINK DEPENDS_ON ADBG2_QSEB30DEF.ALIVE, status:
		DEAD IF ADBG2_QSEB30DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_AVCDM1_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_AVCDM1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE DSU1{OK,KO}
	CONSUMES_SERVICE
		DSU1_AVCDM1.ALIVE{bool},
		DSU1_QSEBVCC.ALIVE{bool},
		DSU1_ADBG1.ALIVE{bool},
		DSU1_DSU2.ALIVE{bool},
		MID.AVCDM1{MID_state},
		MID.ADBG1{MID_state},
		MID.ADBG2{MID_state},
		MID.QSEBVCC{MID_state},
		MID.DSU2{MID_state},
		MID.ICMT1{MID_state},
		MID.QSEB4AC{MID_state},
		MID.SVDU4A{MID_state},
		MID.SVDU4C{MID_state},
		MID.QSEB3AC{MID_state},
		MID.SVDU3A{MID_state},
		MID.SVDU3C{MID_state},
		MID.QSEB2AC{MID_state},
		MID.SVDU2A{MID_state},
		MID.SVDU2C{MID_state},
		MID.QSEB1AC{MID_state},
		MID.SVDU1A{MID_state},
		MID.SVDU1C{MID_state},
		MID.QSEB17ABC{MID_state},
		MID.SVDU18A{MID_state},
		MID.SVDU18B{MID_state},
		MID.SVDU18C{MID_state},
		MID.QSEB16ABC{MID_state},
		MID.SVDU17A{MID_state},
		MID.SVDU17B{MID_state},
		MID.SVDU17C{MID_state},
		MID.QSEB15ABC{MID_state},
		MID.SVDU16A{MID_state},
		MID.SVDU16B{MID_state},
		MID.SVDU16C{MID_state},
		MID.QSEB14ABC{MID_state},
		MID.SVDU15A{MID_state},
		MID.SVDU15B{MID_state},
		MID.SVDU15C{MID_state},
		MID.QSEB13ABC{MID_state},
		MID.SVDU14A{MID_state},
		MID.SVDU14B{MID_state},
		MID.SVDU14C{MID_state},
		MID.QSEB12ABC{MID_state},
		MID.SVDU13A{MID_state},
		MID.SVDU13B{MID_state},
		MID.SVDU13C{MID_state},
		MID.QSEB11_ABC{MID_state},
		MID.SVDU12A{MID_state},
		MID.SVDU12B{MID_state},
		MID.SVDU12C{MID_state},
		MID.QSEB11ABC{MID_state},
		MID.SVDU11A{MID_state},
		MID.SVDU11B{MID_state},
		MID.SVDU11C{MID_state},
		MID.QSEB20ABC{MID_state},
		MID.SVDU21A{MID_state},
		MID.SVDU21B{MID_state},
		MID.SVDU21C{MID_state},
		MID.QSEB19ABC{MID_state},
		MID.SVDU20A{MID_state},
		MID.SVDU20B{MID_state},
		MID.SVDU20C{MID_state},
		MID.QSEB18ABC{MID_state},
		MID.SVDU19A{MID_state},
		MID.SVDU19B{MID_state},
		MID.SVDU19C{MID_state},
		MID.QSEB1DF{MID_state},
		MID.SVDU1D{MID_state},
		MID.SVDU1F{MID_state},
		MID.QSEB2DF{MID_state},
		MID.SVDU2D{MID_state},
		MID.SVDU2F{MID_state},
		MID.QSEB3DF{MID_state},
		MID.SVDU3D{MID_state},
		MID.SVDU3F{MID_state},
		MID.QSEB4DF{MID_state},
		MID.SVDU4D{MID_state},
		MID.SVDU4F{MID_state},
		MID.QSEB19DEF{MID_state},
		MID.SVDU20D{MID_state},
		MID.SVDU20E{MID_state},
		MID.SVDU20F{MID_state},
		MID.QSEB20DEF{MID_state},
		MID.SVDU21D{MID_state},
		MID.SVDU21E{MID_state},
		MID.SVDU21F{MID_state},
		MID.QSEB21DEF{MID_state},
		MID.SVDU22D{MID_state},
		MID.SVDU22E{MID_state},
		MID.SVDU22F{MID_state},
		MID.QSEB22DEF{MID_state},
		MID.SVDU23D{MID_state},
		MID.SVDU23E{MID_state},
		MID.SVDU23F{MID_state},
		MID.QSEB11DE{MID_state},
		MID.SVDU11D{MID_state},
		MID.SVDU11E{MID_state},
		MID.SVDU12D{MID_state},
		MID.SVDU12E{MID_state},
		MID.QSEB12DEF{MID_state},
		MID.SVDU13D{MID_state},
		MID.SVDU13E{MID_state},
		MID.SVDU13F{MID_state},
		MID.SVDU12F{MID_state},
		MID.QSEB13DEF{MID_state},
		MID.SVDU14D{MID_state},
		MID.SVDU14E{MID_state},
		MID.SVDU14F{MID_state},
		MID.QSEB14DEF{MID_state},
		MID.SVDU15D{MID_state},
		MID.SVDU15E{MID_state},
		MID.SVDU15F{MID_state},
		MID.QSEB15DEF{MID_state},
		MID.SVDU16D{MID_state},
		MID.SVDU16E{MID_state},
		MID.SVDU16F{MID_state},
		MID.QSEB16DEF{MID_state},
		MID.SVDU17D{MID_state},
		MID.SVDU17E{MID_state},
		MID.SVDU17F{MID_state},
		MID.QSEB17DEF{MID_state},
		MID.SVDU18D{MID_state},
		MID.SVDU18E{MID_state},
		MID.SVDU18F{MID_state},
		MID.QSEB18DEF{MID_state},
		MID.SVDU19D{MID_state},
		MID.SVDU19E{MID_state},
		MID.SVDU19F{MID_state},
		MID.QSEB10ABC{MID_state},
		MID.QSEB9ABC{MID_state},
		MID.SVDU10A{MID_state},
		MID.SVDU10B{MID_state},
		MID.SVDU10C{MID_state},
		MID.QSEB_9ABC{MID_state},
		MID.SVDU8A{MID_state},
		MID.SVDU8B{MID_state},
		MID.SVDU8C{MID_state},
		MID.QSEB8ABC{MID_state},
		MID.SVDU9A{MID_state},
		MID.SVDU9B{MID_state},
		MID.SVDU9C{MID_state},
		MID.QSEB30ABC{MID_state},
		MID.SVDU31A{MID_state},
		MID.SVDU31B{MID_state},
		MID.SVDU31C{MID_state},
		MID.QSEB29ABC{MID_state},
		MID.SVDU30A{MID_state},
		MID.SVDU30B{MID_state},
		MID.SVDU30C{MID_state},
		MID.QSEB28ABC{MID_state},
		MID.SVDU29A{MID_state},
		MID.SVDU29B{MID_state},
		MID.SVDU29C{MID_state},
		MID.QSEB27ABC{MID_state},
		MID.SVDU28A{MID_state},
		MID.SVDU28B{MID_state},
		MID.SVDU28C{MID_state},
		MID.QSEB26ABC{MID_state},
		MID.SVDU27A{MID_state},
		MID.SVDU27B{MID_state},
		MID.SVDU27C{MID_state},
		MID.QSEB25ABC{MID_state},
		MID.SVDU26A{MID_state},
		MID.SVDU26B{MID_state},
		MID.SVDU26C{MID_state},
		MID.SVDU25A{MID_state},
		MID.QSEB24BC{MID_state},
		MID.SVDU24B{MID_state},
		MID.SVDU24C{MID_state},
		MID.SVDU25B{MID_state},
		MID.SVDU25C{MID_state},
		MID.QSEB35ABC{MID_state},
		MID.SVDU36A{MID_state},
		MID.SVDU36B{MID_state},
		MID.SVDU36C{MID_state},
		MID.QSEB34ABC{MID_state},
		MID.SVDU35A{MID_state},
		MID.SVDU35B{MID_state},
		MID.SVDU35C{MID_state},
		MID.QSEB33ABC{MID_state},
		MID.SVDU34A{MID_state},
		MID.SVDU34B{MID_state},
		MID.SVDU34C{MID_state},
		MID.QSEB32ABC{MID_state},
		MID.SVDU33A{MID_state},
		MID.SVDU33B{MID_state},
		MID.SVDU33C{MID_state},
		MID.QSEB31ABC{MID_state},
		MID.SVDU32A{MID_state},
		MID.SVDU32B{MID_state},
		MID.SVDU32C{MID_state},
		MID.QSEB8DEF{MID_state},
		MID.SVDU9D{MID_state},
		MID.SVDU9E{MID_state},
		MID.SVDU9F{MID_state},
		MID.QSEB9_DEF{MID_state},
		MID.SVDU8D{MID_state},
		MID.SVDU8E{MID_state},
		MID.SVDU8F{MID_state},
		MID.QSEB9DEF{MID_state},
		MID.SVDU10D{MID_state},
		MID.SVDU10E{MID_state},
		MID.SVDU10F{MID_state},
		MID.QSEB10DEF{MID_state},
		MID.QSEB31DEF{MID_state},
		MID.SVDU32D{MID_state},
		MID.SVDU32E{MID_state},
		MID.SVDU32F{MID_state},
		MID.QSEB32DEF{MID_state},
		MID.SVDU33D{MID_state},
		MID.SVDU33E{MID_state},
		MID.SVDU33F{MID_state},
		MID.QSEB33DEF{MID_state},
		MID.SVDU34D{MID_state},
		MID.SVDU34E{MID_state},
		MID.SVDU34F{MID_state},
		MID.QSEB34DEF{MID_state},
		MID.SVDU35D{MID_state},
		MID.SVDU35E{MID_state},
		MID.SVDU35F{MID_state},
		MID.QSEB35DEF{MID_state},
		MID.SVDU36D{MID_state},
		MID.SVDU36E{MID_state},
		MID.SVDU36F{MID_state},
		MID.QSEB24DE{MID_state},
		MID.SVDU24D{MID_state},
		MID.SVDU24E{MID_state},
		MID.SVDU25D{MID_state},
		MID.SVDU25E{MID_state},
		MID.QSEB25DEF{MID_state},
		MID.SVDU26D{MID_state},
		MID.SVDU26E{MID_state},
		MID.SVDU26F{MID_state},
		MID.SVDU25F{MID_state},
		MID.QSEB26DEF{MID_state},
		MID.SVDU27D{MID_state},
		MID.SVDU27E{MID_state},
		MID.SVDU27F{MID_state},
		MID.QSEB27DEF{MID_state},
		MID.SVDU28D{MID_state},
		MID.SVDU28E{MID_state},
		MID.SVDU28F{MID_state},
		MID.QSEB28DEF{MID_state},
		MID.SVDU29D{MID_state},
		MID.SVDU29E{MID_state},
		MID.SVDU29F{MID_state},
		MID.QSEB29DEF{MID_state},
		MID.SVDU30D{MID_state},
		MID.SVDU30E{MID_state},
		MID.SVDU30F{MID_state},
		MID.QSEB30DEF{MID_state},
		MID.SVDU31D{MID_state},
		MID.SVDU31E{MID_state},
		MID.SVDU31F{MID_state},
		MID.AVCDM1.ADBG1.LINK{LINK_state},
		MID.AVCDM1.ADBG2.LINK{LINK_state},
		MID.AVCDM1.DSU1.LINK{LINK_state},
		MID.AVCDM1.DSU2.LINK{LINK_state},
		MID.ADBG1.AVCDM1.LINK{LINK_state},
		MID.ADBG1.DSU1.LINK{LINK_state},
		MID.ADBG1.QSEB4AC.LINK{LINK_state},
		MID.ADBG1.QSEB1DF.LINK{LINK_state},
		MID.ADBG1.QSEB10ABC.LINK{LINK_state},
		MID.ADBG1.QSEB8DEF.LINK{LINK_state},
		MID.ADBG2.AVCDM1.LINK{LINK_state},
		MID.ADBG2.DSU2.LINK{LINK_state},
		MID.ADBG2.QSEB18ABC.LINK{LINK_state},
		MID.ADBG2.QSEB18DEF.LINK{LINK_state},
		MID.ADBG2.QSEB31ABC.LINK{LINK_state},
		MID.ADBG2.QSEB30DEF.LINK{LINK_state},
		MID.QSEBVCC.DSU1.LINK{LINK_state},
		MID.QSEBVCC.ICMT1.LINK{LINK_state},
		MID.DSU2.DSU1.LINK{LINK_state},
		MID.DSU2.AVCDM1.LINK{LINK_state},
		MID.DSU2.ADBG2.LINK{LINK_state},
		MID.ICMT1.QSEBVCC.LINK{LINK_state},
		MID.QSEB4AC.ADBG1.LINK{LINK_state},
		MID.QSEB4AC.SVDU4A.LINK{LINK_state},
		MID.QSEB4AC.SVDU4C.LINK{LINK_state},
		MID.QSEB4AC.QSEB3AC.LINK{LINK_state},
		MID.SVDU4A.QSEB4AC.LINK{LINK_state},
		MID.SVDU4C.QSEB4AC.LINK{LINK_state},
		MID.QSEB3AC.QSEB4AC.LINK{LINK_state},
		MID.QSEB3AC.SVDU3A.LINK{LINK_state},
		MID.QSEB3AC.SVDU3C.LINK{LINK_state},
		MID.QSEB3AC.QSEB2AC.LINK{LINK_state},
		MID.SVDU3A.QSEB3AC.LINK{LINK_state},
		MID.SVDU3C.QSEB3AC.LINK{LINK_state},
		MID.QSEB2AC.QSEB3AC.LINK{LINK_state},
		MID.QSEB2AC.SVDU2A.LINK{LINK_state},
		MID.QSEB2AC.SVDU2C.LINK{LINK_state},
		MID.QSEB2AC.QSEB1AC.LINK{LINK_state},
		MID.SVDU2A.QSEB2AC.LINK{LINK_state},
		MID.SVDU2C.QSEB2AC.LINK{LINK_state},
		MID.QSEB1AC.QSEB2AC.LINK{LINK_state},
		MID.QSEB1AC.SVDU1A.LINK{LINK_state},
		MID.QSEB1AC.SVDU1C.LINK{LINK_state},
		MID.QSEB1AC.QSEB17ABC.LINK{LINK_state},
		MID.SVDU1A.QSEB1AC.LINK{LINK_state},
		MID.SVDU1C.QSEB1AC.LINK{LINK_state},
		MID.QSEB17ABC.QSEB1AC.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18A.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18B.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18C.LINK{LINK_state},
		MID.QSEB17ABC.QSEB16ABC.LINK{LINK_state},
		MID.SVDU18A.QSEB17ABC.LINK{LINK_state},
		MID.SVDU18B.QSEB17ABC.LINK{LINK_state},
		MID.SVDU18C.QSEB17ABC.LINK{LINK_state},
		MID.QSEB16ABC.QSEB17ABC.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17A.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17B.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17C.LINK{LINK_state},
		MID.QSEB16ABC.QSEB15ABC.LINK{LINK_state},
		MID.SVDU17A.QSEB16ABC.LINK{LINK_state},
		MID.SVDU17B.QSEB16ABC.LINK{LINK_state},
		MID.SVDU17C.QSEB16ABC.LINK{LINK_state},
		MID.QSEB15ABC.QSEB16ABC.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16A.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16B.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16C.LINK{LINK_state},
		MID.QSEB15ABC.QSEB14ABC.LINK{LINK_state},
		MID.SVDU16A.QSEB15ABC.LINK{LINK_state},
		MID.SVDU16B.QSEB15ABC.LINK{LINK_state},
		MID.SVDU16C.QSEB15ABC.LINK{LINK_state},
		MID.QSEB14ABC.QSEB15ABC.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15A.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15B.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15C.LINK{LINK_state},
		MID.QSEB14ABC.QSEB13ABC.LINK{LINK_state},
		MID.SVDU15A.QSEB14ABC.LINK{LINK_state},
		MID.SVDU15B.QSEB14ABC.LINK{LINK_state},
		MID.SVDU15C.QSEB14ABC.LINK{LINK_state},
		MID.QSEB13ABC.QSEB14ABC.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14A.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14B.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14C.LINK{LINK_state},
		MID.QSEB13ABC.QSEB12ABC.LINK{LINK_state},
		MID.SVDU14A.QSEB13ABC.LINK{LINK_state},
		MID.SVDU14B.QSEB13ABC.LINK{LINK_state},
		MID.SVDU14C.QSEB13ABC.LINK{LINK_state},
		MID.QSEB12ABC.QSEB13ABC.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13A.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13B.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13C.LINK{LINK_state},
		MID.QSEB12ABC.QSEB11_ABC.LINK{LINK_state},
		MID.SVDU13A.QSEB12ABC.LINK{LINK_state},
		MID.SVDU13B.QSEB12ABC.LINK{LINK_state},
		MID.SVDU13C.QSEB12ABC.LINK{LINK_state},
		MID.QSEB11_ABC.QSEB12ABC.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12A.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12B.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12C.LINK{LINK_state},
		MID.QSEB11_ABC.QSEB11ABC.LINK{LINK_state},
		MID.SVDU12A.QSEB11_ABC.LINK{LINK_state},
		MID.SVDU12B.QSEB11_ABC.LINK{LINK_state},
		MID.SVDU12C.QSEB11_ABC.LINK{LINK_state},
		MID.QSEB11ABC.QSEB11_ABC.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11A.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11B.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11C.LINK{LINK_state},
		MID.QSEB11ABC.QSEB20ABC.LINK{LINK_state},
		MID.SVDU11A.QSEB11ABC.LINK{LINK_state},
		MID.SVDU11B.QSEB11ABC.LINK{LINK_state},
		MID.SVDU11C.QSEB11ABC.LINK{LINK_state},
		MID.QSEB20ABC.QSEB11ABC.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21A.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21B.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21C.LINK{LINK_state},
		MID.QSEB20ABC.QSEB19ABC.LINK{LINK_state},
		MID.SVDU21A.QSEB20ABC.LINK{LINK_state},
		MID.SVDU21B.QSEB20ABC.LINK{LINK_state},
		MID.SVDU21C.QSEB20ABC.LINK{LINK_state},
		MID.QSEB19ABC.QSEB20ABC.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20A.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20B.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20C.LINK{LINK_state},
		MID.QSEB19ABC.QSEB18ABC.LINK{LINK_state},
		MID.SVDU20A.QSEB19ABC.LINK{LINK_state},
		MID.SVDU20B.QSEB19ABC.LINK{LINK_state},
		MID.SVDU20C.QSEB19ABC.LINK{LINK_state},
		MID.QSEB18ABC.QSEB19ABC.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19A.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19B.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19C.LINK{LINK_state},
		MID.QSEB18ABC.ADBG2.LINK{LINK_state},
		MID.SVDU19A.QSEB18ABC.LINK{LINK_state},
		MID.SVDU19B.QSEB18ABC.LINK{LINK_state},
		MID.SVDU19C.QSEB18ABC.LINK{LINK_state},
		MID.QSEB1DF.ADBG1.LINK{LINK_state},
		MID.QSEB1DF.SVDU1D.LINK{LINK_state},
		MID.QSEB1DF.SVDU1F.LINK{LINK_state},
		MID.QSEB1DF.QSEB2DF.LINK{LINK_state},
		MID.SVDU1D.QSEB1DF.LINK{LINK_state},
		MID.SVDU1F.QSEB1DF.LINK{LINK_state},
		MID.QSEB2DF.QSEB1DF.LINK{LINK_state},
		MID.QSEB2DF.SVDU2D.LINK{LINK_state},
		MID.QSEB2DF.SVDU2F.LINK{LINK_state},
		MID.QSEB2DF.QSEB3DF.LINK{LINK_state},
		MID.SVDU2D.QSEB2DF.LINK{LINK_state},
		MID.SVDU2F.QSEB2DF.LINK{LINK_state},
		MID.QSEB3DF.QSEB2DF.LINK{LINK_state},
		MID.QSEB3DF.SVDU3D.LINK{LINK_state},
		MID.QSEB3DF.SVDU3F.LINK{LINK_state},
		MID.QSEB3DF.QSEB4DF.LINK{LINK_state},
		MID.SVDU3D.QSEB3DF.LINK{LINK_state},
		MID.SVDU3F.QSEB3DF.LINK{LINK_state},
		MID.QSEB4DF.QSEB3DF.LINK{LINK_state},
		MID.QSEB4DF.SVDU4D.LINK{LINK_state},
		MID.QSEB4DF.SVDU4F.LINK{LINK_state},
		MID.QSEB4DF.QSEB19DEF.LINK{LINK_state},
		MID.SVDU4D.QSEB4DF.LINK{LINK_state},
		MID.SVDU4F.QSEB4DF.LINK{LINK_state},
		MID.QSEB19DEF.QSEB4DF.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20D.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20E.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20F.LINK{LINK_state},
		MID.QSEB19DEF.QSEB20DEF.LINK{LINK_state},
		MID.SVDU20D.QSEB19DEF.LINK{LINK_state},
		MID.SVDU20E.QSEB19DEF.LINK{LINK_state},
		MID.SVDU20F.QSEB19DEF.LINK{LINK_state},
		MID.QSEB20DEF.QSEB19DEF.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21D.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21E.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21F.LINK{LINK_state},
		MID.QSEB20DEF.QSEB21DEF.LINK{LINK_state},
		MID.SVDU21D.QSEB20DEF.LINK{LINK_state},
		MID.SVDU21E.QSEB20DEF.LINK{LINK_state},
		MID.SVDU21F.QSEB20DEF.LINK{LINK_state},
		MID.QSEB21DEF.QSEB20DEF.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22D.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22E.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22F.LINK{LINK_state},
		MID.QSEB21DEF.QSEB22DEF.LINK{LINK_state},
		MID.SVDU22D.QSEB21DEF.LINK{LINK_state},
		MID.SVDU22E.QSEB21DEF.LINK{LINK_state},
		MID.SVDU22F.QSEB21DEF.LINK{LINK_state},
		MID.QSEB22DEF.QSEB21DEF.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23D.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23E.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23F.LINK{LINK_state},
		MID.QSEB22DEF.QSEB11DE.LINK{LINK_state},
		MID.SVDU23D.QSEB22DEF.LINK{LINK_state},
		MID.SVDU23E.QSEB22DEF.LINK{LINK_state},
		MID.SVDU23F.QSEB22DEF.LINK{LINK_state},
		MID.QSEB11DE.QSEB22DEF.LINK{LINK_state},
		MID.QSEB11DE.SVDU11D.LINK{LINK_state},
		MID.QSEB11DE.SVDU11E.LINK{LINK_state},
		MID.QSEB11DE.SVDU12D.LINK{LINK_state},
		MID.QSEB11DE.SVDU12E.LINK{LINK_state},
		MID.QSEB11DE.QSEB12DEF.LINK{LINK_state},
		MID.SVDU11D.QSEB11DE.LINK{LINK_state},
		MID.SVDU11E.QSEB11DE.LINK{LINK_state},
		MID.SVDU12D.QSEB11DE.LINK{LINK_state},
		MID.SVDU12E.QSEB11DE.LINK{LINK_state},
		MID.QSEB12DEF.QSEB11DE.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13D.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13E.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13F.LINK{LINK_state},
		MID.QSEB12DEF.SVDU12F.LINK{LINK_state},
		MID.QSEB12DEF.QSEB13DEF.LINK{LINK_state},
		MID.SVDU13D.QSEB12DEF.LINK{LINK_state},
		MID.SVDU13E.QSEB12DEF.LINK{LINK_state},
		MID.SVDU13F.QSEB12DEF.LINK{LINK_state},
		MID.SVDU12F.QSEB12DEF.LINK{LINK_state},
		MID.QSEB13DEF.QSEB12DEF.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14D.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14E.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14F.LINK{LINK_state},
		MID.QSEB13DEF.QSEB14DEF.LINK{LINK_state},
		MID.SVDU14D.QSEB13DEF.LINK{LINK_state},
		MID.SVDU14E.QSEB13DEF.LINK{LINK_state},
		MID.SVDU14F.QSEB13DEF.LINK{LINK_state},
		MID.QSEB14DEF.QSEB13DEF.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15D.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15E.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15F.LINK{LINK_state},
		MID.QSEB14DEF.QSEB15DEF.LINK{LINK_state},
		MID.SVDU15D.QSEB14DEF.LINK{LINK_state},
		MID.SVDU15E.QSEB14DEF.LINK{LINK_state},
		MID.SVDU15F.QSEB14DEF.LINK{LINK_state},
		MID.QSEB15DEF.QSEB14DEF.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16D.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16E.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16F.LINK{LINK_state},
		MID.QSEB15DEF.QSEB16DEF.LINK{LINK_state},
		MID.SVDU16D.QSEB15DEF.LINK{LINK_state},
		MID.SVDU16E.QSEB15DEF.LINK{LINK_state},
		MID.SVDU16F.QSEB15DEF.LINK{LINK_state},
		MID.QSEB16DEF.QSEB15DEF.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17D.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17E.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17F.LINK{LINK_state},
		MID.QSEB16DEF.QSEB17DEF.LINK{LINK_state},
		MID.SVDU17D.QSEB16DEF.LINK{LINK_state},
		MID.SVDU17E.QSEB16DEF.LINK{LINK_state},
		MID.SVDU17F.QSEB16DEF.LINK{LINK_state},
		MID.QSEB17DEF.QSEB16DEF.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18D.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18E.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18F.LINK{LINK_state},
		MID.QSEB17DEF.QSEB18DEF.LINK{LINK_state},
		MID.SVDU18D.QSEB17DEF.LINK{LINK_state},
		MID.SVDU18E.QSEB17DEF.LINK{LINK_state},
		MID.SVDU18F.QSEB17DEF.LINK{LINK_state},
		MID.QSEB18DEF.QSEB17DEF.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19D.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19E.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19F.LINK{LINK_state},
		MID.QSEB18DEF.ADBG2.LINK{LINK_state},
		MID.SVDU19D.QSEB18DEF.LINK{LINK_state},
		MID.SVDU19E.QSEB18DEF.LINK{LINK_state},
		MID.SVDU19F.QSEB18DEF.LINK{LINK_state},
		MID.QSEB10ABC.ADBG1.LINK{LINK_state},
		MID.QSEB10ABC.QSEB9ABC.LINK{LINK_state},
		MID.QSEB9ABC.QSEB10ABC.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10A.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10B.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10C.LINK{LINK_state},
		MID.QSEB9ABC.QSEB_9ABC.LINK{LINK_state},
		MID.SVDU10A.QSEB9ABC.LINK{LINK_state},
		MID.SVDU10B.QSEB9ABC.LINK{LINK_state},
		MID.SVDU10C.QSEB9ABC.LINK{LINK_state},
		MID.QSEB_9ABC.QSEB9ABC.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8A.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8B.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8C.LINK{LINK_state},
		MID.QSEB_9ABC.QSEB8ABC.LINK{LINK_state},
		MID.SVDU8A.QSEB_9ABC.LINK{LINK_state},
		MID.SVDU8B.QSEB_9ABC.LINK{LINK_state},
		MID.SVDU8C.QSEB_9ABC.LINK{LINK_state},
		MID.QSEB8ABC.QSEB_9ABC.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9A.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9B.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9C.LINK{LINK_state},
		MID.QSEB8ABC.QSEB30ABC.LINK{LINK_state},
		MID.SVDU9A.QSEB8ABC.LINK{LINK_state},
		MID.SVDU9B.QSEB8ABC.LINK{LINK_state},
		MID.SVDU9C.QSEB8ABC.LINK{LINK_state},
		MID.QSEB30ABC.QSEB8ABC.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31A.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31B.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31C.LINK{LINK_state},
		MID.QSEB30ABC.QSEB29ABC.LINK{LINK_state},
		MID.SVDU31A.QSEB30ABC.LINK{LINK_state},
		MID.SVDU31B.QSEB30ABC.LINK{LINK_state},
		MID.SVDU31C.QSEB30ABC.LINK{LINK_state},
		MID.QSEB29ABC.QSEB30ABC.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30A.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30B.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30C.LINK{LINK_state},
		MID.QSEB29ABC.QSEB28ABC.LINK{LINK_state},
		MID.SVDU30A.QSEB29ABC.LINK{LINK_state},
		MID.SVDU30B.QSEB29ABC.LINK{LINK_state},
		MID.SVDU30C.QSEB29ABC.LINK{LINK_state},
		MID.QSEB28ABC.QSEB29ABC.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29A.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29B.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29C.LINK{LINK_state},
		MID.QSEB28ABC.QSEB27ABC.LINK{LINK_state},
		MID.SVDU29A.QSEB28ABC.LINK{LINK_state},
		MID.SVDU29B.QSEB28ABC.LINK{LINK_state},
		MID.SVDU29C.QSEB28ABC.LINK{LINK_state},
		MID.QSEB27ABC.QSEB28ABC.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28A.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28B.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28C.LINK{LINK_state},
		MID.QSEB27ABC.QSEB26ABC.LINK{LINK_state},
		MID.SVDU28A.QSEB27ABC.LINK{LINK_state},
		MID.SVDU28B.QSEB27ABC.LINK{LINK_state},
		MID.SVDU28C.QSEB27ABC.LINK{LINK_state},
		MID.QSEB26ABC.QSEB27ABC.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27A.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27B.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27C.LINK{LINK_state},
		MID.QSEB26ABC.QSEB25ABC.LINK{LINK_state},
		MID.SVDU27A.QSEB26ABC.LINK{LINK_state},
		MID.SVDU27B.QSEB26ABC.LINK{LINK_state},
		MID.SVDU27C.QSEB26ABC.LINK{LINK_state},
		MID.QSEB25ABC.QSEB26ABC.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26A.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26B.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26C.LINK{LINK_state},
		MID.QSEB25ABC.SVDU25A.LINK{LINK_state},
		MID.QSEB25ABC.QSEB24BC.LINK{LINK_state},
		MID.SVDU26A.QSEB25ABC.LINK{LINK_state},
		MID.SVDU26B.QSEB25ABC.LINK{LINK_state},
		MID.SVDU26C.QSEB25ABC.LINK{LINK_state},
		MID.SVDU25A.QSEB25ABC.LINK{LINK_state},
		MID.QSEB24BC.QSEB25ABC.LINK{LINK_state},
		MID.QSEB24BC.SVDU24B.LINK{LINK_state},
		MID.QSEB24BC.SVDU24C.LINK{LINK_state},
		MID.QSEB24BC.SVDU25B.LINK{LINK_state},
		MID.QSEB24BC.SVDU25C.LINK{LINK_state},
		MID.QSEB24BC.QSEB35ABC.LINK{LINK_state},
		MID.SVDU24B.QSEB24BC.LINK{LINK_state},
		MID.SVDU24C.QSEB24BC.LINK{LINK_state},
		MID.SVDU25B.QSEB24BC.LINK{LINK_state},
		MID.SVDU25C.QSEB24BC.LINK{LINK_state},
		MID.QSEB35ABC.QSEB24BC.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36A.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36B.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36C.LINK{LINK_state},
		MID.QSEB35ABC.QSEB34ABC.LINK{LINK_state},
		MID.SVDU36A.QSEB35ABC.LINK{LINK_state},
		MID.SVDU36B.QSEB35ABC.LINK{LINK_state},
		MID.SVDU36C.QSEB35ABC.LINK{LINK_state},
		MID.QSEB34ABC.QSEB35ABC.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35A.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35B.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35C.LINK{LINK_state},
		MID.QSEB34ABC.QSEB33ABC.LINK{LINK_state},
		MID.SVDU35A.QSEB34ABC.LINK{LINK_state},
		MID.SVDU35B.QSEB34ABC.LINK{LINK_state},
		MID.SVDU35C.QSEB34ABC.LINK{LINK_state},
		MID.QSEB33ABC.QSEB34ABC.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34A.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34B.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34C.LINK{LINK_state},
		MID.QSEB33ABC.QSEB32ABC.LINK{LINK_state},
		MID.SVDU34A.QSEB33ABC.LINK{LINK_state},
		MID.SVDU34B.QSEB33ABC.LINK{LINK_state},
		MID.SVDU34C.QSEB33ABC.LINK{LINK_state},
		MID.QSEB32ABC.QSEB33ABC.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33A.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33B.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33C.LINK{LINK_state},
		MID.QSEB32ABC.QSEB31ABC.LINK{LINK_state},
		MID.SVDU33A.QSEB32ABC.LINK{LINK_state},
		MID.SVDU33B.QSEB32ABC.LINK{LINK_state},
		MID.SVDU33C.QSEB32ABC.LINK{LINK_state},
		MID.QSEB31ABC.QSEB32ABC.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32A.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32B.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32C.LINK{LINK_state},
		MID.QSEB31ABC.ADBG2.LINK{LINK_state},
		MID.SVDU32A.QSEB31ABC.LINK{LINK_state},
		MID.SVDU32B.QSEB31ABC.LINK{LINK_state},
		MID.SVDU32C.QSEB31ABC.LINK{LINK_state},
		MID.QSEB8DEF.ADBG1.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9D.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9E.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9F.LINK{LINK_state},
		MID.QSEB8DEF.QSEB9_DEF.LINK{LINK_state},
		MID.SVDU9D.QSEB8DEF.LINK{LINK_state},
		MID.SVDU9E.QSEB8DEF.LINK{LINK_state},
		MID.SVDU9F.QSEB8DEF.LINK{LINK_state},
		MID.QSEB9_DEF.QSEB8DEF.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8D.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8E.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8F.LINK{LINK_state},
		MID.QSEB9_DEF.QSEB9DEF.LINK{LINK_state},
		MID.SVDU8D.QSEB9_DEF.LINK{LINK_state},
		MID.SVDU8E.QSEB9_DEF.LINK{LINK_state},
		MID.SVDU8F.QSEB9_DEF.LINK{LINK_state},
		MID.QSEB9DEF.QSEB9_DEF.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10D.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10E.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10F.LINK{LINK_state},
		MID.QSEB9DEF.QSEB10DEF.LINK{LINK_state},
		MID.SVDU10D.QSEB9DEF.LINK{LINK_state},
		MID.SVDU10E.QSEB9DEF.LINK{LINK_state},
		MID.SVDU10F.QSEB9DEF.LINK{LINK_state},
		MID.QSEB10DEF.QSEB9DEF.LINK{LINK_state},
		MID.QSEB10DEF.QSEB31DEF.LINK{LINK_state},
		MID.QSEB31DEF.QSEB10DEF.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32D.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32E.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32F.LINK{LINK_state},
		MID.QSEB31DEF.QSEB32DEF.LINK{LINK_state},
		MID.SVDU32D.QSEB31DEF.LINK{LINK_state},
		MID.SVDU32E.QSEB31DEF.LINK{LINK_state},
		MID.SVDU32F.QSEB31DEF.LINK{LINK_state},
		MID.QSEB32DEF.QSEB31DEF.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33D.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33E.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33F.LINK{LINK_state},
		MID.QSEB32DEF.QSEB33DEF.LINK{LINK_state},
		MID.SVDU33D.QSEB32DEF.LINK{LINK_state},
		MID.SVDU33E.QSEB32DEF.LINK{LINK_state},
		MID.SVDU33F.QSEB32DEF.LINK{LINK_state},
		MID.QSEB33DEF.QSEB32DEF.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34D.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34E.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34F.LINK{LINK_state},
		MID.QSEB33DEF.QSEB34DEF.LINK{LINK_state},
		MID.SVDU34D.QSEB33DEF.LINK{LINK_state},
		MID.SVDU34E.QSEB33DEF.LINK{LINK_state},
		MID.SVDU34F.QSEB33DEF.LINK{LINK_state},
		MID.QSEB34DEF.QSEB33DEF.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35D.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35E.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35F.LINK{LINK_state},
		MID.QSEB34DEF.QSEB35DEF.LINK{LINK_state},
		MID.SVDU35D.QSEB34DEF.LINK{LINK_state},
		MID.SVDU35E.QSEB34DEF.LINK{LINK_state},
		MID.SVDU35F.QSEB34DEF.LINK{LINK_state},
		MID.QSEB35DEF.QSEB34DEF.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36D.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36E.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36F.LINK{LINK_state},
		MID.QSEB35DEF.QSEB24DE.LINK{LINK_state},
		MID.SVDU36D.QSEB35DEF.LINK{LINK_state},
		MID.SVDU36E.QSEB35DEF.LINK{LINK_state},
		MID.SVDU36F.QSEB35DEF.LINK{LINK_state},
		MID.QSEB24DE.QSEB35DEF.LINK{LINK_state},
		MID.QSEB24DE.SVDU24D.LINK{LINK_state},
		MID.QSEB24DE.SVDU24E.LINK{LINK_state},
		MID.QSEB24DE.SVDU25D.LINK{LINK_state},
		MID.QSEB24DE.SVDU25E.LINK{LINK_state},
		MID.QSEB24DE.QSEB25DEF.LINK{LINK_state},
		MID.SVDU24D.QSEB24DE.LINK{LINK_state},
		MID.SVDU24E.QSEB24DE.LINK{LINK_state},
		MID.SVDU25D.QSEB24DE.LINK{LINK_state},
		MID.SVDU25E.QSEB24DE.LINK{LINK_state},
		MID.QSEB25DEF.QSEB24DE.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26D.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26E.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26F.LINK{LINK_state},
		MID.QSEB25DEF.SVDU25F.LINK{LINK_state},
		MID.QSEB25DEF.QSEB26DEF.LINK{LINK_state},
		MID.SVDU26D.QSEB25DEF.LINK{LINK_state},
		MID.SVDU26E.QSEB25DEF.LINK{LINK_state},
		MID.SVDU26F.QSEB25DEF.LINK{LINK_state},
		MID.SVDU25F.QSEB25DEF.LINK{LINK_state},
		MID.QSEB26DEF.QSEB25DEF.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27D.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27E.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27F.LINK{LINK_state},
		MID.QSEB26DEF.QSEB27DEF.LINK{LINK_state},
		MID.SVDU27D.QSEB26DEF.LINK{LINK_state},
		MID.SVDU27E.QSEB26DEF.LINK{LINK_state},
		MID.SVDU27F.QSEB26DEF.LINK{LINK_state},
		MID.QSEB27DEF.QSEB26DEF.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28D.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28E.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28F.LINK{LINK_state},
		MID.QSEB27DEF.QSEB28DEF.LINK{LINK_state},
		MID.SVDU28D.QSEB27DEF.LINK{LINK_state},
		MID.SVDU28E.QSEB27DEF.LINK{LINK_state},
		MID.SVDU28F.QSEB27DEF.LINK{LINK_state},
		MID.QSEB28DEF.QSEB27DEF.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29D.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29E.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29F.LINK{LINK_state},
		MID.QSEB28DEF.QSEB29DEF.LINK{LINK_state},
		MID.SVDU29D.QSEB28DEF.LINK{LINK_state},
		MID.SVDU29E.QSEB28DEF.LINK{LINK_state},
		MID.SVDU29F.QSEB28DEF.LINK{LINK_state},
		MID.QSEB29DEF.QSEB28DEF.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30D.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30E.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30F.LINK{LINK_state},
		MID.QSEB29DEF.QSEB30DEF.LINK{LINK_state},
		MID.SVDU30D.QSEB29DEF.LINK{LINK_state},
		MID.SVDU30E.QSEB29DEF.LINK{LINK_state},
		MID.SVDU30F.QSEB29DEF.LINK{LINK_state},
		MID.QSEB30DEF.QSEB29DEF.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31D.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31E.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31F.LINK{LINK_state},
		MID.QSEB30DEF.ADBG2.LINK{LINK_state},
		MID.SVDU31D.QSEB30DEF.LINK{LINK_state},
		MID.SVDU31E.QSEB30DEF.LINK{LINK_state},
		MID.SVDU31F.QSEB30DEF.LINK{LINK_state};
	PROVIDES_SERVICE
		AVCDM1_DSU1.ALIVE{bool},
		ADBG1_DSU1.ALIVE{bool},
		QSEBVCC_DSU1.ALIVE{bool},
		DSU2_DSU1.ALIVE{bool};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE AVCDM1_DSU1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE ADBG1_DSU1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEBVCC_DSU1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU2_DSU1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
END

RESOURCE L_DSU1_AVCDM1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_AVCDM1_DSU1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEBVCC{OK,KO}
	CONSUMES_SERVICE
		QSEBVCC_DSU1.ALIVE{bool},
		QSEBVCC_ICMT1.ALIVE{bool};
	PROVIDES_SERVICE
		DSU1_QSEBVCC.ALIVE{bool},
		ICMT1_QSEBVCC.ALIVE{bool},
		MID.QSEBVCC{MID_state},
		Communication{okko},
		MID.QSEBVCC.DSU1.LINK{LINK_state},
		MID.QSEBVCC.ICMT1.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE DSU1_QSEBVCC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE ICMT1_QSEBVCC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEBVCC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEBVCC.DSU1.LINK DEPENDS_ON QSEBVCC_DSU1.ALIVE, status:
		DEAD IF QSEBVCC_DSU1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEBVCC.ICMT1.LINK DEPENDS_ON QSEBVCC_ICMT1.ALIVE, status:
		DEAD IF QSEBVCC_ICMT1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_DSU1_QSEBVCC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEBVCC_DSU1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_DSU1_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG1_DSU1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE DSU2{OK,KO}
	CONSUMES_SERVICE
		DSU2_DSU1.ALIVE{bool},
		DSU2_AVCDM1.ALIVE{bool},
		DSU2_ADBG2.ALIVE{bool};
	PROVIDES_SERVICE
		AVCDM1_DSU2.ALIVE{bool},
		ADBG2_DSU2.ALIVE{bool},
		DSU1_DSU2.ALIVE{bool},
		MID.DSU2{MID_state},
		MID.DSU2.DSU1.LINK{LINK_state},
		MID.DSU2.AVCDM1.LINK{LINK_state},
		MID.DSU2.ADBG2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE AVCDM1_DSU2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE ADBG2_DSU2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE DSU1_DSU2.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.DSU2 DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.DSU2.DSU1.LINK DEPENDS_ON DSU2_DSU1.ALIVE, status:
		DEAD IF DSU2_DSU1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.DSU2.AVCDM1.LINK DEPENDS_ON DSU2_AVCDM1.ALIVE, status:
		DEAD IF DSU2_AVCDM1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.DSU2.ADBG2.LINK DEPENDS_ON DSU2_ADBG2.ALIVE, status:
		DEAD IF DSU2_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_DSU1_DSU2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_DSU2_DSU1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_DSU2_AVCDM1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_AVCDM1_DSU2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_DSU2_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_DSU2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE ICMT1{OK,KO}
	CONSUMES_SERVICE
		ICMT1_QSEBVCC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEBVCC_ICMT1.ALIVE{bool},
		MID.ICMT1{MID_state},
		MID.ICMT1.QSEBVCC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEBVCC_ICMT1.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.ICMT1 DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.ICMT1.QSEBVCC.LINK DEPENDS_ON ICMT1_QSEBVCC.ALIVE, status:
		DEAD IF ICMT1_QSEBVCC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEBVCC_ICMT1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ICMT1_QSEBVCC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB4AC{OK,KO}
	CONSUMES_SERVICE
		QSEB4AC_ADBG1.ALIVE{bool},
		QSEB4AC_SVDU4A.ALIVE{bool},
		QSEB4AC_SVDU4C.ALIVE{bool},
		QSEB4AC_QSEB3AC.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG1_QSEB4AC.ALIVE{bool},
		SVDU4A_QSEB4AC.ALIVE{bool},
		SVDU4C_QSEB4AC.ALIVE{bool},
		QSEB3AC_QSEB4AC.ALIVE{bool},
		MID.QSEB4AC{MID_state},
		Communication{okko},
		MID.QSEB4AC.ADBG1.LINK{LINK_state},
		MID.QSEB4AC.SVDU4A.LINK{LINK_state},
		MID.QSEB4AC.SVDU4C.LINK{LINK_state},
		MID.QSEB4AC.QSEB3AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG1_QSEB4AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU4A_QSEB4AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU4C_QSEB4AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB3AC_QSEB4AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB4AC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB4AC.ADBG1.LINK DEPENDS_ON QSEB4AC_ADBG1.ALIVE, status:
		DEAD IF QSEB4AC_ADBG1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4AC.SVDU4A.LINK DEPENDS_ON QSEB4AC_SVDU4A.ALIVE, status:
		DEAD IF QSEB4AC_SVDU4A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4AC.SVDU4C.LINK DEPENDS_ON QSEB4AC_SVDU4C.ALIVE, status:
		DEAD IF QSEB4AC_SVDU4C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4AC.QSEB3AC.LINK DEPENDS_ON QSEB4AC_QSEB3AC.ALIVE, status:
		DEAD IF QSEB4AC_QSEB3AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_ADBG1_QSEB4AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB4AC_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU4A{OK,KO}
	CONSUMES_SERVICE
		SVDU4A_QSEB4AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4AC_SVDU4A.ALIVE{bool},
		MID.SVDU4A{MID_state},
		MID.SVDU4A.QSEB4AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4AC_SVDU4A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU4A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU4A.QSEB4AC.LINK DEPENDS_ON SVDU4A_QSEB4AC.ALIVE, status:
		DEAD IF SVDU4A_QSEB4AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4AC_SVDU4A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU4A_QSEB4AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU4C{OK,KO}
	CONSUMES_SERVICE
		SVDU4C_QSEB4AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4AC_SVDU4C.ALIVE{bool},
		MID.SVDU4C{MID_state},
		MID.SVDU4C.QSEB4AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4AC_SVDU4C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU4C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU4C.QSEB4AC.LINK DEPENDS_ON SVDU4C_QSEB4AC.ALIVE, status:
		DEAD IF SVDU4C_QSEB4AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4AC_SVDU4C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU4C_QSEB4AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB3AC{OK,KO}
	CONSUMES_SERVICE
		QSEB3AC_QSEB4AC.ALIVE{bool},
		QSEB3AC_SVDU3A.ALIVE{bool},
		QSEB3AC_SVDU3C.ALIVE{bool},
		QSEB3AC_QSEB2AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4AC_QSEB3AC.ALIVE{bool},
		SVDU3A_QSEB3AC.ALIVE{bool},
		SVDU3C_QSEB3AC.ALIVE{bool},
		QSEB2AC_QSEB3AC.ALIVE{bool},
		MID.QSEB3AC{MID_state},
		Communication{okko},
		MID.QSEB3AC.QSEB4AC.LINK{LINK_state},
		MID.QSEB3AC.SVDU3A.LINK{LINK_state},
		MID.QSEB3AC.SVDU3C.LINK{LINK_state},
		MID.QSEB3AC.QSEB2AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4AC_QSEB3AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU3A_QSEB3AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU3C_QSEB3AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB2AC_QSEB3AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB3AC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB3AC.QSEB4AC.LINK DEPENDS_ON QSEB3AC_QSEB4AC.ALIVE, status:
		DEAD IF QSEB3AC_QSEB4AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3AC.SVDU3A.LINK DEPENDS_ON QSEB3AC_SVDU3A.ALIVE, status:
		DEAD IF QSEB3AC_SVDU3A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3AC.SVDU3C.LINK DEPENDS_ON QSEB3AC_SVDU3C.ALIVE, status:
		DEAD IF QSEB3AC_SVDU3C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3AC.QSEB2AC.LINK DEPENDS_ON QSEB3AC_QSEB2AC.ALIVE, status:
		DEAD IF QSEB3AC_QSEB2AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4AC_QSEB3AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB3AC_QSEB4AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU3A{OK,KO}
	CONSUMES_SERVICE
		SVDU3A_QSEB3AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3AC_SVDU3A.ALIVE{bool},
		MID.SVDU3A{MID_state},
		MID.SVDU3A.QSEB3AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3AC_SVDU3A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU3A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU3A.QSEB3AC.LINK DEPENDS_ON SVDU3A_QSEB3AC.ALIVE, status:
		DEAD IF SVDU3A_QSEB3AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3AC_SVDU3A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU3A_QSEB3AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU3C{OK,KO}
	CONSUMES_SERVICE
		SVDU3C_QSEB3AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3AC_SVDU3C.ALIVE{bool},
		MID.SVDU3C{MID_state},
		MID.SVDU3C.QSEB3AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3AC_SVDU3C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU3C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU3C.QSEB3AC.LINK DEPENDS_ON SVDU3C_QSEB3AC.ALIVE, status:
		DEAD IF SVDU3C_QSEB3AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3AC_SVDU3C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU3C_QSEB3AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB2AC{OK,KO}
	CONSUMES_SERVICE
		QSEB2AC_QSEB3AC.ALIVE{bool},
		QSEB2AC_SVDU2A.ALIVE{bool},
		QSEB2AC_SVDU2C.ALIVE{bool},
		QSEB2AC_QSEB1AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3AC_QSEB2AC.ALIVE{bool},
		SVDU2A_QSEB2AC.ALIVE{bool},
		SVDU2C_QSEB2AC.ALIVE{bool},
		QSEB1AC_QSEB2AC.ALIVE{bool},
		MID.QSEB2AC{MID_state},
		Communication{okko},
		MID.QSEB2AC.QSEB3AC.LINK{LINK_state},
		MID.QSEB2AC.SVDU2A.LINK{LINK_state},
		MID.QSEB2AC.SVDU2C.LINK{LINK_state},
		MID.QSEB2AC.QSEB1AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3AC_QSEB2AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU2A_QSEB2AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU2C_QSEB2AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB1AC_QSEB2AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB2AC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB2AC.QSEB3AC.LINK DEPENDS_ON QSEB2AC_QSEB3AC.ALIVE, status:
		DEAD IF QSEB2AC_QSEB3AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2AC.SVDU2A.LINK DEPENDS_ON QSEB2AC_SVDU2A.ALIVE, status:
		DEAD IF QSEB2AC_SVDU2A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2AC.SVDU2C.LINK DEPENDS_ON QSEB2AC_SVDU2C.ALIVE, status:
		DEAD IF QSEB2AC_SVDU2C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2AC.QSEB1AC.LINK DEPENDS_ON QSEB2AC_QSEB1AC.ALIVE, status:
		DEAD IF QSEB2AC_QSEB1AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3AC_QSEB2AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB2AC_QSEB3AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU2A{OK,KO}
	CONSUMES_SERVICE
		SVDU2A_QSEB2AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2AC_SVDU2A.ALIVE{bool},
		MID.SVDU2A{MID_state},
		MID.SVDU2A.QSEB2AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2AC_SVDU2A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU2A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU2A.QSEB2AC.LINK DEPENDS_ON SVDU2A_QSEB2AC.ALIVE, status:
		DEAD IF SVDU2A_QSEB2AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2AC_SVDU2A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU2A_QSEB2AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU2C{OK,KO}
	CONSUMES_SERVICE
		SVDU2C_QSEB2AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2AC_SVDU2C.ALIVE{bool},
		MID.SVDU2C{MID_state},
		MID.SVDU2C.QSEB2AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2AC_SVDU2C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU2C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU2C.QSEB2AC.LINK DEPENDS_ON SVDU2C_QSEB2AC.ALIVE, status:
		DEAD IF SVDU2C_QSEB2AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2AC_SVDU2C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU2C_QSEB2AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB1AC{OK,KO}
	CONSUMES_SERVICE
		QSEB1AC_QSEB2AC.ALIVE{bool},
		QSEB1AC_SVDU1A.ALIVE{bool},
		QSEB1AC_SVDU1C.ALIVE{bool},
		QSEB1AC_QSEB17ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2AC_QSEB1AC.ALIVE{bool},
		SVDU1A_QSEB1AC.ALIVE{bool},
		SVDU1C_QSEB1AC.ALIVE{bool},
		QSEB17ABC_QSEB1AC.ALIVE{bool},
		MID.QSEB1AC{MID_state},
		Communication{okko},
		MID.QSEB1AC.QSEB2AC.LINK{LINK_state},
		MID.QSEB1AC.SVDU1A.LINK{LINK_state},
		MID.QSEB1AC.SVDU1C.LINK{LINK_state},
		MID.QSEB1AC.QSEB17ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2AC_QSEB1AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU1A_QSEB1AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU1C_QSEB1AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB17ABC_QSEB1AC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB1AC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB1AC.QSEB2AC.LINK DEPENDS_ON QSEB1AC_QSEB2AC.ALIVE, status:
		DEAD IF QSEB1AC_QSEB2AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1AC.SVDU1A.LINK DEPENDS_ON QSEB1AC_SVDU1A.ALIVE, status:
		DEAD IF QSEB1AC_SVDU1A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1AC.SVDU1C.LINK DEPENDS_ON QSEB1AC_SVDU1C.ALIVE, status:
		DEAD IF QSEB1AC_SVDU1C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1AC.QSEB17ABC.LINK DEPENDS_ON QSEB1AC_QSEB17ABC.ALIVE, status:
		DEAD IF QSEB1AC_QSEB17ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2AC_QSEB1AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB1AC_QSEB2AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU1A{OK,KO}
	CONSUMES_SERVICE
		SVDU1A_QSEB1AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1AC_SVDU1A.ALIVE{bool},
		MID.SVDU1A{MID_state},
		MID.SVDU1A.QSEB1AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1AC_SVDU1A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU1A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU1A.QSEB1AC.LINK DEPENDS_ON SVDU1A_QSEB1AC.ALIVE, status:
		DEAD IF SVDU1A_QSEB1AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1AC_SVDU1A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU1A_QSEB1AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU1C{OK,KO}
	CONSUMES_SERVICE
		SVDU1C_QSEB1AC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1AC_SVDU1C.ALIVE{bool},
		MID.SVDU1C{MID_state},
		MID.SVDU1C.QSEB1AC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1AC_SVDU1C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU1C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU1C.QSEB1AC.LINK DEPENDS_ON SVDU1C_QSEB1AC.ALIVE, status:
		DEAD IF SVDU1C_QSEB1AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1AC_SVDU1C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU1C_QSEB1AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB17ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB17ABC_QSEB1AC.ALIVE{bool},
		QSEB17ABC_SVDU18A.ALIVE{bool},
		QSEB17ABC_SVDU18B.ALIVE{bool},
		QSEB17ABC_SVDU18C.ALIVE{bool},
		QSEB17ABC_QSEB16ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1AC_QSEB17ABC.ALIVE{bool},
		SVDU18A_QSEB17ABC.ALIVE{bool},
		SVDU18B_QSEB17ABC.ALIVE{bool},
		SVDU18C_QSEB17ABC.ALIVE{bool},
		QSEB16ABC_QSEB17ABC.ALIVE{bool},
		MID.QSEB17ABC{MID_state},
		Communication{okko},
		MID.QSEB17ABC.QSEB1AC.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18A.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18B.LINK{LINK_state},
		MID.QSEB17ABC.SVDU18C.LINK{LINK_state},
		MID.QSEB17ABC.QSEB16ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1AC_QSEB17ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18A_QSEB17ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18B_QSEB17ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18C_QSEB17ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB16ABC_QSEB17ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB17ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB17ABC.QSEB1AC.LINK DEPENDS_ON QSEB17ABC_QSEB1AC.ALIVE, status:
		DEAD IF QSEB17ABC_QSEB1AC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17ABC.SVDU18A.LINK DEPENDS_ON QSEB17ABC_SVDU18A.ALIVE, status:
		DEAD IF QSEB17ABC_SVDU18A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17ABC.SVDU18B.LINK DEPENDS_ON QSEB17ABC_SVDU18B.ALIVE, status:
		DEAD IF QSEB17ABC_SVDU18B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17ABC.SVDU18C.LINK DEPENDS_ON QSEB17ABC_SVDU18C.ALIVE, status:
		DEAD IF QSEB17ABC_SVDU18C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17ABC.QSEB16ABC.LINK DEPENDS_ON QSEB17ABC_QSEB16ABC.ALIVE, status:
		DEAD IF QSEB17ABC_QSEB16ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1AC_QSEB17ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB17ABC_QSEB1AC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18A{OK,KO}
	CONSUMES_SERVICE
		SVDU18A_QSEB17ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17ABC_SVDU18A.ALIVE{bool},
		MID.SVDU18A{MID_state},
		MID.SVDU18A.QSEB17ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17ABC_SVDU18A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18A.QSEB17ABC.LINK DEPENDS_ON SVDU18A_QSEB17ABC.ALIVE, status:
		DEAD IF SVDU18A_QSEB17ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17ABC_SVDU18A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18A_QSEB17ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18B{OK,KO}
	CONSUMES_SERVICE
		SVDU18B_QSEB17ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17ABC_SVDU18B.ALIVE{bool},
		MID.SVDU18B{MID_state},
		MID.SVDU18B.QSEB17ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17ABC_SVDU18B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18B.QSEB17ABC.LINK DEPENDS_ON SVDU18B_QSEB17ABC.ALIVE, status:
		DEAD IF SVDU18B_QSEB17ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17ABC_SVDU18B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18B_QSEB17ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18C{OK,KO}
	CONSUMES_SERVICE
		SVDU18C_QSEB17ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17ABC_SVDU18C.ALIVE{bool},
		MID.SVDU18C{MID_state},
		MID.SVDU18C.QSEB17ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17ABC_SVDU18C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18C.QSEB17ABC.LINK DEPENDS_ON SVDU18C_QSEB17ABC.ALIVE, status:
		DEAD IF SVDU18C_QSEB17ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17ABC_SVDU18C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18C_QSEB17ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB16ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB16ABC_QSEB17ABC.ALIVE{bool},
		QSEB16ABC_SVDU17A.ALIVE{bool},
		QSEB16ABC_SVDU17B.ALIVE{bool},
		QSEB16ABC_SVDU17C.ALIVE{bool},
		QSEB16ABC_QSEB15ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17ABC_QSEB16ABC.ALIVE{bool},
		SVDU17A_QSEB16ABC.ALIVE{bool},
		SVDU17B_QSEB16ABC.ALIVE{bool},
		SVDU17C_QSEB16ABC.ALIVE{bool},
		QSEB15ABC_QSEB16ABC.ALIVE{bool},
		MID.QSEB16ABC{MID_state},
		Communication{okko},
		MID.QSEB16ABC.QSEB17ABC.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17A.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17B.LINK{LINK_state},
		MID.QSEB16ABC.SVDU17C.LINK{LINK_state},
		MID.QSEB16ABC.QSEB15ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17ABC_QSEB16ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17A_QSEB16ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17B_QSEB16ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17C_QSEB16ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB15ABC_QSEB16ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB16ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB16ABC.QSEB17ABC.LINK DEPENDS_ON QSEB16ABC_QSEB17ABC.ALIVE, status:
		DEAD IF QSEB16ABC_QSEB17ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16ABC.SVDU17A.LINK DEPENDS_ON QSEB16ABC_SVDU17A.ALIVE, status:
		DEAD IF QSEB16ABC_SVDU17A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16ABC.SVDU17B.LINK DEPENDS_ON QSEB16ABC_SVDU17B.ALIVE, status:
		DEAD IF QSEB16ABC_SVDU17B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16ABC.SVDU17C.LINK DEPENDS_ON QSEB16ABC_SVDU17C.ALIVE, status:
		DEAD IF QSEB16ABC_SVDU17C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16ABC.QSEB15ABC.LINK DEPENDS_ON QSEB16ABC_QSEB15ABC.ALIVE, status:
		DEAD IF QSEB16ABC_QSEB15ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17ABC_QSEB16ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB16ABC_QSEB17ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17A{OK,KO}
	CONSUMES_SERVICE
		SVDU17A_QSEB16ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16ABC_SVDU17A.ALIVE{bool},
		MID.SVDU17A{MID_state},
		MID.SVDU17A.QSEB16ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16ABC_SVDU17A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17A.QSEB16ABC.LINK DEPENDS_ON SVDU17A_QSEB16ABC.ALIVE, status:
		DEAD IF SVDU17A_QSEB16ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16ABC_SVDU17A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17A_QSEB16ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17B{OK,KO}
	CONSUMES_SERVICE
		SVDU17B_QSEB16ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16ABC_SVDU17B.ALIVE{bool},
		MID.SVDU17B{MID_state},
		MID.SVDU17B.QSEB16ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16ABC_SVDU17B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17B.QSEB16ABC.LINK DEPENDS_ON SVDU17B_QSEB16ABC.ALIVE, status:
		DEAD IF SVDU17B_QSEB16ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16ABC_SVDU17B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17B_QSEB16ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17C{OK,KO}
	CONSUMES_SERVICE
		SVDU17C_QSEB16ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16ABC_SVDU17C.ALIVE{bool},
		MID.SVDU17C{MID_state},
		MID.SVDU17C.QSEB16ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16ABC_SVDU17C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17C.QSEB16ABC.LINK DEPENDS_ON SVDU17C_QSEB16ABC.ALIVE, status:
		DEAD IF SVDU17C_QSEB16ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16ABC_SVDU17C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17C_QSEB16ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB15ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB15ABC_QSEB16ABC.ALIVE{bool},
		QSEB15ABC_SVDU16A.ALIVE{bool},
		QSEB15ABC_SVDU16B.ALIVE{bool},
		QSEB15ABC_SVDU16C.ALIVE{bool},
		QSEB15ABC_QSEB14ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16ABC_QSEB15ABC.ALIVE{bool},
		SVDU16A_QSEB15ABC.ALIVE{bool},
		SVDU16B_QSEB15ABC.ALIVE{bool},
		SVDU16C_QSEB15ABC.ALIVE{bool},
		QSEB14ABC_QSEB15ABC.ALIVE{bool},
		MID.QSEB15ABC{MID_state},
		Communication{okko},
		MID.QSEB15ABC.QSEB16ABC.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16A.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16B.LINK{LINK_state},
		MID.QSEB15ABC.SVDU16C.LINK{LINK_state},
		MID.QSEB15ABC.QSEB14ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16ABC_QSEB15ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16A_QSEB15ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16B_QSEB15ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16C_QSEB15ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB14ABC_QSEB15ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB15ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB15ABC.QSEB16ABC.LINK DEPENDS_ON QSEB15ABC_QSEB16ABC.ALIVE, status:
		DEAD IF QSEB15ABC_QSEB16ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15ABC.SVDU16A.LINK DEPENDS_ON QSEB15ABC_SVDU16A.ALIVE, status:
		DEAD IF QSEB15ABC_SVDU16A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15ABC.SVDU16B.LINK DEPENDS_ON QSEB15ABC_SVDU16B.ALIVE, status:
		DEAD IF QSEB15ABC_SVDU16B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15ABC.SVDU16C.LINK DEPENDS_ON QSEB15ABC_SVDU16C.ALIVE, status:
		DEAD IF QSEB15ABC_SVDU16C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15ABC.QSEB14ABC.LINK DEPENDS_ON QSEB15ABC_QSEB14ABC.ALIVE, status:
		DEAD IF QSEB15ABC_QSEB14ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16ABC_QSEB15ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB15ABC_QSEB16ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16A{OK,KO}
	CONSUMES_SERVICE
		SVDU16A_QSEB15ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15ABC_SVDU16A.ALIVE{bool},
		MID.SVDU16A{MID_state},
		MID.SVDU16A.QSEB15ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15ABC_SVDU16A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16A.QSEB15ABC.LINK DEPENDS_ON SVDU16A_QSEB15ABC.ALIVE, status:
		DEAD IF SVDU16A_QSEB15ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15ABC_SVDU16A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16A_QSEB15ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16B{OK,KO}
	CONSUMES_SERVICE
		SVDU16B_QSEB15ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15ABC_SVDU16B.ALIVE{bool},
		MID.SVDU16B{MID_state},
		MID.SVDU16B.QSEB15ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15ABC_SVDU16B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16B.QSEB15ABC.LINK DEPENDS_ON SVDU16B_QSEB15ABC.ALIVE, status:
		DEAD IF SVDU16B_QSEB15ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15ABC_SVDU16B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16B_QSEB15ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16C{OK,KO}
	CONSUMES_SERVICE
		SVDU16C_QSEB15ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15ABC_SVDU16C.ALIVE{bool},
		MID.SVDU16C{MID_state},
		MID.SVDU16C.QSEB15ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15ABC_SVDU16C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16C.QSEB15ABC.LINK DEPENDS_ON SVDU16C_QSEB15ABC.ALIVE, status:
		DEAD IF SVDU16C_QSEB15ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15ABC_SVDU16C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16C_QSEB15ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB14ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB14ABC_QSEB15ABC.ALIVE{bool},
		QSEB14ABC_SVDU15A.ALIVE{bool},
		QSEB14ABC_SVDU15B.ALIVE{bool},
		QSEB14ABC_SVDU15C.ALIVE{bool},
		QSEB14ABC_QSEB13ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15ABC_QSEB14ABC.ALIVE{bool},
		SVDU15A_QSEB14ABC.ALIVE{bool},
		SVDU15B_QSEB14ABC.ALIVE{bool},
		SVDU15C_QSEB14ABC.ALIVE{bool},
		QSEB13ABC_QSEB14ABC.ALIVE{bool},
		MID.QSEB14ABC{MID_state},
		Communication{okko},
		MID.QSEB14ABC.QSEB15ABC.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15A.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15B.LINK{LINK_state},
		MID.QSEB14ABC.SVDU15C.LINK{LINK_state},
		MID.QSEB14ABC.QSEB13ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15ABC_QSEB14ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15A_QSEB14ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15B_QSEB14ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15C_QSEB14ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB13ABC_QSEB14ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB14ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB14ABC.QSEB15ABC.LINK DEPENDS_ON QSEB14ABC_QSEB15ABC.ALIVE, status:
		DEAD IF QSEB14ABC_QSEB15ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14ABC.SVDU15A.LINK DEPENDS_ON QSEB14ABC_SVDU15A.ALIVE, status:
		DEAD IF QSEB14ABC_SVDU15A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14ABC.SVDU15B.LINK DEPENDS_ON QSEB14ABC_SVDU15B.ALIVE, status:
		DEAD IF QSEB14ABC_SVDU15B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14ABC.SVDU15C.LINK DEPENDS_ON QSEB14ABC_SVDU15C.ALIVE, status:
		DEAD IF QSEB14ABC_SVDU15C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14ABC.QSEB13ABC.LINK DEPENDS_ON QSEB14ABC_QSEB13ABC.ALIVE, status:
		DEAD IF QSEB14ABC_QSEB13ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15ABC_QSEB14ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB14ABC_QSEB15ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15A{OK,KO}
	CONSUMES_SERVICE
		SVDU15A_QSEB14ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14ABC_SVDU15A.ALIVE{bool},
		MID.SVDU15A{MID_state},
		MID.SVDU15A.QSEB14ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14ABC_SVDU15A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15A.QSEB14ABC.LINK DEPENDS_ON SVDU15A_QSEB14ABC.ALIVE, status:
		DEAD IF SVDU15A_QSEB14ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14ABC_SVDU15A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15A_QSEB14ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15B{OK,KO}
	CONSUMES_SERVICE
		SVDU15B_QSEB14ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14ABC_SVDU15B.ALIVE{bool},
		MID.SVDU15B{MID_state},
		MID.SVDU15B.QSEB14ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14ABC_SVDU15B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15B.QSEB14ABC.LINK DEPENDS_ON SVDU15B_QSEB14ABC.ALIVE, status:
		DEAD IF SVDU15B_QSEB14ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14ABC_SVDU15B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15B_QSEB14ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15C{OK,KO}
	CONSUMES_SERVICE
		SVDU15C_QSEB14ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14ABC_SVDU15C.ALIVE{bool},
		MID.SVDU15C{MID_state},
		MID.SVDU15C.QSEB14ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14ABC_SVDU15C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15C.QSEB14ABC.LINK DEPENDS_ON SVDU15C_QSEB14ABC.ALIVE, status:
		DEAD IF SVDU15C_QSEB14ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14ABC_SVDU15C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15C_QSEB14ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB13ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB13ABC_QSEB14ABC.ALIVE{bool},
		QSEB13ABC_SVDU14A.ALIVE{bool},
		QSEB13ABC_SVDU14B.ALIVE{bool},
		QSEB13ABC_SVDU14C.ALIVE{bool},
		QSEB13ABC_QSEB12ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14ABC_QSEB13ABC.ALIVE{bool},
		SVDU14A_QSEB13ABC.ALIVE{bool},
		SVDU14B_QSEB13ABC.ALIVE{bool},
		SVDU14C_QSEB13ABC.ALIVE{bool},
		QSEB12ABC_QSEB13ABC.ALIVE{bool},
		MID.QSEB13ABC{MID_state},
		Communication{okko},
		MID.QSEB13ABC.QSEB14ABC.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14A.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14B.LINK{LINK_state},
		MID.QSEB13ABC.SVDU14C.LINK{LINK_state},
		MID.QSEB13ABC.QSEB12ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14ABC_QSEB13ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14A_QSEB13ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14B_QSEB13ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14C_QSEB13ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB12ABC_QSEB13ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB13ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB13ABC.QSEB14ABC.LINK DEPENDS_ON QSEB13ABC_QSEB14ABC.ALIVE, status:
		DEAD IF QSEB13ABC_QSEB14ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13ABC.SVDU14A.LINK DEPENDS_ON QSEB13ABC_SVDU14A.ALIVE, status:
		DEAD IF QSEB13ABC_SVDU14A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13ABC.SVDU14B.LINK DEPENDS_ON QSEB13ABC_SVDU14B.ALIVE, status:
		DEAD IF QSEB13ABC_SVDU14B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13ABC.SVDU14C.LINK DEPENDS_ON QSEB13ABC_SVDU14C.ALIVE, status:
		DEAD IF QSEB13ABC_SVDU14C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13ABC.QSEB12ABC.LINK DEPENDS_ON QSEB13ABC_QSEB12ABC.ALIVE, status:
		DEAD IF QSEB13ABC_QSEB12ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14ABC_QSEB13ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB13ABC_QSEB14ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14A{OK,KO}
	CONSUMES_SERVICE
		SVDU14A_QSEB13ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13ABC_SVDU14A.ALIVE{bool},
		MID.SVDU14A{MID_state},
		MID.SVDU14A.QSEB13ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13ABC_SVDU14A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14A.QSEB13ABC.LINK DEPENDS_ON SVDU14A_QSEB13ABC.ALIVE, status:
		DEAD IF SVDU14A_QSEB13ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13ABC_SVDU14A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14A_QSEB13ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14B{OK,KO}
	CONSUMES_SERVICE
		SVDU14B_QSEB13ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13ABC_SVDU14B.ALIVE{bool},
		MID.SVDU14B{MID_state},
		MID.SVDU14B.QSEB13ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13ABC_SVDU14B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14B.QSEB13ABC.LINK DEPENDS_ON SVDU14B_QSEB13ABC.ALIVE, status:
		DEAD IF SVDU14B_QSEB13ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13ABC_SVDU14B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14B_QSEB13ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14C{OK,KO}
	CONSUMES_SERVICE
		SVDU14C_QSEB13ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13ABC_SVDU14C.ALIVE{bool},
		MID.SVDU14C{MID_state},
		MID.SVDU14C.QSEB13ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13ABC_SVDU14C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14C.QSEB13ABC.LINK DEPENDS_ON SVDU14C_QSEB13ABC.ALIVE, status:
		DEAD IF SVDU14C_QSEB13ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13ABC_SVDU14C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14C_QSEB13ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB12ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB12ABC_QSEB13ABC.ALIVE{bool},
		QSEB12ABC_SVDU13A.ALIVE{bool},
		QSEB12ABC_SVDU13B.ALIVE{bool},
		QSEB12ABC_SVDU13C.ALIVE{bool},
		QSEB12ABC_QSEB11_ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13ABC_QSEB12ABC.ALIVE{bool},
		SVDU13A_QSEB12ABC.ALIVE{bool},
		SVDU13B_QSEB12ABC.ALIVE{bool},
		SVDU13C_QSEB12ABC.ALIVE{bool},
		QSEB11_ABC_QSEB12ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB12ABC{MID_state},
		MID.QSEB12ABC.QSEB13ABC.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13A.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13B.LINK{LINK_state},
		MID.QSEB12ABC.SVDU13C.LINK{LINK_state},
		MID.QSEB12ABC.QSEB11_ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13ABC_QSEB12ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13A_QSEB12ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13B_QSEB12ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13C_QSEB12ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB11_ABC_QSEB12ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB12ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB12ABC.QSEB13ABC.LINK DEPENDS_ON QSEB12ABC_QSEB13ABC.ALIVE, status:
		DEAD IF QSEB12ABC_QSEB13ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12ABC.SVDU13A.LINK DEPENDS_ON QSEB12ABC_SVDU13A.ALIVE, status:
		DEAD IF QSEB12ABC_SVDU13A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12ABC.SVDU13B.LINK DEPENDS_ON QSEB12ABC_SVDU13B.ALIVE, status:
		DEAD IF QSEB12ABC_SVDU13B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12ABC.SVDU13C.LINK DEPENDS_ON QSEB12ABC_SVDU13C.ALIVE, status:
		DEAD IF QSEB12ABC_SVDU13C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12ABC.QSEB11_ABC.LINK DEPENDS_ON QSEB12ABC_QSEB11_ABC.ALIVE, status:
		DEAD IF QSEB12ABC_QSEB11_ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13ABC_QSEB12ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB12ABC_QSEB13ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13A{OK,KO}
	CONSUMES_SERVICE
		SVDU13A_QSEB12ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12ABC_SVDU13A.ALIVE{bool},
		MID.SVDU13A{MID_state},
		MID.SVDU13A.QSEB12ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12ABC_SVDU13A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13A.QSEB12ABC.LINK DEPENDS_ON SVDU13A_QSEB12ABC.ALIVE, status:
		DEAD IF SVDU13A_QSEB12ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12ABC_SVDU13A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13A_QSEB12ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13B{OK,KO}
	CONSUMES_SERVICE
		SVDU13B_QSEB12ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12ABC_SVDU13B.ALIVE{bool},
		MID.SVDU13B{MID_state},
		MID.SVDU13B.QSEB12ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12ABC_SVDU13B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13B.QSEB12ABC.LINK DEPENDS_ON SVDU13B_QSEB12ABC.ALIVE, status:
		DEAD IF SVDU13B_QSEB12ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12ABC_SVDU13B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13B_QSEB12ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13C{OK,KO}
	CONSUMES_SERVICE
		SVDU13C_QSEB12ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12ABC_SVDU13C.ALIVE{bool},
		MID.SVDU13C{MID_state},
		MID.SVDU13C.QSEB12ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12ABC_SVDU13C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13C.QSEB12ABC.LINK DEPENDS_ON SVDU13C_QSEB12ABC.ALIVE, status:
		DEAD IF SVDU13C_QSEB12ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12ABC_SVDU13C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13C_QSEB12ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB11_ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB11_ABC_QSEB12ABC.ALIVE{bool},
		QSEB11_ABC_SVDU12A.ALIVE{bool},
		QSEB11_ABC_SVDU12B.ALIVE{bool},
		QSEB11_ABC_SVDU12C.ALIVE{bool},
		QSEB11_ABC_QSEB11ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12ABC_QSEB11_ABC.ALIVE{bool},
		SVDU12A_QSEB11_ABC.ALIVE{bool},
		SVDU12B_QSEB11_ABC.ALIVE{bool},
		SVDU12C_QSEB11_ABC.ALIVE{bool},
		QSEB11ABC_QSEB11_ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB11_ABC{MID_state},
		MID.QSEB11_ABC.QSEB12ABC.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12A.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12B.LINK{LINK_state},
		MID.QSEB11_ABC.SVDU12C.LINK{LINK_state},
		MID.QSEB11_ABC.QSEB11ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12ABC_QSEB11_ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12A_QSEB11_ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12B_QSEB11_ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12C_QSEB11_ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB11ABC_QSEB11_ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB11_ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB11_ABC.QSEB12ABC.LINK DEPENDS_ON QSEB11_ABC_QSEB12ABC.ALIVE, status:
		DEAD IF QSEB11_ABC_QSEB12ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11_ABC.SVDU12A.LINK DEPENDS_ON QSEB11_ABC_SVDU12A.ALIVE, status:
		DEAD IF QSEB11_ABC_SVDU12A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11_ABC.SVDU12B.LINK DEPENDS_ON QSEB11_ABC_SVDU12B.ALIVE, status:
		DEAD IF QSEB11_ABC_SVDU12B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11_ABC.SVDU12C.LINK DEPENDS_ON QSEB11_ABC_SVDU12C.ALIVE, status:
		DEAD IF QSEB11_ABC_SVDU12C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11_ABC.QSEB11ABC.LINK DEPENDS_ON QSEB11_ABC_QSEB11ABC.ALIVE, status:
		DEAD IF QSEB11_ABC_QSEB11ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12ABC_QSEB11_ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB11_ABC_QSEB12ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12A{OK,KO}
	CONSUMES_SERVICE
		SVDU12A_QSEB11_ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11_ABC_SVDU12A.ALIVE{bool},
		MID.SVDU12A{MID_state},
		MID.SVDU12A.QSEB11_ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11_ABC_SVDU12A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12A.QSEB11_ABC.LINK DEPENDS_ON SVDU12A_QSEB11_ABC.ALIVE, status:
		DEAD IF SVDU12A_QSEB11_ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11_ABC_SVDU12A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12A_QSEB11_ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12B{OK,KO}
	CONSUMES_SERVICE
		SVDU12B_QSEB11_ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11_ABC_SVDU12B.ALIVE{bool},
		MID.SVDU12B{MID_state},
		MID.SVDU12B.QSEB11_ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11_ABC_SVDU12B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12B.QSEB11_ABC.LINK DEPENDS_ON SVDU12B_QSEB11_ABC.ALIVE, status:
		DEAD IF SVDU12B_QSEB11_ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11_ABC_SVDU12B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12B_QSEB11_ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12C{OK,KO}
	CONSUMES_SERVICE
		SVDU12C_QSEB11_ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11_ABC_SVDU12C.ALIVE{bool},
		MID.SVDU12C{MID_state},
		MID.SVDU12C.QSEB11_ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11_ABC_SVDU12C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12C.QSEB11_ABC.LINK DEPENDS_ON SVDU12C_QSEB11_ABC.ALIVE, status:
		DEAD IF SVDU12C_QSEB11_ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11_ABC_SVDU12C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12C_QSEB11_ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB11ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB11ABC_QSEB11_ABC.ALIVE{bool},
		QSEB11ABC_SVDU11A.ALIVE{bool},
		QSEB11ABC_SVDU11B.ALIVE{bool},
		QSEB11ABC_SVDU11C.ALIVE{bool},
		QSEB11ABC_QSEB20ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11_ABC_QSEB11ABC.ALIVE{bool},
		SVDU11A_QSEB11ABC.ALIVE{bool},
		SVDU11B_QSEB11ABC.ALIVE{bool},
		SVDU11C_QSEB11ABC.ALIVE{bool},
		QSEB20ABC_QSEB11ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB11ABC{MID_state},
		MID.QSEB11ABC.QSEB11_ABC.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11A.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11B.LINK{LINK_state},
		MID.QSEB11ABC.SVDU11C.LINK{LINK_state},
		MID.QSEB11ABC.QSEB20ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11_ABC_QSEB11ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU11A_QSEB11ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU11B_QSEB11ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU11C_QSEB11ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB20ABC_QSEB11ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB11ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB11ABC.QSEB11_ABC.LINK DEPENDS_ON QSEB11ABC_QSEB11_ABC.ALIVE, status:
		DEAD IF QSEB11ABC_QSEB11_ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11ABC.SVDU11A.LINK DEPENDS_ON QSEB11ABC_SVDU11A.ALIVE, status:
		DEAD IF QSEB11ABC_SVDU11A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11ABC.SVDU11B.LINK DEPENDS_ON QSEB11ABC_SVDU11B.ALIVE, status:
		DEAD IF QSEB11ABC_SVDU11B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11ABC.SVDU11C.LINK DEPENDS_ON QSEB11ABC_SVDU11C.ALIVE, status:
		DEAD IF QSEB11ABC_SVDU11C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11ABC.QSEB20ABC.LINK DEPENDS_ON QSEB11ABC_QSEB20ABC.ALIVE, status:
		DEAD IF QSEB11ABC_QSEB20ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11_ABC_QSEB11ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB11ABC_QSEB11_ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU11A{OK,KO}
	CONSUMES_SERVICE
		SVDU11A_QSEB11ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11ABC_SVDU11A.ALIVE{bool},
		MID.SVDU11A{MID_state},
		MID.SVDU11A.QSEB11ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11ABC_SVDU11A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU11A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU11A.QSEB11ABC.LINK DEPENDS_ON SVDU11A_QSEB11ABC.ALIVE, status:
		DEAD IF SVDU11A_QSEB11ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11ABC_SVDU11A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU11A_QSEB11ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU11B{OK,KO}
	CONSUMES_SERVICE
		SVDU11B_QSEB11ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11ABC_SVDU11B.ALIVE{bool},
		MID.SVDU11B{MID_state},
		MID.SVDU11B.QSEB11ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11ABC_SVDU11B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU11B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU11B.QSEB11ABC.LINK DEPENDS_ON SVDU11B_QSEB11ABC.ALIVE, status:
		DEAD IF SVDU11B_QSEB11ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11ABC_SVDU11B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU11B_QSEB11ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU11C{OK,KO}
	CONSUMES_SERVICE
		SVDU11C_QSEB11ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11ABC_SVDU11C.ALIVE{bool},
		MID.SVDU11C{MID_state},
		MID.SVDU11C.QSEB11ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11ABC_SVDU11C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU11C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU11C.QSEB11ABC.LINK DEPENDS_ON SVDU11C_QSEB11ABC.ALIVE, status:
		DEAD IF SVDU11C_QSEB11ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11ABC_SVDU11C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU11C_QSEB11ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB20ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB20ABC_QSEB11ABC.ALIVE{bool},
		QSEB20ABC_SVDU21A.ALIVE{bool},
		QSEB20ABC_SVDU21B.ALIVE{bool},
		QSEB20ABC_SVDU21C.ALIVE{bool},
		QSEB20ABC_QSEB19ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11ABC_QSEB20ABC.ALIVE{bool},
		SVDU21A_QSEB20ABC.ALIVE{bool},
		SVDU21B_QSEB20ABC.ALIVE{bool},
		SVDU21C_QSEB20ABC.ALIVE{bool},
		QSEB19ABC_QSEB20ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB20ABC{MID_state},
		MID.QSEB20ABC.QSEB11ABC.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21A.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21B.LINK{LINK_state},
		MID.QSEB20ABC.SVDU21C.LINK{LINK_state},
		MID.QSEB20ABC.QSEB19ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11ABC_QSEB20ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21A_QSEB20ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21B_QSEB20ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21C_QSEB20ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB19ABC_QSEB20ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB20ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB20ABC.QSEB11ABC.LINK DEPENDS_ON QSEB20ABC_QSEB11ABC.ALIVE, status:
		DEAD IF QSEB20ABC_QSEB11ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20ABC.SVDU21A.LINK DEPENDS_ON QSEB20ABC_SVDU21A.ALIVE, status:
		DEAD IF QSEB20ABC_SVDU21A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20ABC.SVDU21B.LINK DEPENDS_ON QSEB20ABC_SVDU21B.ALIVE, status:
		DEAD IF QSEB20ABC_SVDU21B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20ABC.SVDU21C.LINK DEPENDS_ON QSEB20ABC_SVDU21C.ALIVE, status:
		DEAD IF QSEB20ABC_SVDU21C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20ABC.QSEB19ABC.LINK DEPENDS_ON QSEB20ABC_QSEB19ABC.ALIVE, status:
		DEAD IF QSEB20ABC_QSEB19ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11ABC_QSEB20ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB20ABC_QSEB11ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21A{OK,KO}
	CONSUMES_SERVICE
		SVDU21A_QSEB20ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20ABC_SVDU21A.ALIVE{bool},
		MID.SVDU21A{MID_state},
		MID.SVDU21A.QSEB20ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20ABC_SVDU21A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21A.QSEB20ABC.LINK DEPENDS_ON SVDU21A_QSEB20ABC.ALIVE, status:
		DEAD IF SVDU21A_QSEB20ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20ABC_SVDU21A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21A_QSEB20ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21B{OK,KO}
	CONSUMES_SERVICE
		SVDU21B_QSEB20ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20ABC_SVDU21B.ALIVE{bool},
		MID.SVDU21B{MID_state},
		MID.SVDU21B.QSEB20ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20ABC_SVDU21B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21B.QSEB20ABC.LINK DEPENDS_ON SVDU21B_QSEB20ABC.ALIVE, status:
		DEAD IF SVDU21B_QSEB20ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20ABC_SVDU21B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21B_QSEB20ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21C{OK,KO}
	CONSUMES_SERVICE
		SVDU21C_QSEB20ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20ABC_SVDU21C.ALIVE{bool},
		MID.SVDU21C{MID_state},
		MID.SVDU21C.QSEB20ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20ABC_SVDU21C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21C.QSEB20ABC.LINK DEPENDS_ON SVDU21C_QSEB20ABC.ALIVE, status:
		DEAD IF SVDU21C_QSEB20ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20ABC_SVDU21C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21C_QSEB20ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB19ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB19ABC_QSEB20ABC.ALIVE{bool},
		QSEB19ABC_SVDU20A.ALIVE{bool},
		QSEB19ABC_SVDU20B.ALIVE{bool},
		QSEB19ABC_SVDU20C.ALIVE{bool},
		QSEB19ABC_QSEB18ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20ABC_QSEB19ABC.ALIVE{bool},
		SVDU20A_QSEB19ABC.ALIVE{bool},
		SVDU20B_QSEB19ABC.ALIVE{bool},
		SVDU20C_QSEB19ABC.ALIVE{bool},
		QSEB18ABC_QSEB19ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB19ABC{MID_state},
		MID.QSEB19ABC.QSEB20ABC.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20A.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20B.LINK{LINK_state},
		MID.QSEB19ABC.SVDU20C.LINK{LINK_state},
		MID.QSEB19ABC.QSEB18ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20ABC_QSEB19ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20A_QSEB19ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20B_QSEB19ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20C_QSEB19ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB18ABC_QSEB19ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB19ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB19ABC.QSEB20ABC.LINK DEPENDS_ON QSEB19ABC_QSEB20ABC.ALIVE, status:
		DEAD IF QSEB19ABC_QSEB20ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19ABC.SVDU20A.LINK DEPENDS_ON QSEB19ABC_SVDU20A.ALIVE, status:
		DEAD IF QSEB19ABC_SVDU20A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19ABC.SVDU20B.LINK DEPENDS_ON QSEB19ABC_SVDU20B.ALIVE, status:
		DEAD IF QSEB19ABC_SVDU20B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19ABC.SVDU20C.LINK DEPENDS_ON QSEB19ABC_SVDU20C.ALIVE, status:
		DEAD IF QSEB19ABC_SVDU20C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19ABC.QSEB18ABC.LINK DEPENDS_ON QSEB19ABC_QSEB18ABC.ALIVE, status:
		DEAD IF QSEB19ABC_QSEB18ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20ABC_QSEB19ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB19ABC_QSEB20ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20A{OK,KO}
	CONSUMES_SERVICE
		SVDU20A_QSEB19ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19ABC_SVDU20A.ALIVE{bool},
		MID.SVDU20A{MID_state},
		MID.SVDU20A.QSEB19ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19ABC_SVDU20A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20A.QSEB19ABC.LINK DEPENDS_ON SVDU20A_QSEB19ABC.ALIVE, status:
		DEAD IF SVDU20A_QSEB19ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19ABC_SVDU20A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20A_QSEB19ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20B{OK,KO}
	CONSUMES_SERVICE
		SVDU20B_QSEB19ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19ABC_SVDU20B.ALIVE{bool},
		MID.SVDU20B{MID_state},
		MID.SVDU20B.QSEB19ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19ABC_SVDU20B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20B.QSEB19ABC.LINK DEPENDS_ON SVDU20B_QSEB19ABC.ALIVE, status:
		DEAD IF SVDU20B_QSEB19ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19ABC_SVDU20B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20B_QSEB19ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20C{OK,KO}
	CONSUMES_SERVICE
		SVDU20C_QSEB19ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19ABC_SVDU20C.ALIVE{bool},
		MID.SVDU20C{MID_state},
		MID.SVDU20C.QSEB19ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19ABC_SVDU20C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20C.QSEB19ABC.LINK DEPENDS_ON SVDU20C_QSEB19ABC.ALIVE, status:
		DEAD IF SVDU20C_QSEB19ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19ABC_SVDU20C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20C_QSEB19ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB18ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB18ABC_QSEB19ABC.ALIVE{bool},
		QSEB18ABC_SVDU19A.ALIVE{bool},
		QSEB18ABC_SVDU19B.ALIVE{bool},
		QSEB18ABC_SVDU19C.ALIVE{bool},
		QSEB18ABC_ADBG2.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG2_QSEB18ABC.ALIVE{bool},
		QSEB19ABC_QSEB18ABC.ALIVE{bool},
		SVDU19A_QSEB18ABC.ALIVE{bool},
		SVDU19B_QSEB18ABC.ALIVE{bool},
		SVDU19C_QSEB18ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB18ABC{MID_state},
		MID.QSEB18ABC.QSEB19ABC.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19A.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19B.LINK{LINK_state},
		MID.QSEB18ABC.SVDU19C.LINK{LINK_state},
		MID.QSEB18ABC.ADBG2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG2_QSEB18ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB19ABC_QSEB18ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19A_QSEB18ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19B_QSEB18ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19C_QSEB18ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB18ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB18ABC.QSEB19ABC.LINK DEPENDS_ON QSEB18ABC_QSEB19ABC.ALIVE, status:
		DEAD IF QSEB18ABC_QSEB19ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18ABC.SVDU19A.LINK DEPENDS_ON QSEB18ABC_SVDU19A.ALIVE, status:
		DEAD IF QSEB18ABC_SVDU19A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18ABC.SVDU19B.LINK DEPENDS_ON QSEB18ABC_SVDU19B.ALIVE, status:
		DEAD IF QSEB18ABC_SVDU19B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18ABC.SVDU19C.LINK DEPENDS_ON QSEB18ABC_SVDU19C.ALIVE, status:
		DEAD IF QSEB18ABC_SVDU19C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18ABC.ADBG2.LINK DEPENDS_ON QSEB18ABC_ADBG2.ALIVE, status:
		DEAD IF QSEB18ABC_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19ABC_QSEB18ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB18ABC_QSEB19ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19A{OK,KO}
	CONSUMES_SERVICE
		SVDU19A_QSEB18ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18ABC_SVDU19A.ALIVE{bool},
		MID.SVDU19A{MID_state},
		MID.SVDU19A.QSEB18ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18ABC_SVDU19A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19A.QSEB18ABC.LINK DEPENDS_ON SVDU19A_QSEB18ABC.ALIVE, status:
		DEAD IF SVDU19A_QSEB18ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18ABC_SVDU19A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19A_QSEB18ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19B{OK,KO}
	CONSUMES_SERVICE
		SVDU19B_QSEB18ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18ABC_SVDU19B.ALIVE{bool},
		MID.SVDU19B{MID_state},
		MID.SVDU19B.QSEB18ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18ABC_SVDU19B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19B.QSEB18ABC.LINK DEPENDS_ON SVDU19B_QSEB18ABC.ALIVE, status:
		DEAD IF SVDU19B_QSEB18ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18ABC_SVDU19B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19B_QSEB18ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19C{OK,KO}
	CONSUMES_SERVICE
		SVDU19C_QSEB18ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18ABC_SVDU19C.ALIVE{bool},
		MID.SVDU19C{MID_state},
		MID.SVDU19C.QSEB18ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18ABC_SVDU19C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19C.QSEB18ABC.LINK DEPENDS_ON SVDU19C_QSEB18ABC.ALIVE, status:
		DEAD IF SVDU19C_QSEB18ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18ABC_SVDU19C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19C_QSEB18ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_QSEB18ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB18ABC_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB1DF{OK,KO}
	CONSUMES_SERVICE
		QSEB1DF_ADBG1.ALIVE{bool},
		QSEB1DF_SVDU1D.ALIVE{bool},
		QSEB1DF_SVDU1F.ALIVE{bool},
		QSEB1DF_QSEB2DF.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG1_QSEB1DF.ALIVE{bool},
		SVDU1D_QSEB1DF.ALIVE{bool},
		SVDU1F_QSEB1DF.ALIVE{bool},
		QSEB2DF_QSEB1DF.ALIVE{bool},
		MID.QSEB1DF{MID_state},
		Communication{okko},
		MID.QSEB1DF.ADBG1.LINK{LINK_state},
		MID.QSEB1DF.SVDU1D.LINK{LINK_state},
		MID.QSEB1DF.SVDU1F.LINK{LINK_state},
		MID.QSEB1DF.QSEB2DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG1_QSEB1DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU1D_QSEB1DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU1F_QSEB1DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB2DF_QSEB1DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB1DF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB1DF.ADBG1.LINK DEPENDS_ON QSEB1DF_ADBG1.ALIVE, status:
		DEAD IF QSEB1DF_ADBG1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1DF.SVDU1D.LINK DEPENDS_ON QSEB1DF_SVDU1D.ALIVE, status:
		DEAD IF QSEB1DF_SVDU1D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1DF.SVDU1F.LINK DEPENDS_ON QSEB1DF_SVDU1F.ALIVE, status:
		DEAD IF QSEB1DF_SVDU1F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB1DF.QSEB2DF.LINK DEPENDS_ON QSEB1DF_QSEB2DF.ALIVE, status:
		DEAD IF QSEB1DF_QSEB2DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_ADBG1_QSEB1DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB1DF_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU1D{OK,KO}
	CONSUMES_SERVICE
		SVDU1D_QSEB1DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1DF_SVDU1D.ALIVE{bool},
		MID.SVDU1D{MID_state},
		MID.SVDU1D.QSEB1DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1DF_SVDU1D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU1D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU1D.QSEB1DF.LINK DEPENDS_ON SVDU1D_QSEB1DF.ALIVE, status:
		DEAD IF SVDU1D_QSEB1DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1DF_SVDU1D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU1D_QSEB1DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU1F{OK,KO}
	CONSUMES_SERVICE
		SVDU1F_QSEB1DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1DF_SVDU1F.ALIVE{bool},
		MID.SVDU1F{MID_state},
		MID.SVDU1F.QSEB1DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1DF_SVDU1F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU1F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU1F.QSEB1DF.LINK DEPENDS_ON SVDU1F_QSEB1DF.ALIVE, status:
		DEAD IF SVDU1F_QSEB1DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1DF_SVDU1F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU1F_QSEB1DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB2DF{OK,KO}
	CONSUMES_SERVICE
		QSEB2DF_QSEB1DF.ALIVE{bool},
		QSEB2DF_SVDU2D.ALIVE{bool},
		QSEB2DF_SVDU2F.ALIVE{bool},
		QSEB2DF_QSEB3DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB1DF_QSEB2DF.ALIVE{bool},
		SVDU2D_QSEB2DF.ALIVE{bool},
		SVDU2F_QSEB2DF.ALIVE{bool},
		QSEB3DF_QSEB2DF.ALIVE{bool},
		MID.QSEB2DF{MID_state},
		Communication{okko},
		MID.QSEB2DF.QSEB1DF.LINK{LINK_state},
		MID.QSEB2DF.SVDU2D.LINK{LINK_state},
		MID.QSEB2DF.SVDU2F.LINK{LINK_state},
		MID.QSEB2DF.QSEB3DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB1DF_QSEB2DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU2D_QSEB2DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU2F_QSEB2DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB3DF_QSEB2DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB2DF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB2DF.QSEB1DF.LINK DEPENDS_ON QSEB2DF_QSEB1DF.ALIVE, status:
		DEAD IF QSEB2DF_QSEB1DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2DF.SVDU2D.LINK DEPENDS_ON QSEB2DF_SVDU2D.ALIVE, status:
		DEAD IF QSEB2DF_SVDU2D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2DF.SVDU2F.LINK DEPENDS_ON QSEB2DF_SVDU2F.ALIVE, status:
		DEAD IF QSEB2DF_SVDU2F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB2DF.QSEB3DF.LINK DEPENDS_ON QSEB2DF_QSEB3DF.ALIVE, status:
		DEAD IF QSEB2DF_QSEB3DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB1DF_QSEB2DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB2DF_QSEB1DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU2D{OK,KO}
	CONSUMES_SERVICE
		SVDU2D_QSEB2DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2DF_SVDU2D.ALIVE{bool},
		MID.SVDU2D{MID_state},
		MID.SVDU2D.QSEB2DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2DF_SVDU2D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU2D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU2D.QSEB2DF.LINK DEPENDS_ON SVDU2D_QSEB2DF.ALIVE, status:
		DEAD IF SVDU2D_QSEB2DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2DF_SVDU2D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU2D_QSEB2DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU2F{OK,KO}
	CONSUMES_SERVICE
		SVDU2F_QSEB2DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2DF_SVDU2F.ALIVE{bool},
		MID.SVDU2F{MID_state},
		MID.SVDU2F.QSEB2DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2DF_SVDU2F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU2F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU2F.QSEB2DF.LINK DEPENDS_ON SVDU2F_QSEB2DF.ALIVE, status:
		DEAD IF SVDU2F_QSEB2DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2DF_SVDU2F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU2F_QSEB2DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB3DF{OK,KO}
	CONSUMES_SERVICE
		QSEB3DF_QSEB2DF.ALIVE{bool},
		QSEB3DF_SVDU3D.ALIVE{bool},
		QSEB3DF_SVDU3F.ALIVE{bool},
		QSEB3DF_QSEB4DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB2DF_QSEB3DF.ALIVE{bool},
		SVDU3D_QSEB3DF.ALIVE{bool},
		SVDU3F_QSEB3DF.ALIVE{bool},
		QSEB4DF_QSEB3DF.ALIVE{bool},
		MID.QSEB3DF{MID_state},
		Communication{okko},
		MID.QSEB3DF.QSEB2DF.LINK{LINK_state},
		MID.QSEB3DF.SVDU3D.LINK{LINK_state},
		MID.QSEB3DF.SVDU3F.LINK{LINK_state},
		MID.QSEB3DF.QSEB4DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB2DF_QSEB3DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU3D_QSEB3DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU3F_QSEB3DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB4DF_QSEB3DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB3DF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB3DF.QSEB2DF.LINK DEPENDS_ON QSEB3DF_QSEB2DF.ALIVE, status:
		DEAD IF QSEB3DF_QSEB2DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3DF.SVDU3D.LINK DEPENDS_ON QSEB3DF_SVDU3D.ALIVE, status:
		DEAD IF QSEB3DF_SVDU3D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3DF.SVDU3F.LINK DEPENDS_ON QSEB3DF_SVDU3F.ALIVE, status:
		DEAD IF QSEB3DF_SVDU3F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB3DF.QSEB4DF.LINK DEPENDS_ON QSEB3DF_QSEB4DF.ALIVE, status:
		DEAD IF QSEB3DF_QSEB4DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB2DF_QSEB3DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB3DF_QSEB2DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU3D{OK,KO}
	CONSUMES_SERVICE
		SVDU3D_QSEB3DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3DF_SVDU3D.ALIVE{bool},
		MID.SVDU3D{MID_state},
		MID.SVDU3D.QSEB3DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3DF_SVDU3D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU3D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU3D.QSEB3DF.LINK DEPENDS_ON SVDU3D_QSEB3DF.ALIVE, status:
		DEAD IF SVDU3D_QSEB3DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3DF_SVDU3D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU3D_QSEB3DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU3F{OK,KO}
	CONSUMES_SERVICE
		SVDU3F_QSEB3DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3DF_SVDU3F.ALIVE{bool},
		MID.SVDU3F{MID_state},
		MID.SVDU3F.QSEB3DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3DF_SVDU3F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU3F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU3F.QSEB3DF.LINK DEPENDS_ON SVDU3F_QSEB3DF.ALIVE, status:
		DEAD IF SVDU3F_QSEB3DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3DF_SVDU3F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU3F_QSEB3DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB4DF{OK,KO}
	CONSUMES_SERVICE
		QSEB4DF_QSEB3DF.ALIVE{bool},
		QSEB4DF_SVDU4D.ALIVE{bool},
		QSEB4DF_SVDU4F.ALIVE{bool},
		QSEB4DF_QSEB19DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB3DF_QSEB4DF.ALIVE{bool},
		SVDU4D_QSEB4DF.ALIVE{bool},
		SVDU4F_QSEB4DF.ALIVE{bool},
		QSEB19DEF_QSEB4DF.ALIVE{bool},
		MID.QSEB4DF{MID_state},
		Communication{okko},
		MID.QSEB4DF.QSEB3DF.LINK{LINK_state},
		MID.QSEB4DF.SVDU4D.LINK{LINK_state},
		MID.QSEB4DF.SVDU4F.LINK{LINK_state},
		MID.QSEB4DF.QSEB19DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB3DF_QSEB4DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU4D_QSEB4DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU4F_QSEB4DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB19DEF_QSEB4DF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB4DF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB4DF.QSEB3DF.LINK DEPENDS_ON QSEB4DF_QSEB3DF.ALIVE, status:
		DEAD IF QSEB4DF_QSEB3DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4DF.SVDU4D.LINK DEPENDS_ON QSEB4DF_SVDU4D.ALIVE, status:
		DEAD IF QSEB4DF_SVDU4D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4DF.SVDU4F.LINK DEPENDS_ON QSEB4DF_SVDU4F.ALIVE, status:
		DEAD IF QSEB4DF_SVDU4F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB4DF.QSEB19DEF.LINK DEPENDS_ON QSEB4DF_QSEB19DEF.ALIVE, status:
		DEAD IF QSEB4DF_QSEB19DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB3DF_QSEB4DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB4DF_QSEB3DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU4D{OK,KO}
	CONSUMES_SERVICE
		SVDU4D_QSEB4DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4DF_SVDU4D.ALIVE{bool},
		MID.SVDU4D{MID_state},
		MID.SVDU4D.QSEB4DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4DF_SVDU4D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU4D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU4D.QSEB4DF.LINK DEPENDS_ON SVDU4D_QSEB4DF.ALIVE, status:
		DEAD IF SVDU4D_QSEB4DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4DF_SVDU4D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU4D_QSEB4DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU4F{OK,KO}
	CONSUMES_SERVICE
		SVDU4F_QSEB4DF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4DF_SVDU4F.ALIVE{bool},
		MID.SVDU4F{MID_state},
		MID.SVDU4F.QSEB4DF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4DF_SVDU4F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU4F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU4F.QSEB4DF.LINK DEPENDS_ON SVDU4F_QSEB4DF.ALIVE, status:
		DEAD IF SVDU4F_QSEB4DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4DF_SVDU4F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU4F_QSEB4DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB19DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB19DEF_QSEB4DF.ALIVE{bool},
		QSEB19DEF_SVDU20D.ALIVE{bool},
		QSEB19DEF_SVDU20E.ALIVE{bool},
		QSEB19DEF_SVDU20F.ALIVE{bool},
		QSEB19DEF_QSEB20DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB4DF_QSEB19DEF.ALIVE{bool},
		SVDU20D_QSEB19DEF.ALIVE{bool},
		SVDU20E_QSEB19DEF.ALIVE{bool},
		SVDU20F_QSEB19DEF.ALIVE{bool},
		QSEB20DEF_QSEB19DEF.ALIVE{bool},
		MID.QSEB19DEF{MID_state},
		Communication{okko},
		MID.QSEB19DEF.QSEB4DF.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20D.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20E.LINK{LINK_state},
		MID.QSEB19DEF.SVDU20F.LINK{LINK_state},
		MID.QSEB19DEF.QSEB20DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB4DF_QSEB19DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20D_QSEB19DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20E_QSEB19DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU20F_QSEB19DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB20DEF_QSEB19DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB19DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB19DEF.QSEB4DF.LINK DEPENDS_ON QSEB19DEF_QSEB4DF.ALIVE, status:
		DEAD IF QSEB19DEF_QSEB4DF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19DEF.SVDU20D.LINK DEPENDS_ON QSEB19DEF_SVDU20D.ALIVE, status:
		DEAD IF QSEB19DEF_SVDU20D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19DEF.SVDU20E.LINK DEPENDS_ON QSEB19DEF_SVDU20E.ALIVE, status:
		DEAD IF QSEB19DEF_SVDU20E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19DEF.SVDU20F.LINK DEPENDS_ON QSEB19DEF_SVDU20F.ALIVE, status:
		DEAD IF QSEB19DEF_SVDU20F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB19DEF.QSEB20DEF.LINK DEPENDS_ON QSEB19DEF_QSEB20DEF.ALIVE, status:
		DEAD IF QSEB19DEF_QSEB20DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB4DF_QSEB19DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB19DEF_QSEB4DF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20D{OK,KO}
	CONSUMES_SERVICE
		SVDU20D_QSEB19DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19DEF_SVDU20D.ALIVE{bool},
		MID.SVDU20D{MID_state},
		MID.SVDU20D.QSEB19DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19DEF_SVDU20D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20D.QSEB19DEF.LINK DEPENDS_ON SVDU20D_QSEB19DEF.ALIVE, status:
		DEAD IF SVDU20D_QSEB19DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19DEF_SVDU20D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20D_QSEB19DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20E{OK,KO}
	CONSUMES_SERVICE
		SVDU20E_QSEB19DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19DEF_SVDU20E.ALIVE{bool},
		MID.SVDU20E{MID_state},
		MID.SVDU20E.QSEB19DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19DEF_SVDU20E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20E.QSEB19DEF.LINK DEPENDS_ON SVDU20E_QSEB19DEF.ALIVE, status:
		DEAD IF SVDU20E_QSEB19DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19DEF_SVDU20E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20E_QSEB19DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU20F{OK,KO}
	CONSUMES_SERVICE
		SVDU20F_QSEB19DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19DEF_SVDU20F.ALIVE{bool},
		MID.SVDU20F{MID_state},
		MID.SVDU20F.QSEB19DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19DEF_SVDU20F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU20F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU20F.QSEB19DEF.LINK DEPENDS_ON SVDU20F_QSEB19DEF.ALIVE, status:
		DEAD IF SVDU20F_QSEB19DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19DEF_SVDU20F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU20F_QSEB19DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB20DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB20DEF_QSEB19DEF.ALIVE{bool},
		QSEB20DEF_SVDU21D.ALIVE{bool},
		QSEB20DEF_SVDU21E.ALIVE{bool},
		QSEB20DEF_SVDU21F.ALIVE{bool},
		QSEB20DEF_QSEB21DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB19DEF_QSEB20DEF.ALIVE{bool},
		SVDU21D_QSEB20DEF.ALIVE{bool},
		SVDU21E_QSEB20DEF.ALIVE{bool},
		SVDU21F_QSEB20DEF.ALIVE{bool},
		QSEB21DEF_QSEB20DEF.ALIVE{bool},
		MID.QSEB20DEF{MID_state},
		Communication{okko},
		MID.QSEB20DEF.QSEB19DEF.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21D.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21E.LINK{LINK_state},
		MID.QSEB20DEF.SVDU21F.LINK{LINK_state},
		MID.QSEB20DEF.QSEB21DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB19DEF_QSEB20DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21D_QSEB20DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21E_QSEB20DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU21F_QSEB20DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB21DEF_QSEB20DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB20DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB20DEF.QSEB19DEF.LINK DEPENDS_ON QSEB20DEF_QSEB19DEF.ALIVE, status:
		DEAD IF QSEB20DEF_QSEB19DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20DEF.SVDU21D.LINK DEPENDS_ON QSEB20DEF_SVDU21D.ALIVE, status:
		DEAD IF QSEB20DEF_SVDU21D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20DEF.SVDU21E.LINK DEPENDS_ON QSEB20DEF_SVDU21E.ALIVE, status:
		DEAD IF QSEB20DEF_SVDU21E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20DEF.SVDU21F.LINK DEPENDS_ON QSEB20DEF_SVDU21F.ALIVE, status:
		DEAD IF QSEB20DEF_SVDU21F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB20DEF.QSEB21DEF.LINK DEPENDS_ON QSEB20DEF_QSEB21DEF.ALIVE, status:
		DEAD IF QSEB20DEF_QSEB21DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB19DEF_QSEB20DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB20DEF_QSEB19DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21D{OK,KO}
	CONSUMES_SERVICE
		SVDU21D_QSEB20DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20DEF_SVDU21D.ALIVE{bool},
		MID.SVDU21D{MID_state},
		MID.SVDU21D.QSEB20DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20DEF_SVDU21D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21D.QSEB20DEF.LINK DEPENDS_ON SVDU21D_QSEB20DEF.ALIVE, status:
		DEAD IF SVDU21D_QSEB20DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20DEF_SVDU21D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21D_QSEB20DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21E{OK,KO}
	CONSUMES_SERVICE
		SVDU21E_QSEB20DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20DEF_SVDU21E.ALIVE{bool},
		MID.SVDU21E{MID_state},
		MID.SVDU21E.QSEB20DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20DEF_SVDU21E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21E.QSEB20DEF.LINK DEPENDS_ON SVDU21E_QSEB20DEF.ALIVE, status:
		DEAD IF SVDU21E_QSEB20DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20DEF_SVDU21E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21E_QSEB20DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU21F{OK,KO}
	CONSUMES_SERVICE
		SVDU21F_QSEB20DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20DEF_SVDU21F.ALIVE{bool},
		MID.SVDU21F{MID_state},
		MID.SVDU21F.QSEB20DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20DEF_SVDU21F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU21F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU21F.QSEB20DEF.LINK DEPENDS_ON SVDU21F_QSEB20DEF.ALIVE, status:
		DEAD IF SVDU21F_QSEB20DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20DEF_SVDU21F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU21F_QSEB20DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB21DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB21DEF_QSEB20DEF.ALIVE{bool},
		QSEB21DEF_SVDU22D.ALIVE{bool},
		QSEB21DEF_SVDU22E.ALIVE{bool},
		QSEB21DEF_SVDU22F.ALIVE{bool},
		QSEB21DEF_QSEB22DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB20DEF_QSEB21DEF.ALIVE{bool},
		SVDU22D_QSEB21DEF.ALIVE{bool},
		SVDU22E_QSEB21DEF.ALIVE{bool},
		SVDU22F_QSEB21DEF.ALIVE{bool},
		QSEB22DEF_QSEB21DEF.ALIVE{bool},
		MID.QSEB21DEF{MID_state},
		Communication{okko},
		MID.QSEB21DEF.QSEB20DEF.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22D.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22E.LINK{LINK_state},
		MID.QSEB21DEF.SVDU22F.LINK{LINK_state},
		MID.QSEB21DEF.QSEB22DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB20DEF_QSEB21DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU22D_QSEB21DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU22E_QSEB21DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU22F_QSEB21DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB22DEF_QSEB21DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB21DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB21DEF.QSEB20DEF.LINK DEPENDS_ON QSEB21DEF_QSEB20DEF.ALIVE, status:
		DEAD IF QSEB21DEF_QSEB20DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB21DEF.SVDU22D.LINK DEPENDS_ON QSEB21DEF_SVDU22D.ALIVE, status:
		DEAD IF QSEB21DEF_SVDU22D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB21DEF.SVDU22E.LINK DEPENDS_ON QSEB21DEF_SVDU22E.ALIVE, status:
		DEAD IF QSEB21DEF_SVDU22E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB21DEF.SVDU22F.LINK DEPENDS_ON QSEB21DEF_SVDU22F.ALIVE, status:
		DEAD IF QSEB21DEF_SVDU22F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB21DEF.QSEB22DEF.LINK DEPENDS_ON QSEB21DEF_QSEB22DEF.ALIVE, status:
		DEAD IF QSEB21DEF_QSEB22DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB20DEF_QSEB21DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB21DEF_QSEB20DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU22D{OK,KO}
	CONSUMES_SERVICE
		SVDU22D_QSEB21DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB21DEF_SVDU22D.ALIVE{bool},
		MID.SVDU22D{MID_state},
		MID.SVDU22D.QSEB21DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB21DEF_SVDU22D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU22D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU22D.QSEB21DEF.LINK DEPENDS_ON SVDU22D_QSEB21DEF.ALIVE, status:
		DEAD IF SVDU22D_QSEB21DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB21DEF_SVDU22D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU22D_QSEB21DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU22E{OK,KO}
	CONSUMES_SERVICE
		SVDU22E_QSEB21DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB21DEF_SVDU22E.ALIVE{bool},
		MID.SVDU22E{MID_state},
		MID.SVDU22E.QSEB21DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB21DEF_SVDU22E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU22E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU22E.QSEB21DEF.LINK DEPENDS_ON SVDU22E_QSEB21DEF.ALIVE, status:
		DEAD IF SVDU22E_QSEB21DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB21DEF_SVDU22E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU22E_QSEB21DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU22F{OK,KO}
	CONSUMES_SERVICE
		SVDU22F_QSEB21DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB21DEF_SVDU22F.ALIVE{bool},
		MID.SVDU22F{MID_state},
		MID.SVDU22F.QSEB21DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB21DEF_SVDU22F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU22F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU22F.QSEB21DEF.LINK DEPENDS_ON SVDU22F_QSEB21DEF.ALIVE, status:
		DEAD IF SVDU22F_QSEB21DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB21DEF_SVDU22F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU22F_QSEB21DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB22DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB22DEF_QSEB21DEF.ALIVE{bool},
		QSEB22DEF_SVDU23D.ALIVE{bool},
		QSEB22DEF_SVDU23E.ALIVE{bool},
		QSEB22DEF_SVDU23F.ALIVE{bool},
		QSEB22DEF_QSEB11DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB21DEF_QSEB22DEF.ALIVE{bool},
		SVDU23D_QSEB22DEF.ALIVE{bool},
		SVDU23E_QSEB22DEF.ALIVE{bool},
		SVDU23F_QSEB22DEF.ALIVE{bool},
		QSEB11DE_QSEB22DEF.ALIVE{bool},
		MID.QSEB22DEF{MID_state},
		Communication{okko},
		MID.QSEB22DEF.QSEB21DEF.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23D.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23E.LINK{LINK_state},
		MID.QSEB22DEF.SVDU23F.LINK{LINK_state},
		MID.QSEB22DEF.QSEB11DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB21DEF_QSEB22DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU23D_QSEB22DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU23E_QSEB22DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU23F_QSEB22DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB11DE_QSEB22DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB22DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB22DEF.QSEB21DEF.LINK DEPENDS_ON QSEB22DEF_QSEB21DEF.ALIVE, status:
		DEAD IF QSEB22DEF_QSEB21DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB22DEF.SVDU23D.LINK DEPENDS_ON QSEB22DEF_SVDU23D.ALIVE, status:
		DEAD IF QSEB22DEF_SVDU23D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB22DEF.SVDU23E.LINK DEPENDS_ON QSEB22DEF_SVDU23E.ALIVE, status:
		DEAD IF QSEB22DEF_SVDU23E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB22DEF.SVDU23F.LINK DEPENDS_ON QSEB22DEF_SVDU23F.ALIVE, status:
		DEAD IF QSEB22DEF_SVDU23F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB22DEF.QSEB11DE.LINK DEPENDS_ON QSEB22DEF_QSEB11DE.ALIVE, status:
		DEAD IF QSEB22DEF_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB21DEF_QSEB22DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB22DEF_QSEB21DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU23D{OK,KO}
	CONSUMES_SERVICE
		SVDU23D_QSEB22DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB22DEF_SVDU23D.ALIVE{bool},
		MID.SVDU23D{MID_state},
		MID.SVDU23D.QSEB22DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB22DEF_SVDU23D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU23D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU23D.QSEB22DEF.LINK DEPENDS_ON SVDU23D_QSEB22DEF.ALIVE, status:
		DEAD IF SVDU23D_QSEB22DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB22DEF_SVDU23D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU23D_QSEB22DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU23E{OK,KO}
	CONSUMES_SERVICE
		SVDU23E_QSEB22DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB22DEF_SVDU23E.ALIVE{bool},
		MID.SVDU23E{MID_state},
		MID.SVDU23E.QSEB22DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB22DEF_SVDU23E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU23E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU23E.QSEB22DEF.LINK DEPENDS_ON SVDU23E_QSEB22DEF.ALIVE, status:
		DEAD IF SVDU23E_QSEB22DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB22DEF_SVDU23E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU23E_QSEB22DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU23F{OK,KO}
	CONSUMES_SERVICE
		SVDU23F_QSEB22DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB22DEF_SVDU23F.ALIVE{bool},
		MID.SVDU23F{MID_state},
		MID.SVDU23F.QSEB22DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB22DEF_SVDU23F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU23F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU23F.QSEB22DEF.LINK DEPENDS_ON SVDU23F_QSEB22DEF.ALIVE, status:
		DEAD IF SVDU23F_QSEB22DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB22DEF_SVDU23F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU23F_QSEB22DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB11DE{OK,KO}
	CONSUMES_SERVICE
		QSEB11DE_QSEB22DEF.ALIVE{bool},
		QSEB11DE_SVDU11D.ALIVE{bool},
		QSEB11DE_SVDU11E.ALIVE{bool},
		QSEB11DE_SVDU12D.ALIVE{bool},
		QSEB11DE_SVDU12E.ALIVE{bool},
		QSEB11DE_QSEB12DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB22DEF_QSEB11DE.ALIVE{bool},
		SVDU11D_QSEB11DE.ALIVE{bool},
		SVDU11E_QSEB11DE.ALIVE{bool},
		SVDU12D_QSEB11DE.ALIVE{bool},
		SVDU12E_QSEB11DE.ALIVE{bool},
		QSEB12DEF_QSEB11DE.ALIVE{bool},
		MID.QSEB11DE{MID_state},
		Communication{okko},
		MID.QSEB11DE.QSEB22DEF.LINK{LINK_state},
		MID.QSEB11DE.SVDU11D.LINK{LINK_state},
		MID.QSEB11DE.SVDU11E.LINK{LINK_state},
		MID.QSEB11DE.SVDU12D.LINK{LINK_state},
		MID.QSEB11DE.SVDU12E.LINK{LINK_state},
		MID.QSEB11DE.QSEB12DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB22DEF_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU11D_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU11E_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12D_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12E_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB12DEF_QSEB11DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB11DE DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB11DE.QSEB22DEF.LINK DEPENDS_ON QSEB11DE_QSEB22DEF.ALIVE, status:
		DEAD IF QSEB11DE_QSEB22DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11DE.SVDU11D.LINK DEPENDS_ON QSEB11DE_SVDU11D.ALIVE, status:
		DEAD IF QSEB11DE_SVDU11D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11DE.SVDU11E.LINK DEPENDS_ON QSEB11DE_SVDU11E.ALIVE, status:
		DEAD IF QSEB11DE_SVDU11E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11DE.SVDU12D.LINK DEPENDS_ON QSEB11DE_SVDU12D.ALIVE, status:
		DEAD IF QSEB11DE_SVDU12D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11DE.SVDU12E.LINK DEPENDS_ON QSEB11DE_SVDU12E.ALIVE, status:
		DEAD IF QSEB11DE_SVDU12E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB11DE.QSEB12DEF.LINK DEPENDS_ON QSEB11DE_QSEB12DEF.ALIVE, status:
		DEAD IF QSEB11DE_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB22DEF_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB11DE_QSEB22DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU11D{OK,KO}
	CONSUMES_SERVICE
		SVDU11D_QSEB11DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11DE_SVDU11D.ALIVE{bool},
		MID.SVDU11D{MID_state},
		MID.SVDU11D.QSEB11DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11DE_SVDU11D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU11D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU11D.QSEB11DE.LINK DEPENDS_ON SVDU11D_QSEB11DE.ALIVE, status:
		DEAD IF SVDU11D_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11DE_SVDU11D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU11D_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU11E{OK,KO}
	CONSUMES_SERVICE
		SVDU11E_QSEB11DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11DE_SVDU11E.ALIVE{bool},
		MID.SVDU11E{MID_state},
		MID.SVDU11E.QSEB11DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11DE_SVDU11E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU11E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU11E.QSEB11DE.LINK DEPENDS_ON SVDU11E_QSEB11DE.ALIVE, status:
		DEAD IF SVDU11E_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11DE_SVDU11E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU11E_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12D{OK,KO}
	CONSUMES_SERVICE
		SVDU12D_QSEB11DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11DE_SVDU12D.ALIVE{bool},
		MID.SVDU12D{MID_state},
		MID.SVDU12D.QSEB11DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11DE_SVDU12D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12D.QSEB11DE.LINK DEPENDS_ON SVDU12D_QSEB11DE.ALIVE, status:
		DEAD IF SVDU12D_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11DE_SVDU12D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12D_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12E{OK,KO}
	CONSUMES_SERVICE
		SVDU12E_QSEB11DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11DE_SVDU12E.ALIVE{bool},
		MID.SVDU12E{MID_state},
		MID.SVDU12E.QSEB11DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11DE_SVDU12E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12E.QSEB11DE.LINK DEPENDS_ON SVDU12E_QSEB11DE.ALIVE, status:
		DEAD IF SVDU12E_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11DE_SVDU12E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12E_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB12DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB12DEF_QSEB11DE.ALIVE{bool},
		QSEB12DEF_SVDU13D.ALIVE{bool},
		QSEB12DEF_SVDU13E.ALIVE{bool},
		QSEB12DEF_SVDU13F.ALIVE{bool},
		QSEB12DEF_SVDU12F.ALIVE{bool},
		QSEB12DEF_QSEB13DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB11DE_QSEB12DEF.ALIVE{bool},
		SVDU13D_QSEB12DEF.ALIVE{bool},
		SVDU13E_QSEB12DEF.ALIVE{bool},
		SVDU13F_QSEB12DEF.ALIVE{bool},
		SVDU12F_QSEB12DEF.ALIVE{bool},
		QSEB13DEF_QSEB12DEF.ALIVE{bool},
		MID.QSEB12DEF{MID_state},
		Communication{okko},
		MID.QSEB12DEF.QSEB11DE.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13D.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13E.LINK{LINK_state},
		MID.QSEB12DEF.SVDU13F.LINK{LINK_state},
		MID.QSEB12DEF.SVDU12F.LINK{LINK_state},
		MID.QSEB12DEF.QSEB13DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB11DE_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13D_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13E_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU13F_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU12F_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB13DEF_QSEB12DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB12DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB12DEF.QSEB11DE.LINK DEPENDS_ON QSEB12DEF_QSEB11DE.ALIVE, status:
		DEAD IF QSEB12DEF_QSEB11DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12DEF.SVDU13D.LINK DEPENDS_ON QSEB12DEF_SVDU13D.ALIVE, status:
		DEAD IF QSEB12DEF_SVDU13D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12DEF.SVDU13E.LINK DEPENDS_ON QSEB12DEF_SVDU13E.ALIVE, status:
		DEAD IF QSEB12DEF_SVDU13E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12DEF.SVDU13F.LINK DEPENDS_ON QSEB12DEF_SVDU13F.ALIVE, status:
		DEAD IF QSEB12DEF_SVDU13F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12DEF.SVDU12F.LINK DEPENDS_ON QSEB12DEF_SVDU12F.ALIVE, status:
		DEAD IF QSEB12DEF_SVDU12F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB12DEF.QSEB13DEF.LINK DEPENDS_ON QSEB12DEF_QSEB13DEF.ALIVE, status:
		DEAD IF QSEB12DEF_QSEB13DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB11DE_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB12DEF_QSEB11DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13D{OK,KO}
	CONSUMES_SERVICE
		SVDU13D_QSEB12DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12DEF_SVDU13D.ALIVE{bool},
		MID.SVDU13D{MID_state},
		MID.SVDU13D.QSEB12DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12DEF_SVDU13D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13D.QSEB12DEF.LINK DEPENDS_ON SVDU13D_QSEB12DEF.ALIVE, status:
		DEAD IF SVDU13D_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12DEF_SVDU13D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13D_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13E{OK,KO}
	CONSUMES_SERVICE
		SVDU13E_QSEB12DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12DEF_SVDU13E.ALIVE{bool},
		MID.SVDU13E{MID_state},
		MID.SVDU13E.QSEB12DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12DEF_SVDU13E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13E.QSEB12DEF.LINK DEPENDS_ON SVDU13E_QSEB12DEF.ALIVE, status:
		DEAD IF SVDU13E_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12DEF_SVDU13E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13E_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU13F{OK,KO}
	CONSUMES_SERVICE
		SVDU13F_QSEB12DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12DEF_SVDU13F.ALIVE{bool},
		MID.SVDU13F{MID_state},
		MID.SVDU13F.QSEB12DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12DEF_SVDU13F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU13F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU13F.QSEB12DEF.LINK DEPENDS_ON SVDU13F_QSEB12DEF.ALIVE, status:
		DEAD IF SVDU13F_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12DEF_SVDU13F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU13F_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU12F{OK,KO}
	CONSUMES_SERVICE
		SVDU12F_QSEB12DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12DEF_SVDU12F.ALIVE{bool},
		MID.SVDU12F{MID_state},
		MID.SVDU12F.QSEB12DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12DEF_SVDU12F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU12F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU12F.QSEB12DEF.LINK DEPENDS_ON SVDU12F_QSEB12DEF.ALIVE, status:
		DEAD IF SVDU12F_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12DEF_SVDU12F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU12F_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB13DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB13DEF_QSEB12DEF.ALIVE{bool},
		QSEB13DEF_SVDU14D.ALIVE{bool},
		QSEB13DEF_SVDU14E.ALIVE{bool},
		QSEB13DEF_SVDU14F.ALIVE{bool},
		QSEB13DEF_QSEB14DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB12DEF_QSEB13DEF.ALIVE{bool},
		SVDU14D_QSEB13DEF.ALIVE{bool},
		SVDU14E_QSEB13DEF.ALIVE{bool},
		SVDU14F_QSEB13DEF.ALIVE{bool},
		QSEB14DEF_QSEB13DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB13DEF{MID_state},
		MID.QSEB13DEF.QSEB12DEF.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14D.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14E.LINK{LINK_state},
		MID.QSEB13DEF.SVDU14F.LINK{LINK_state},
		MID.QSEB13DEF.QSEB14DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB12DEF_QSEB13DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14D_QSEB13DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14E_QSEB13DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU14F_QSEB13DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB14DEF_QSEB13DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB13DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB13DEF.QSEB12DEF.LINK DEPENDS_ON QSEB13DEF_QSEB12DEF.ALIVE, status:
		DEAD IF QSEB13DEF_QSEB12DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13DEF.SVDU14D.LINK DEPENDS_ON QSEB13DEF_SVDU14D.ALIVE, status:
		DEAD IF QSEB13DEF_SVDU14D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13DEF.SVDU14E.LINK DEPENDS_ON QSEB13DEF_SVDU14E.ALIVE, status:
		DEAD IF QSEB13DEF_SVDU14E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13DEF.SVDU14F.LINK DEPENDS_ON QSEB13DEF_SVDU14F.ALIVE, status:
		DEAD IF QSEB13DEF_SVDU14F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB13DEF.QSEB14DEF.LINK DEPENDS_ON QSEB13DEF_QSEB14DEF.ALIVE, status:
		DEAD IF QSEB13DEF_QSEB14DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB12DEF_QSEB13DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB13DEF_QSEB12DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14D{OK,KO}
	CONSUMES_SERVICE
		SVDU14D_QSEB13DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13DEF_SVDU14D.ALIVE{bool},
		MID.SVDU14D{MID_state},
		MID.SVDU14D.QSEB13DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13DEF_SVDU14D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14D.QSEB13DEF.LINK DEPENDS_ON SVDU14D_QSEB13DEF.ALIVE, status:
		DEAD IF SVDU14D_QSEB13DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13DEF_SVDU14D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14D_QSEB13DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14E{OK,KO}
	CONSUMES_SERVICE
		SVDU14E_QSEB13DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13DEF_SVDU14E.ALIVE{bool},
		MID.SVDU14E{MID_state},
		MID.SVDU14E.QSEB13DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13DEF_SVDU14E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14E.QSEB13DEF.LINK DEPENDS_ON SVDU14E_QSEB13DEF.ALIVE, status:
		DEAD IF SVDU14E_QSEB13DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13DEF_SVDU14E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14E_QSEB13DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU14F{OK,KO}
	CONSUMES_SERVICE
		SVDU14F_QSEB13DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13DEF_SVDU14F.ALIVE{bool},
		MID.SVDU14F{MID_state},
		MID.SVDU14F.QSEB13DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13DEF_SVDU14F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU14F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU14F.QSEB13DEF.LINK DEPENDS_ON SVDU14F_QSEB13DEF.ALIVE, status:
		DEAD IF SVDU14F_QSEB13DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13DEF_SVDU14F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU14F_QSEB13DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB14DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB14DEF_QSEB13DEF.ALIVE{bool},
		QSEB14DEF_SVDU15D.ALIVE{bool},
		QSEB14DEF_SVDU15E.ALIVE{bool},
		QSEB14DEF_SVDU15F.ALIVE{bool},
		QSEB14DEF_QSEB15DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB13DEF_QSEB14DEF.ALIVE{bool},
		SVDU15D_QSEB14DEF.ALIVE{bool},
		SVDU15E_QSEB14DEF.ALIVE{bool},
		SVDU15F_QSEB14DEF.ALIVE{bool},
		QSEB15DEF_QSEB14DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB14DEF{MID_state},
		MID.QSEB14DEF.QSEB13DEF.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15D.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15E.LINK{LINK_state},
		MID.QSEB14DEF.SVDU15F.LINK{LINK_state},
		MID.QSEB14DEF.QSEB15DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB13DEF_QSEB14DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15D_QSEB14DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15E_QSEB14DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU15F_QSEB14DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB15DEF_QSEB14DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB14DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB14DEF.QSEB13DEF.LINK DEPENDS_ON QSEB14DEF_QSEB13DEF.ALIVE, status:
		DEAD IF QSEB14DEF_QSEB13DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14DEF.SVDU15D.LINK DEPENDS_ON QSEB14DEF_SVDU15D.ALIVE, status:
		DEAD IF QSEB14DEF_SVDU15D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14DEF.SVDU15E.LINK DEPENDS_ON QSEB14DEF_SVDU15E.ALIVE, status:
		DEAD IF QSEB14DEF_SVDU15E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14DEF.SVDU15F.LINK DEPENDS_ON QSEB14DEF_SVDU15F.ALIVE, status:
		DEAD IF QSEB14DEF_SVDU15F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB14DEF.QSEB15DEF.LINK DEPENDS_ON QSEB14DEF_QSEB15DEF.ALIVE, status:
		DEAD IF QSEB14DEF_QSEB15DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB13DEF_QSEB14DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB14DEF_QSEB13DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15D{OK,KO}
	CONSUMES_SERVICE
		SVDU15D_QSEB14DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14DEF_SVDU15D.ALIVE{bool},
		MID.SVDU15D{MID_state},
		MID.SVDU15D.QSEB14DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14DEF_SVDU15D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15D.QSEB14DEF.LINK DEPENDS_ON SVDU15D_QSEB14DEF.ALIVE, status:
		DEAD IF SVDU15D_QSEB14DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14DEF_SVDU15D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15D_QSEB14DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15E{OK,KO}
	CONSUMES_SERVICE
		SVDU15E_QSEB14DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14DEF_SVDU15E.ALIVE{bool},
		MID.SVDU15E{MID_state},
		MID.SVDU15E.QSEB14DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14DEF_SVDU15E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15E.QSEB14DEF.LINK DEPENDS_ON SVDU15E_QSEB14DEF.ALIVE, status:
		DEAD IF SVDU15E_QSEB14DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14DEF_SVDU15E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15E_QSEB14DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU15F{OK,KO}
	CONSUMES_SERVICE
		SVDU15F_QSEB14DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14DEF_SVDU15F.ALIVE{bool},
		MID.SVDU15F{MID_state},
		MID.SVDU15F.QSEB14DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14DEF_SVDU15F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU15F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU15F.QSEB14DEF.LINK DEPENDS_ON SVDU15F_QSEB14DEF.ALIVE, status:
		DEAD IF SVDU15F_QSEB14DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14DEF_SVDU15F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU15F_QSEB14DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB15DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB15DEF_QSEB14DEF.ALIVE{bool},
		QSEB15DEF_SVDU16D.ALIVE{bool},
		QSEB15DEF_SVDU16E.ALIVE{bool},
		QSEB15DEF_SVDU16F.ALIVE{bool},
		QSEB15DEF_QSEB16DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB14DEF_QSEB15DEF.ALIVE{bool},
		SVDU16D_QSEB15DEF.ALIVE{bool},
		SVDU16E_QSEB15DEF.ALIVE{bool},
		SVDU16F_QSEB15DEF.ALIVE{bool},
		QSEB16DEF_QSEB15DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB15DEF{MID_state},
		MID.QSEB15DEF.QSEB14DEF.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16D.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16E.LINK{LINK_state},
		MID.QSEB15DEF.SVDU16F.LINK{LINK_state},
		MID.QSEB15DEF.QSEB16DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB14DEF_QSEB15DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16D_QSEB15DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16E_QSEB15DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU16F_QSEB15DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB16DEF_QSEB15DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB15DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB15DEF.QSEB14DEF.LINK DEPENDS_ON QSEB15DEF_QSEB14DEF.ALIVE, status:
		DEAD IF QSEB15DEF_QSEB14DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15DEF.SVDU16D.LINK DEPENDS_ON QSEB15DEF_SVDU16D.ALIVE, status:
		DEAD IF QSEB15DEF_SVDU16D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15DEF.SVDU16E.LINK DEPENDS_ON QSEB15DEF_SVDU16E.ALIVE, status:
		DEAD IF QSEB15DEF_SVDU16E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15DEF.SVDU16F.LINK DEPENDS_ON QSEB15DEF_SVDU16F.ALIVE, status:
		DEAD IF QSEB15DEF_SVDU16F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB15DEF.QSEB16DEF.LINK DEPENDS_ON QSEB15DEF_QSEB16DEF.ALIVE, status:
		DEAD IF QSEB15DEF_QSEB16DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB14DEF_QSEB15DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB15DEF_QSEB14DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16D{OK,KO}
	CONSUMES_SERVICE
		SVDU16D_QSEB15DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15DEF_SVDU16D.ALIVE{bool},
		MID.SVDU16D{MID_state},
		MID.SVDU16D.QSEB15DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15DEF_SVDU16D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16D.QSEB15DEF.LINK DEPENDS_ON SVDU16D_QSEB15DEF.ALIVE, status:
		DEAD IF SVDU16D_QSEB15DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15DEF_SVDU16D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16D_QSEB15DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16E{OK,KO}
	CONSUMES_SERVICE
		SVDU16E_QSEB15DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15DEF_SVDU16E.ALIVE{bool},
		MID.SVDU16E{MID_state},
		MID.SVDU16E.QSEB15DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15DEF_SVDU16E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16E.QSEB15DEF.LINK DEPENDS_ON SVDU16E_QSEB15DEF.ALIVE, status:
		DEAD IF SVDU16E_QSEB15DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15DEF_SVDU16E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16E_QSEB15DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU16F{OK,KO}
	CONSUMES_SERVICE
		SVDU16F_QSEB15DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15DEF_SVDU16F.ALIVE{bool},
		MID.SVDU16F{MID_state},
		MID.SVDU16F.QSEB15DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15DEF_SVDU16F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU16F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU16F.QSEB15DEF.LINK DEPENDS_ON SVDU16F_QSEB15DEF.ALIVE, status:
		DEAD IF SVDU16F_QSEB15DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15DEF_SVDU16F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU16F_QSEB15DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB16DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB16DEF_QSEB15DEF.ALIVE{bool},
		QSEB16DEF_SVDU17D.ALIVE{bool},
		QSEB16DEF_SVDU17E.ALIVE{bool},
		QSEB16DEF_SVDU17F.ALIVE{bool},
		QSEB16DEF_QSEB17DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB15DEF_QSEB16DEF.ALIVE{bool},
		SVDU17D_QSEB16DEF.ALIVE{bool},
		SVDU17E_QSEB16DEF.ALIVE{bool},
		SVDU17F_QSEB16DEF.ALIVE{bool},
		QSEB17DEF_QSEB16DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB16DEF{MID_state},
		MID.QSEB16DEF.QSEB15DEF.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17D.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17E.LINK{LINK_state},
		MID.QSEB16DEF.SVDU17F.LINK{LINK_state},
		MID.QSEB16DEF.QSEB17DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB15DEF_QSEB16DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17D_QSEB16DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17E_QSEB16DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU17F_QSEB16DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB17DEF_QSEB16DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB16DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB16DEF.QSEB15DEF.LINK DEPENDS_ON QSEB16DEF_QSEB15DEF.ALIVE, status:
		DEAD IF QSEB16DEF_QSEB15DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16DEF.SVDU17D.LINK DEPENDS_ON QSEB16DEF_SVDU17D.ALIVE, status:
		DEAD IF QSEB16DEF_SVDU17D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16DEF.SVDU17E.LINK DEPENDS_ON QSEB16DEF_SVDU17E.ALIVE, status:
		DEAD IF QSEB16DEF_SVDU17E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16DEF.SVDU17F.LINK DEPENDS_ON QSEB16DEF_SVDU17F.ALIVE, status:
		DEAD IF QSEB16DEF_SVDU17F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB16DEF.QSEB17DEF.LINK DEPENDS_ON QSEB16DEF_QSEB17DEF.ALIVE, status:
		DEAD IF QSEB16DEF_QSEB17DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB15DEF_QSEB16DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB16DEF_QSEB15DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17D{OK,KO}
	CONSUMES_SERVICE
		SVDU17D_QSEB16DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16DEF_SVDU17D.ALIVE{bool},
		MID.SVDU17D{MID_state},
		MID.SVDU17D.QSEB16DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16DEF_SVDU17D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17D.QSEB16DEF.LINK DEPENDS_ON SVDU17D_QSEB16DEF.ALIVE, status:
		DEAD IF SVDU17D_QSEB16DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16DEF_SVDU17D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17D_QSEB16DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17E{OK,KO}
	CONSUMES_SERVICE
		SVDU17E_QSEB16DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16DEF_SVDU17E.ALIVE{bool},
		MID.SVDU17E{MID_state},
		MID.SVDU17E.QSEB16DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16DEF_SVDU17E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17E.QSEB16DEF.LINK DEPENDS_ON SVDU17E_QSEB16DEF.ALIVE, status:
		DEAD IF SVDU17E_QSEB16DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16DEF_SVDU17E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17E_QSEB16DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU17F{OK,KO}
	CONSUMES_SERVICE
		SVDU17F_QSEB16DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16DEF_SVDU17F.ALIVE{bool},
		MID.SVDU17F{MID_state},
		MID.SVDU17F.QSEB16DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16DEF_SVDU17F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU17F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU17F.QSEB16DEF.LINK DEPENDS_ON SVDU17F_QSEB16DEF.ALIVE, status:
		DEAD IF SVDU17F_QSEB16DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16DEF_SVDU17F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU17F_QSEB16DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB17DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB17DEF_QSEB16DEF.ALIVE{bool},
		QSEB17DEF_SVDU18D.ALIVE{bool},
		QSEB17DEF_SVDU18E.ALIVE{bool},
		QSEB17DEF_SVDU18F.ALIVE{bool},
		QSEB17DEF_QSEB18DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB16DEF_QSEB17DEF.ALIVE{bool},
		SVDU18D_QSEB17DEF.ALIVE{bool},
		SVDU18E_QSEB17DEF.ALIVE{bool},
		SVDU18F_QSEB17DEF.ALIVE{bool},
		QSEB18DEF_QSEB17DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB17DEF{MID_state},
		MID.QSEB17DEF.QSEB16DEF.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18D.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18E.LINK{LINK_state},
		MID.QSEB17DEF.SVDU18F.LINK{LINK_state},
		MID.QSEB17DEF.QSEB18DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB16DEF_QSEB17DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18D_QSEB17DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18E_QSEB17DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU18F_QSEB17DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB18DEF_QSEB17DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB17DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB17DEF.QSEB16DEF.LINK DEPENDS_ON QSEB17DEF_QSEB16DEF.ALIVE, status:
		DEAD IF QSEB17DEF_QSEB16DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17DEF.SVDU18D.LINK DEPENDS_ON QSEB17DEF_SVDU18D.ALIVE, status:
		DEAD IF QSEB17DEF_SVDU18D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17DEF.SVDU18E.LINK DEPENDS_ON QSEB17DEF_SVDU18E.ALIVE, status:
		DEAD IF QSEB17DEF_SVDU18E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17DEF.SVDU18F.LINK DEPENDS_ON QSEB17DEF_SVDU18F.ALIVE, status:
		DEAD IF QSEB17DEF_SVDU18F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB17DEF.QSEB18DEF.LINK DEPENDS_ON QSEB17DEF_QSEB18DEF.ALIVE, status:
		DEAD IF QSEB17DEF_QSEB18DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB16DEF_QSEB17DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB17DEF_QSEB16DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18D{OK,KO}
	CONSUMES_SERVICE
		SVDU18D_QSEB17DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17DEF_SVDU18D.ALIVE{bool},
		MID.SVDU18D{MID_state},
		MID.SVDU18D.QSEB17DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17DEF_SVDU18D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18D.QSEB17DEF.LINK DEPENDS_ON SVDU18D_QSEB17DEF.ALIVE, status:
		DEAD IF SVDU18D_QSEB17DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17DEF_SVDU18D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18D_QSEB17DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18E{OK,KO}
	CONSUMES_SERVICE
		SVDU18E_QSEB17DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17DEF_SVDU18E.ALIVE{bool},
		MID.SVDU18E{MID_state},
		MID.SVDU18E.QSEB17DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17DEF_SVDU18E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18E.QSEB17DEF.LINK DEPENDS_ON SVDU18E_QSEB17DEF.ALIVE, status:
		DEAD IF SVDU18E_QSEB17DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17DEF_SVDU18E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18E_QSEB17DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU18F{OK,KO}
	CONSUMES_SERVICE
		SVDU18F_QSEB17DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB17DEF_SVDU18F.ALIVE{bool},
		MID.SVDU18F{MID_state},
		MID.SVDU18F.QSEB17DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB17DEF_SVDU18F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU18F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU18F.QSEB17DEF.LINK DEPENDS_ON SVDU18F_QSEB17DEF.ALIVE, status:
		DEAD IF SVDU18F_QSEB17DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17DEF_SVDU18F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU18F_QSEB17DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB18DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB18DEF_QSEB17DEF.ALIVE{bool},
		QSEB18DEF_SVDU19D.ALIVE{bool},
		QSEB18DEF_SVDU19E.ALIVE{bool},
		QSEB18DEF_SVDU19F.ALIVE{bool},
		QSEB18DEF_ADBG2.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG2_QSEB18DEF.ALIVE{bool},
		QSEB17DEF_QSEB18DEF.ALIVE{bool},
		SVDU19D_QSEB18DEF.ALIVE{bool},
		SVDU19E_QSEB18DEF.ALIVE{bool},
		SVDU19F_QSEB18DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB18DEF{MID_state},
		MID.QSEB18DEF.QSEB17DEF.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19D.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19E.LINK{LINK_state},
		MID.QSEB18DEF.SVDU19F.LINK{LINK_state},
		MID.QSEB18DEF.ADBG2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG2_QSEB18DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB17DEF_QSEB18DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19D_QSEB18DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19E_QSEB18DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU19F_QSEB18DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB18DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB18DEF.QSEB17DEF.LINK DEPENDS_ON QSEB18DEF_QSEB17DEF.ALIVE, status:
		DEAD IF QSEB18DEF_QSEB17DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18DEF.SVDU19D.LINK DEPENDS_ON QSEB18DEF_SVDU19D.ALIVE, status:
		DEAD IF QSEB18DEF_SVDU19D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18DEF.SVDU19E.LINK DEPENDS_ON QSEB18DEF_SVDU19E.ALIVE, status:
		DEAD IF QSEB18DEF_SVDU19E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18DEF.SVDU19F.LINK DEPENDS_ON QSEB18DEF_SVDU19F.ALIVE, status:
		DEAD IF QSEB18DEF_SVDU19F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB18DEF.ADBG2.LINK DEPENDS_ON QSEB18DEF_ADBG2.ALIVE, status:
		DEAD IF QSEB18DEF_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB17DEF_QSEB18DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB18DEF_QSEB17DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19D{OK,KO}
	CONSUMES_SERVICE
		SVDU19D_QSEB18DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18DEF_SVDU19D.ALIVE{bool},
		MID.SVDU19D{MID_state},
		MID.SVDU19D.QSEB18DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18DEF_SVDU19D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19D.QSEB18DEF.LINK DEPENDS_ON SVDU19D_QSEB18DEF.ALIVE, status:
		DEAD IF SVDU19D_QSEB18DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18DEF_SVDU19D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19D_QSEB18DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19E{OK,KO}
	CONSUMES_SERVICE
		SVDU19E_QSEB18DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18DEF_SVDU19E.ALIVE{bool},
		MID.SVDU19E{MID_state},
		MID.SVDU19E.QSEB18DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18DEF_SVDU19E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19E.QSEB18DEF.LINK DEPENDS_ON SVDU19E_QSEB18DEF.ALIVE, status:
		DEAD IF SVDU19E_QSEB18DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18DEF_SVDU19E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19E_QSEB18DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU19F{OK,KO}
	CONSUMES_SERVICE
		SVDU19F_QSEB18DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB18DEF_SVDU19F.ALIVE{bool},
		MID.SVDU19F{MID_state},
		MID.SVDU19F.QSEB18DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB18DEF_SVDU19F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU19F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU19F.QSEB18DEF.LINK DEPENDS_ON SVDU19F_QSEB18DEF.ALIVE, status:
		DEAD IF SVDU19F_QSEB18DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB18DEF_SVDU19F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU19F_QSEB18DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_QSEB18DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB18DEF_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB10ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB10ABC_ADBG1.ALIVE{bool},
		QSEB10ABC_QSEB9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG1_QSEB10ABC.ALIVE{bool},
		QSEB9ABC_QSEB10ABC.ALIVE{bool},
		MID.QSEB10ABC{MID_state},
		Communication{okko},
		MID.QSEB10ABC.ADBG1.LINK{LINK_state},
		MID.QSEB10ABC.QSEB9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG1_QSEB10ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB9ABC_QSEB10ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB10ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB10ABC.ADBG1.LINK DEPENDS_ON QSEB10ABC_ADBG1.ALIVE, status:
		DEAD IF QSEB10ABC_ADBG1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB10ABC.QSEB9ABC.LINK DEPENDS_ON QSEB10ABC_QSEB9ABC.ALIVE, status:
		DEAD IF QSEB10ABC_QSEB9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_ADBG1_QSEB10ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB10ABC_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB9ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB9ABC_QSEB10ABC.ALIVE{bool},
		QSEB9ABC_SVDU10A.ALIVE{bool},
		QSEB9ABC_SVDU10B.ALIVE{bool},
		QSEB9ABC_SVDU10C.ALIVE{bool},
		QSEB9ABC_QSEB_9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB10ABC_QSEB9ABC.ALIVE{bool},
		SVDU10A_QSEB9ABC.ALIVE{bool},
		SVDU10B_QSEB9ABC.ALIVE{bool},
		SVDU10C_QSEB9ABC.ALIVE{bool},
		QSEB_9ABC_QSEB9ABC.ALIVE{bool},
		MID.QSEB9ABC{MID_state},
		Communication{okko},
		MID.QSEB9ABC.QSEB10ABC.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10A.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10B.LINK{LINK_state},
		MID.QSEB9ABC.SVDU10C.LINK{LINK_state},
		MID.QSEB9ABC.QSEB_9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB10ABC_QSEB9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10A_QSEB9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10B_QSEB9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10C_QSEB9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB_9ABC_QSEB9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB9ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB9ABC.QSEB10ABC.LINK DEPENDS_ON QSEB9ABC_QSEB10ABC.ALIVE, status:
		DEAD IF QSEB9ABC_QSEB10ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9ABC.SVDU10A.LINK DEPENDS_ON QSEB9ABC_SVDU10A.ALIVE, status:
		DEAD IF QSEB9ABC_SVDU10A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9ABC.SVDU10B.LINK DEPENDS_ON QSEB9ABC_SVDU10B.ALIVE, status:
		DEAD IF QSEB9ABC_SVDU10B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9ABC.SVDU10C.LINK DEPENDS_ON QSEB9ABC_SVDU10C.ALIVE, status:
		DEAD IF QSEB9ABC_SVDU10C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9ABC.QSEB_9ABC.LINK DEPENDS_ON QSEB9ABC_QSEB_9ABC.ALIVE, status:
		DEAD IF QSEB9ABC_QSEB_9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB10ABC_QSEB9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB9ABC_QSEB10ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10A{OK,KO}
	CONSUMES_SERVICE
		SVDU10A_QSEB9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9ABC_SVDU10A.ALIVE{bool},
		MID.SVDU10A{MID_state},
		MID.SVDU10A.QSEB9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9ABC_SVDU10A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10A.QSEB9ABC.LINK DEPENDS_ON SVDU10A_QSEB9ABC.ALIVE, status:
		DEAD IF SVDU10A_QSEB9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9ABC_SVDU10A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10A_QSEB9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10B{OK,KO}
	CONSUMES_SERVICE
		SVDU10B_QSEB9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9ABC_SVDU10B.ALIVE{bool},
		MID.SVDU10B{MID_state},
		MID.SVDU10B.QSEB9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9ABC_SVDU10B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10B.QSEB9ABC.LINK DEPENDS_ON SVDU10B_QSEB9ABC.ALIVE, status:
		DEAD IF SVDU10B_QSEB9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9ABC_SVDU10B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10B_QSEB9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10C{OK,KO}
	CONSUMES_SERVICE
		SVDU10C_QSEB9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9ABC_SVDU10C.ALIVE{bool},
		MID.SVDU10C{MID_state},
		MID.SVDU10C.QSEB9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9ABC_SVDU10C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10C.QSEB9ABC.LINK DEPENDS_ON SVDU10C_QSEB9ABC.ALIVE, status:
		DEAD IF SVDU10C_QSEB9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9ABC_SVDU10C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10C_QSEB9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB_9ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB_9ABC_QSEB9ABC.ALIVE{bool},
		QSEB_9ABC_SVDU8A.ALIVE{bool},
		QSEB_9ABC_SVDU8B.ALIVE{bool},
		QSEB_9ABC_SVDU8C.ALIVE{bool},
		QSEB_9ABC_QSEB8ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9ABC_QSEB_9ABC.ALIVE{bool},
		SVDU8A_QSEB_9ABC.ALIVE{bool},
		SVDU8B_QSEB_9ABC.ALIVE{bool},
		SVDU8C_QSEB_9ABC.ALIVE{bool},
		QSEB8ABC_QSEB_9ABC.ALIVE{bool},
		MID.QSEB_9ABC{MID_state},
		Communication{okko},
		MID.QSEB_9ABC.QSEB9ABC.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8A.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8B.LINK{LINK_state},
		MID.QSEB_9ABC.SVDU8C.LINK{LINK_state},
		MID.QSEB_9ABC.QSEB8ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9ABC_QSEB_9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8A_QSEB_9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8B_QSEB_9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8C_QSEB_9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB8ABC_QSEB_9ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB_9ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB_9ABC.QSEB9ABC.LINK DEPENDS_ON QSEB_9ABC_QSEB9ABC.ALIVE, status:
		DEAD IF QSEB_9ABC_QSEB9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB_9ABC.SVDU8A.LINK DEPENDS_ON QSEB_9ABC_SVDU8A.ALIVE, status:
		DEAD IF QSEB_9ABC_SVDU8A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB_9ABC.SVDU8B.LINK DEPENDS_ON QSEB_9ABC_SVDU8B.ALIVE, status:
		DEAD IF QSEB_9ABC_SVDU8B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB_9ABC.SVDU8C.LINK DEPENDS_ON QSEB_9ABC_SVDU8C.ALIVE, status:
		DEAD IF QSEB_9ABC_SVDU8C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB_9ABC.QSEB8ABC.LINK DEPENDS_ON QSEB_9ABC_QSEB8ABC.ALIVE, status:
		DEAD IF QSEB_9ABC_QSEB8ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9ABC_QSEB_9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB_9ABC_QSEB9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8A{OK,KO}
	CONSUMES_SERVICE
		SVDU8A_QSEB_9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB_9ABC_SVDU8A.ALIVE{bool},
		MID.SVDU8A{MID_state},
		MID.SVDU8A.QSEB_9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB_9ABC_SVDU8A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8A.QSEB_9ABC.LINK DEPENDS_ON SVDU8A_QSEB_9ABC.ALIVE, status:
		DEAD IF SVDU8A_QSEB_9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB_9ABC_SVDU8A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8A_QSEB_9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8B{OK,KO}
	CONSUMES_SERVICE
		SVDU8B_QSEB_9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB_9ABC_SVDU8B.ALIVE{bool},
		MID.SVDU8B{MID_state},
		MID.SVDU8B.QSEB_9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB_9ABC_SVDU8B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8B.QSEB_9ABC.LINK DEPENDS_ON SVDU8B_QSEB_9ABC.ALIVE, status:
		DEAD IF SVDU8B_QSEB_9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB_9ABC_SVDU8B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8B_QSEB_9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8C{OK,KO}
	CONSUMES_SERVICE
		SVDU8C_QSEB_9ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB_9ABC_SVDU8C.ALIVE{bool},
		MID.SVDU8C{MID_state},
		MID.SVDU8C.QSEB_9ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB_9ABC_SVDU8C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8C.QSEB_9ABC.LINK DEPENDS_ON SVDU8C_QSEB_9ABC.ALIVE, status:
		DEAD IF SVDU8C_QSEB_9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB_9ABC_SVDU8C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8C_QSEB_9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB8ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB8ABC_QSEB_9ABC.ALIVE{bool},
		QSEB8ABC_SVDU9A.ALIVE{bool},
		QSEB8ABC_SVDU9B.ALIVE{bool},
		QSEB8ABC_SVDU9C.ALIVE{bool},
		QSEB8ABC_QSEB30ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB_9ABC_QSEB8ABC.ALIVE{bool},
		SVDU9A_QSEB8ABC.ALIVE{bool},
		SVDU9B_QSEB8ABC.ALIVE{bool},
		SVDU9C_QSEB8ABC.ALIVE{bool},
		QSEB30ABC_QSEB8ABC.ALIVE{bool},
		MID.QSEB8ABC{MID_state},
		Communication{okko},
		MID.QSEB8ABC.QSEB_9ABC.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9A.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9B.LINK{LINK_state},
		MID.QSEB8ABC.SVDU9C.LINK{LINK_state},
		MID.QSEB8ABC.QSEB30ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB_9ABC_QSEB8ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9A_QSEB8ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9B_QSEB8ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9C_QSEB8ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB30ABC_QSEB8ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB8ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB8ABC.QSEB_9ABC.LINK DEPENDS_ON QSEB8ABC_QSEB_9ABC.ALIVE, status:
		DEAD IF QSEB8ABC_QSEB_9ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8ABC.SVDU9A.LINK DEPENDS_ON QSEB8ABC_SVDU9A.ALIVE, status:
		DEAD IF QSEB8ABC_SVDU9A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8ABC.SVDU9B.LINK DEPENDS_ON QSEB8ABC_SVDU9B.ALIVE, status:
		DEAD IF QSEB8ABC_SVDU9B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8ABC.SVDU9C.LINK DEPENDS_ON QSEB8ABC_SVDU9C.ALIVE, status:
		DEAD IF QSEB8ABC_SVDU9C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8ABC.QSEB30ABC.LINK DEPENDS_ON QSEB8ABC_QSEB30ABC.ALIVE, status:
		DEAD IF QSEB8ABC_QSEB30ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB_9ABC_QSEB8ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB8ABC_QSEB_9ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9A{OK,KO}
	CONSUMES_SERVICE
		SVDU9A_QSEB8ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8ABC_SVDU9A.ALIVE{bool},
		MID.SVDU9A{MID_state},
		MID.SVDU9A.QSEB8ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8ABC_SVDU9A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9A.QSEB8ABC.LINK DEPENDS_ON SVDU9A_QSEB8ABC.ALIVE, status:
		DEAD IF SVDU9A_QSEB8ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8ABC_SVDU9A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9A_QSEB8ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9B{OK,KO}
	CONSUMES_SERVICE
		SVDU9B_QSEB8ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8ABC_SVDU9B.ALIVE{bool},
		MID.SVDU9B{MID_state},
		MID.SVDU9B.QSEB8ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8ABC_SVDU9B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9B.QSEB8ABC.LINK DEPENDS_ON SVDU9B_QSEB8ABC.ALIVE, status:
		DEAD IF SVDU9B_QSEB8ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8ABC_SVDU9B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9B_QSEB8ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9C{OK,KO}
	CONSUMES_SERVICE
		SVDU9C_QSEB8ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8ABC_SVDU9C.ALIVE{bool},
		MID.SVDU9C{MID_state},
		MID.SVDU9C.QSEB8ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8ABC_SVDU9C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9C.QSEB8ABC.LINK DEPENDS_ON SVDU9C_QSEB8ABC.ALIVE, status:
		DEAD IF SVDU9C_QSEB8ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8ABC_SVDU9C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9C_QSEB8ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB30ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB30ABC_QSEB8ABC.ALIVE{bool},
		QSEB30ABC_SVDU31A.ALIVE{bool},
		QSEB30ABC_SVDU31B.ALIVE{bool},
		QSEB30ABC_SVDU31C.ALIVE{bool},
		QSEB30ABC_QSEB29ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8ABC_QSEB30ABC.ALIVE{bool},
		SVDU31A_QSEB30ABC.ALIVE{bool},
		SVDU31B_QSEB30ABC.ALIVE{bool},
		SVDU31C_QSEB30ABC.ALIVE{bool},
		QSEB29ABC_QSEB30ABC.ALIVE{bool},
		MID.QSEB30ABC{MID_state},
		Communication{okko},
		MID.QSEB30ABC.QSEB8ABC.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31A.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31B.LINK{LINK_state},
		MID.QSEB30ABC.SVDU31C.LINK{LINK_state},
		MID.QSEB30ABC.QSEB29ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8ABC_QSEB30ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31A_QSEB30ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31B_QSEB30ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31C_QSEB30ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB29ABC_QSEB30ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB30ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB30ABC.QSEB8ABC.LINK DEPENDS_ON QSEB30ABC_QSEB8ABC.ALIVE, status:
		DEAD IF QSEB30ABC_QSEB8ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30ABC.SVDU31A.LINK DEPENDS_ON QSEB30ABC_SVDU31A.ALIVE, status:
		DEAD IF QSEB30ABC_SVDU31A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30ABC.SVDU31B.LINK DEPENDS_ON QSEB30ABC_SVDU31B.ALIVE, status:
		DEAD IF QSEB30ABC_SVDU31B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30ABC.SVDU31C.LINK DEPENDS_ON QSEB30ABC_SVDU31C.ALIVE, status:
		DEAD IF QSEB30ABC_SVDU31C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30ABC.QSEB29ABC.LINK DEPENDS_ON QSEB30ABC_QSEB29ABC.ALIVE, status:
		DEAD IF QSEB30ABC_QSEB29ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8ABC_QSEB30ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB30ABC_QSEB8ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31A{OK,KO}
	CONSUMES_SERVICE
		SVDU31A_QSEB30ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30ABC_SVDU31A.ALIVE{bool},
		MID.SVDU31A{MID_state},
		MID.SVDU31A.QSEB30ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30ABC_SVDU31A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31A.QSEB30ABC.LINK DEPENDS_ON SVDU31A_QSEB30ABC.ALIVE, status:
		DEAD IF SVDU31A_QSEB30ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30ABC_SVDU31A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31A_QSEB30ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31B{OK,KO}
	CONSUMES_SERVICE
		SVDU31B_QSEB30ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30ABC_SVDU31B.ALIVE{bool},
		MID.SVDU31B{MID_state},
		MID.SVDU31B.QSEB30ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30ABC_SVDU31B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31B.QSEB30ABC.LINK DEPENDS_ON SVDU31B_QSEB30ABC.ALIVE, status:
		DEAD IF SVDU31B_QSEB30ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30ABC_SVDU31B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31B_QSEB30ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31C{OK,KO}
	CONSUMES_SERVICE
		SVDU31C_QSEB30ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30ABC_SVDU31C.ALIVE{bool},
		MID.SVDU31C{MID_state},
		MID.SVDU31C.QSEB30ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30ABC_SVDU31C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31C.QSEB30ABC.LINK DEPENDS_ON SVDU31C_QSEB30ABC.ALIVE, status:
		DEAD IF SVDU31C_QSEB30ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30ABC_SVDU31C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31C_QSEB30ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB29ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB29ABC_QSEB30ABC.ALIVE{bool},
		QSEB29ABC_SVDU30A.ALIVE{bool},
		QSEB29ABC_SVDU30B.ALIVE{bool},
		QSEB29ABC_SVDU30C.ALIVE{bool},
		QSEB29ABC_QSEB28ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30ABC_QSEB29ABC.ALIVE{bool},
		SVDU30A_QSEB29ABC.ALIVE{bool},
		SVDU30B_QSEB29ABC.ALIVE{bool},
		SVDU30C_QSEB29ABC.ALIVE{bool},
		QSEB28ABC_QSEB29ABC.ALIVE{bool},
		MID.QSEB29ABC{MID_state},
		Communication{okko},
		MID.QSEB29ABC.QSEB30ABC.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30A.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30B.LINK{LINK_state},
		MID.QSEB29ABC.SVDU30C.LINK{LINK_state},
		MID.QSEB29ABC.QSEB28ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30ABC_QSEB29ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30A_QSEB29ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30B_QSEB29ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30C_QSEB29ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB28ABC_QSEB29ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB29ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB29ABC.QSEB30ABC.LINK DEPENDS_ON QSEB29ABC_QSEB30ABC.ALIVE, status:
		DEAD IF QSEB29ABC_QSEB30ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29ABC.SVDU30A.LINK DEPENDS_ON QSEB29ABC_SVDU30A.ALIVE, status:
		DEAD IF QSEB29ABC_SVDU30A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29ABC.SVDU30B.LINK DEPENDS_ON QSEB29ABC_SVDU30B.ALIVE, status:
		DEAD IF QSEB29ABC_SVDU30B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29ABC.SVDU30C.LINK DEPENDS_ON QSEB29ABC_SVDU30C.ALIVE, status:
		DEAD IF QSEB29ABC_SVDU30C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29ABC.QSEB28ABC.LINK DEPENDS_ON QSEB29ABC_QSEB28ABC.ALIVE, status:
		DEAD IF QSEB29ABC_QSEB28ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30ABC_QSEB29ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB29ABC_QSEB30ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30A{OK,KO}
	CONSUMES_SERVICE
		SVDU30A_QSEB29ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29ABC_SVDU30A.ALIVE{bool},
		MID.SVDU30A{MID_state},
		MID.SVDU30A.QSEB29ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29ABC_SVDU30A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30A.QSEB29ABC.LINK DEPENDS_ON SVDU30A_QSEB29ABC.ALIVE, status:
		DEAD IF SVDU30A_QSEB29ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29ABC_SVDU30A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30A_QSEB29ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30B{OK,KO}
	CONSUMES_SERVICE
		SVDU30B_QSEB29ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29ABC_SVDU30B.ALIVE{bool},
		MID.SVDU30B{MID_state},
		MID.SVDU30B.QSEB29ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29ABC_SVDU30B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30B.QSEB29ABC.LINK DEPENDS_ON SVDU30B_QSEB29ABC.ALIVE, status:
		DEAD IF SVDU30B_QSEB29ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29ABC_SVDU30B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30B_QSEB29ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30C{OK,KO}
	CONSUMES_SERVICE
		SVDU30C_QSEB29ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29ABC_SVDU30C.ALIVE{bool},
		MID.SVDU30C{MID_state},
		MID.SVDU30C.QSEB29ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29ABC_SVDU30C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30C.QSEB29ABC.LINK DEPENDS_ON SVDU30C_QSEB29ABC.ALIVE, status:
		DEAD IF SVDU30C_QSEB29ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29ABC_SVDU30C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30C_QSEB29ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB28ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB28ABC_QSEB29ABC.ALIVE{bool},
		QSEB28ABC_SVDU29A.ALIVE{bool},
		QSEB28ABC_SVDU29B.ALIVE{bool},
		QSEB28ABC_SVDU29C.ALIVE{bool},
		QSEB28ABC_QSEB27ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29ABC_QSEB28ABC.ALIVE{bool},
		SVDU29A_QSEB28ABC.ALIVE{bool},
		SVDU29B_QSEB28ABC.ALIVE{bool},
		SVDU29C_QSEB28ABC.ALIVE{bool},
		QSEB27ABC_QSEB28ABC.ALIVE{bool},
		MID.QSEB28ABC{MID_state},
		Communication{okko},
		MID.QSEB28ABC.QSEB29ABC.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29A.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29B.LINK{LINK_state},
		MID.QSEB28ABC.SVDU29C.LINK{LINK_state},
		MID.QSEB28ABC.QSEB27ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29ABC_QSEB28ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29A_QSEB28ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29B_QSEB28ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29C_QSEB28ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB27ABC_QSEB28ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB28ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB28ABC.QSEB29ABC.LINK DEPENDS_ON QSEB28ABC_QSEB29ABC.ALIVE, status:
		DEAD IF QSEB28ABC_QSEB29ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28ABC.SVDU29A.LINK DEPENDS_ON QSEB28ABC_SVDU29A.ALIVE, status:
		DEAD IF QSEB28ABC_SVDU29A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28ABC.SVDU29B.LINK DEPENDS_ON QSEB28ABC_SVDU29B.ALIVE, status:
		DEAD IF QSEB28ABC_SVDU29B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28ABC.SVDU29C.LINK DEPENDS_ON QSEB28ABC_SVDU29C.ALIVE, status:
		DEAD IF QSEB28ABC_SVDU29C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28ABC.QSEB27ABC.LINK DEPENDS_ON QSEB28ABC_QSEB27ABC.ALIVE, status:
		DEAD IF QSEB28ABC_QSEB27ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29ABC_QSEB28ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB28ABC_QSEB29ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29A{OK,KO}
	CONSUMES_SERVICE
		SVDU29A_QSEB28ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28ABC_SVDU29A.ALIVE{bool},
		MID.SVDU29A{MID_state},
		MID.SVDU29A.QSEB28ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28ABC_SVDU29A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29A.QSEB28ABC.LINK DEPENDS_ON SVDU29A_QSEB28ABC.ALIVE, status:
		DEAD IF SVDU29A_QSEB28ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28ABC_SVDU29A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29A_QSEB28ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29B{OK,KO}
	CONSUMES_SERVICE
		SVDU29B_QSEB28ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28ABC_SVDU29B.ALIVE{bool},
		MID.SVDU29B{MID_state},
		MID.SVDU29B.QSEB28ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28ABC_SVDU29B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29B.QSEB28ABC.LINK DEPENDS_ON SVDU29B_QSEB28ABC.ALIVE, status:
		DEAD IF SVDU29B_QSEB28ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28ABC_SVDU29B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29B_QSEB28ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29C{OK,KO}
	CONSUMES_SERVICE
		SVDU29C_QSEB28ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28ABC_SVDU29C.ALIVE{bool},
		MID.SVDU29C{MID_state},
		MID.SVDU29C.QSEB28ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28ABC_SVDU29C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29C.QSEB28ABC.LINK DEPENDS_ON SVDU29C_QSEB28ABC.ALIVE, status:
		DEAD IF SVDU29C_QSEB28ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28ABC_SVDU29C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29C_QSEB28ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB27ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB27ABC_QSEB28ABC.ALIVE{bool},
		QSEB27ABC_SVDU28A.ALIVE{bool},
		QSEB27ABC_SVDU28B.ALIVE{bool},
		QSEB27ABC_SVDU28C.ALIVE{bool},
		QSEB27ABC_QSEB26ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28ABC_QSEB27ABC.ALIVE{bool},
		SVDU28A_QSEB27ABC.ALIVE{bool},
		SVDU28B_QSEB27ABC.ALIVE{bool},
		SVDU28C_QSEB27ABC.ALIVE{bool},
		QSEB26ABC_QSEB27ABC.ALIVE{bool},
		MID.QSEB27ABC{MID_state},
		Communication{okko},
		MID.QSEB27ABC.QSEB28ABC.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28A.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28B.LINK{LINK_state},
		MID.QSEB27ABC.SVDU28C.LINK{LINK_state},
		MID.QSEB27ABC.QSEB26ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28ABC_QSEB27ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28A_QSEB27ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28B_QSEB27ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28C_QSEB27ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB26ABC_QSEB27ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB27ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB27ABC.QSEB28ABC.LINK DEPENDS_ON QSEB27ABC_QSEB28ABC.ALIVE, status:
		DEAD IF QSEB27ABC_QSEB28ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27ABC.SVDU28A.LINK DEPENDS_ON QSEB27ABC_SVDU28A.ALIVE, status:
		DEAD IF QSEB27ABC_SVDU28A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27ABC.SVDU28B.LINK DEPENDS_ON QSEB27ABC_SVDU28B.ALIVE, status:
		DEAD IF QSEB27ABC_SVDU28B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27ABC.SVDU28C.LINK DEPENDS_ON QSEB27ABC_SVDU28C.ALIVE, status:
		DEAD IF QSEB27ABC_SVDU28C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27ABC.QSEB26ABC.LINK DEPENDS_ON QSEB27ABC_QSEB26ABC.ALIVE, status:
		DEAD IF QSEB27ABC_QSEB26ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28ABC_QSEB27ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB27ABC_QSEB28ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28A{OK,KO}
	CONSUMES_SERVICE
		SVDU28A_QSEB27ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27ABC_SVDU28A.ALIVE{bool},
		MID.SVDU28A{MID_state},
		MID.SVDU28A.QSEB27ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27ABC_SVDU28A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28A.QSEB27ABC.LINK DEPENDS_ON SVDU28A_QSEB27ABC.ALIVE, status:
		DEAD IF SVDU28A_QSEB27ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27ABC_SVDU28A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28A_QSEB27ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28B{OK,KO}
	CONSUMES_SERVICE
		SVDU28B_QSEB27ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27ABC_SVDU28B.ALIVE{bool},
		MID.SVDU28B{MID_state},
		MID.SVDU28B.QSEB27ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27ABC_SVDU28B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28B.QSEB27ABC.LINK DEPENDS_ON SVDU28B_QSEB27ABC.ALIVE, status:
		DEAD IF SVDU28B_QSEB27ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27ABC_SVDU28B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28B_QSEB27ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28C{OK,KO}
	CONSUMES_SERVICE
		SVDU28C_QSEB27ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27ABC_SVDU28C.ALIVE{bool},
		MID.SVDU28C{MID_state},
		MID.SVDU28C.QSEB27ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27ABC_SVDU28C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28C.QSEB27ABC.LINK DEPENDS_ON SVDU28C_QSEB27ABC.ALIVE, status:
		DEAD IF SVDU28C_QSEB27ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27ABC_SVDU28C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28C_QSEB27ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB26ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB26ABC_QSEB27ABC.ALIVE{bool},
		QSEB26ABC_SVDU27A.ALIVE{bool},
		QSEB26ABC_SVDU27B.ALIVE{bool},
		QSEB26ABC_SVDU27C.ALIVE{bool},
		QSEB26ABC_QSEB25ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27ABC_QSEB26ABC.ALIVE{bool},
		SVDU27A_QSEB26ABC.ALIVE{bool},
		SVDU27B_QSEB26ABC.ALIVE{bool},
		SVDU27C_QSEB26ABC.ALIVE{bool},
		QSEB25ABC_QSEB26ABC.ALIVE{bool},
		MID.QSEB26ABC{MID_state},
		Communication{okko},
		MID.QSEB26ABC.QSEB27ABC.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27A.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27B.LINK{LINK_state},
		MID.QSEB26ABC.SVDU27C.LINK{LINK_state},
		MID.QSEB26ABC.QSEB25ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27ABC_QSEB26ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27A_QSEB26ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27B_QSEB26ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27C_QSEB26ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB25ABC_QSEB26ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB26ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB26ABC.QSEB27ABC.LINK DEPENDS_ON QSEB26ABC_QSEB27ABC.ALIVE, status:
		DEAD IF QSEB26ABC_QSEB27ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26ABC.SVDU27A.LINK DEPENDS_ON QSEB26ABC_SVDU27A.ALIVE, status:
		DEAD IF QSEB26ABC_SVDU27A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26ABC.SVDU27B.LINK DEPENDS_ON QSEB26ABC_SVDU27B.ALIVE, status:
		DEAD IF QSEB26ABC_SVDU27B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26ABC.SVDU27C.LINK DEPENDS_ON QSEB26ABC_SVDU27C.ALIVE, status:
		DEAD IF QSEB26ABC_SVDU27C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26ABC.QSEB25ABC.LINK DEPENDS_ON QSEB26ABC_QSEB25ABC.ALIVE, status:
		DEAD IF QSEB26ABC_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27ABC_QSEB26ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB26ABC_QSEB27ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27A{OK,KO}
	CONSUMES_SERVICE
		SVDU27A_QSEB26ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26ABC_SVDU27A.ALIVE{bool},
		MID.SVDU27A{MID_state},
		MID.SVDU27A.QSEB26ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26ABC_SVDU27A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27A.QSEB26ABC.LINK DEPENDS_ON SVDU27A_QSEB26ABC.ALIVE, status:
		DEAD IF SVDU27A_QSEB26ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26ABC_SVDU27A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27A_QSEB26ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27B{OK,KO}
	CONSUMES_SERVICE
		SVDU27B_QSEB26ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26ABC_SVDU27B.ALIVE{bool},
		MID.SVDU27B{MID_state},
		MID.SVDU27B.QSEB26ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26ABC_SVDU27B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27B.QSEB26ABC.LINK DEPENDS_ON SVDU27B_QSEB26ABC.ALIVE, status:
		DEAD IF SVDU27B_QSEB26ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26ABC_SVDU27B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27B_QSEB26ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27C{OK,KO}
	CONSUMES_SERVICE
		SVDU27C_QSEB26ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26ABC_SVDU27C.ALIVE{bool},
		MID.SVDU27C{MID_state},
		MID.SVDU27C.QSEB26ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26ABC_SVDU27C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27C.QSEB26ABC.LINK DEPENDS_ON SVDU27C_QSEB26ABC.ALIVE, status:
		DEAD IF SVDU27C_QSEB26ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26ABC_SVDU27C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27C_QSEB26ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB25ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB25ABC_QSEB26ABC.ALIVE{bool},
		QSEB25ABC_SVDU26A.ALIVE{bool},
		QSEB25ABC_SVDU26B.ALIVE{bool},
		QSEB25ABC_SVDU26C.ALIVE{bool},
		QSEB25ABC_SVDU25A.ALIVE{bool},
		QSEB25ABC_QSEB24BC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26ABC_QSEB25ABC.ALIVE{bool},
		SVDU26A_QSEB25ABC.ALIVE{bool},
		SVDU26B_QSEB25ABC.ALIVE{bool},
		SVDU26C_QSEB25ABC.ALIVE{bool},
		SVDU25A_QSEB25ABC.ALIVE{bool},
		QSEB24BC_QSEB25ABC.ALIVE{bool},
		MID.QSEB25ABC{MID_state},
		Communication{okko},
		MID.QSEB25ABC.QSEB26ABC.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26A.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26B.LINK{LINK_state},
		MID.QSEB25ABC.SVDU26C.LINK{LINK_state},
		MID.QSEB25ABC.SVDU25A.LINK{LINK_state},
		MID.QSEB25ABC.QSEB24BC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26ABC_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26A_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26B_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26C_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25A_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB24BC_QSEB25ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB25ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB25ABC.QSEB26ABC.LINK DEPENDS_ON QSEB25ABC_QSEB26ABC.ALIVE, status:
		DEAD IF QSEB25ABC_QSEB26ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25ABC.SVDU26A.LINK DEPENDS_ON QSEB25ABC_SVDU26A.ALIVE, status:
		DEAD IF QSEB25ABC_SVDU26A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25ABC.SVDU26B.LINK DEPENDS_ON QSEB25ABC_SVDU26B.ALIVE, status:
		DEAD IF QSEB25ABC_SVDU26B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25ABC.SVDU26C.LINK DEPENDS_ON QSEB25ABC_SVDU26C.ALIVE, status:
		DEAD IF QSEB25ABC_SVDU26C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25ABC.SVDU25A.LINK DEPENDS_ON QSEB25ABC_SVDU25A.ALIVE, status:
		DEAD IF QSEB25ABC_SVDU25A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25ABC.QSEB24BC.LINK DEPENDS_ON QSEB25ABC_QSEB24BC.ALIVE, status:
		DEAD IF QSEB25ABC_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26ABC_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB25ABC_QSEB26ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26A{OK,KO}
	CONSUMES_SERVICE
		SVDU26A_QSEB25ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25ABC_SVDU26A.ALIVE{bool},
		MID.SVDU26A{MID_state},
		MID.SVDU26A.QSEB25ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25ABC_SVDU26A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26A.QSEB25ABC.LINK DEPENDS_ON SVDU26A_QSEB25ABC.ALIVE, status:
		DEAD IF SVDU26A_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25ABC_SVDU26A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26A_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26B{OK,KO}
	CONSUMES_SERVICE
		SVDU26B_QSEB25ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25ABC_SVDU26B.ALIVE{bool},
		MID.SVDU26B{MID_state},
		MID.SVDU26B.QSEB25ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25ABC_SVDU26B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26B.QSEB25ABC.LINK DEPENDS_ON SVDU26B_QSEB25ABC.ALIVE, status:
		DEAD IF SVDU26B_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25ABC_SVDU26B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26B_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26C{OK,KO}
	CONSUMES_SERVICE
		SVDU26C_QSEB25ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25ABC_SVDU26C.ALIVE{bool},
		MID.SVDU26C{MID_state},
		MID.SVDU26C.QSEB25ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25ABC_SVDU26C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26C.QSEB25ABC.LINK DEPENDS_ON SVDU26C_QSEB25ABC.ALIVE, status:
		DEAD IF SVDU26C_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25ABC_SVDU26C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26C_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25A{OK,KO}
	CONSUMES_SERVICE
		SVDU25A_QSEB25ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25ABC_SVDU25A.ALIVE{bool},
		MID.SVDU25A{MID_state},
		MID.SVDU25A.QSEB25ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25ABC_SVDU25A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25A.QSEB25ABC.LINK DEPENDS_ON SVDU25A_QSEB25ABC.ALIVE, status:
		DEAD IF SVDU25A_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25ABC_SVDU25A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25A_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB24BC{OK,KO}
	CONSUMES_SERVICE
		QSEB24BC_QSEB25ABC.ALIVE{bool},
		QSEB24BC_SVDU24B.ALIVE{bool},
		QSEB24BC_SVDU24C.ALIVE{bool},
		QSEB24BC_SVDU25B.ALIVE{bool},
		QSEB24BC_SVDU25C.ALIVE{bool},
		QSEB24BC_QSEB35ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25ABC_QSEB24BC.ALIVE{bool},
		SVDU24B_QSEB24BC.ALIVE{bool},
		SVDU24C_QSEB24BC.ALIVE{bool},
		SVDU25B_QSEB24BC.ALIVE{bool},
		SVDU25C_QSEB24BC.ALIVE{bool},
		QSEB35ABC_QSEB24BC.ALIVE{bool},
		Communication{okko},
		MID.QSEB24BC{MID_state},
		MID.QSEB24BC.QSEB25ABC.LINK{LINK_state},
		MID.QSEB24BC.SVDU24B.LINK{LINK_state},
		MID.QSEB24BC.SVDU24C.LINK{LINK_state},
		MID.QSEB24BC.SVDU25B.LINK{LINK_state},
		MID.QSEB24BC.SVDU25C.LINK{LINK_state},
		MID.QSEB24BC.QSEB35ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25ABC_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU24B_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU24C_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25B_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25C_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB35ABC_QSEB24BC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB24BC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB24BC.QSEB25ABC.LINK DEPENDS_ON QSEB24BC_QSEB25ABC.ALIVE, status:
		DEAD IF QSEB24BC_QSEB25ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24BC.SVDU24B.LINK DEPENDS_ON QSEB24BC_SVDU24B.ALIVE, status:
		DEAD IF QSEB24BC_SVDU24B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24BC.SVDU24C.LINK DEPENDS_ON QSEB24BC_SVDU24C.ALIVE, status:
		DEAD IF QSEB24BC_SVDU24C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24BC.SVDU25B.LINK DEPENDS_ON QSEB24BC_SVDU25B.ALIVE, status:
		DEAD IF QSEB24BC_SVDU25B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24BC.SVDU25C.LINK DEPENDS_ON QSEB24BC_SVDU25C.ALIVE, status:
		DEAD IF QSEB24BC_SVDU25C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24BC.QSEB35ABC.LINK DEPENDS_ON QSEB24BC_QSEB35ABC.ALIVE, status:
		DEAD IF QSEB24BC_QSEB35ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25ABC_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB24BC_QSEB25ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU24B{OK,KO}
	CONSUMES_SERVICE
		SVDU24B_QSEB24BC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24BC_SVDU24B.ALIVE{bool},
		MID.SVDU24B{MID_state},
		MID.SVDU24B.QSEB24BC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24BC_SVDU24B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU24B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU24B.QSEB24BC.LINK DEPENDS_ON SVDU24B_QSEB24BC.ALIVE, status:
		DEAD IF SVDU24B_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24BC_SVDU24B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU24B_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU24C{OK,KO}
	CONSUMES_SERVICE
		SVDU24C_QSEB24BC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24BC_SVDU24C.ALIVE{bool},
		MID.SVDU24C{MID_state},
		MID.SVDU24C.QSEB24BC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24BC_SVDU24C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU24C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU24C.QSEB24BC.LINK DEPENDS_ON SVDU24C_QSEB24BC.ALIVE, status:
		DEAD IF SVDU24C_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24BC_SVDU24C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU24C_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25B{OK,KO}
	CONSUMES_SERVICE
		SVDU25B_QSEB24BC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24BC_SVDU25B.ALIVE{bool},
		MID.SVDU25B{MID_state},
		MID.SVDU25B.QSEB24BC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24BC_SVDU25B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25B.QSEB24BC.LINK DEPENDS_ON SVDU25B_QSEB24BC.ALIVE, status:
		DEAD IF SVDU25B_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24BC_SVDU25B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25B_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25C{OK,KO}
	CONSUMES_SERVICE
		SVDU25C_QSEB24BC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24BC_SVDU25C.ALIVE{bool},
		MID.SVDU25C{MID_state},
		MID.SVDU25C.QSEB24BC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24BC_SVDU25C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25C.QSEB24BC.LINK DEPENDS_ON SVDU25C_QSEB24BC.ALIVE, status:
		DEAD IF SVDU25C_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24BC_SVDU25C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25C_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB35ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB35ABC_QSEB24BC.ALIVE{bool},
		QSEB35ABC_SVDU36A.ALIVE{bool},
		QSEB35ABC_SVDU36B.ALIVE{bool},
		QSEB35ABC_SVDU36C.ALIVE{bool},
		QSEB35ABC_QSEB34ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24BC_QSEB35ABC.ALIVE{bool},
		SVDU36A_QSEB35ABC.ALIVE{bool},
		SVDU36B_QSEB35ABC.ALIVE{bool},
		SVDU36C_QSEB35ABC.ALIVE{bool},
		QSEB34ABC_QSEB35ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB35ABC{MID_state},
		MID.QSEB35ABC.QSEB24BC.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36A.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36B.LINK{LINK_state},
		MID.QSEB35ABC.SVDU36C.LINK{LINK_state},
		MID.QSEB35ABC.QSEB34ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24BC_QSEB35ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36A_QSEB35ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36B_QSEB35ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36C_QSEB35ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB34ABC_QSEB35ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB35ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB35ABC.QSEB24BC.LINK DEPENDS_ON QSEB35ABC_QSEB24BC.ALIVE, status:
		DEAD IF QSEB35ABC_QSEB24BC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35ABC.SVDU36A.LINK DEPENDS_ON QSEB35ABC_SVDU36A.ALIVE, status:
		DEAD IF QSEB35ABC_SVDU36A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35ABC.SVDU36B.LINK DEPENDS_ON QSEB35ABC_SVDU36B.ALIVE, status:
		DEAD IF QSEB35ABC_SVDU36B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35ABC.SVDU36C.LINK DEPENDS_ON QSEB35ABC_SVDU36C.ALIVE, status:
		DEAD IF QSEB35ABC_SVDU36C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35ABC.QSEB34ABC.LINK DEPENDS_ON QSEB35ABC_QSEB34ABC.ALIVE, status:
		DEAD IF QSEB35ABC_QSEB34ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24BC_QSEB35ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB35ABC_QSEB24BC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36A{OK,KO}
	CONSUMES_SERVICE
		SVDU36A_QSEB35ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35ABC_SVDU36A.ALIVE{bool},
		MID.SVDU36A{MID_state},
		MID.SVDU36A.QSEB35ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35ABC_SVDU36A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36A.QSEB35ABC.LINK DEPENDS_ON SVDU36A_QSEB35ABC.ALIVE, status:
		DEAD IF SVDU36A_QSEB35ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35ABC_SVDU36A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36A_QSEB35ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36B{OK,KO}
	CONSUMES_SERVICE
		SVDU36B_QSEB35ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35ABC_SVDU36B.ALIVE{bool},
		MID.SVDU36B{MID_state},
		MID.SVDU36B.QSEB35ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35ABC_SVDU36B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36B.QSEB35ABC.LINK DEPENDS_ON SVDU36B_QSEB35ABC.ALIVE, status:
		DEAD IF SVDU36B_QSEB35ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35ABC_SVDU36B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36B_QSEB35ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36C{OK,KO}
	CONSUMES_SERVICE
		SVDU36C_QSEB35ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35ABC_SVDU36C.ALIVE{bool},
		MID.SVDU36C{MID_state},
		MID.SVDU36C.QSEB35ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35ABC_SVDU36C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36C.QSEB35ABC.LINK DEPENDS_ON SVDU36C_QSEB35ABC.ALIVE, status:
		DEAD IF SVDU36C_QSEB35ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35ABC_SVDU36C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36C_QSEB35ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB34ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB34ABC_QSEB35ABC.ALIVE{bool},
		QSEB34ABC_SVDU35A.ALIVE{bool},
		QSEB34ABC_SVDU35B.ALIVE{bool},
		QSEB34ABC_SVDU35C.ALIVE{bool},
		QSEB34ABC_QSEB33ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35ABC_QSEB34ABC.ALIVE{bool},
		SVDU35A_QSEB34ABC.ALIVE{bool},
		SVDU35B_QSEB34ABC.ALIVE{bool},
		SVDU35C_QSEB34ABC.ALIVE{bool},
		QSEB33ABC_QSEB34ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB34ABC{MID_state},
		MID.QSEB34ABC.QSEB35ABC.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35A.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35B.LINK{LINK_state},
		MID.QSEB34ABC.SVDU35C.LINK{LINK_state},
		MID.QSEB34ABC.QSEB33ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35ABC_QSEB34ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35A_QSEB34ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35B_QSEB34ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35C_QSEB34ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB33ABC_QSEB34ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB34ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB34ABC.QSEB35ABC.LINK DEPENDS_ON QSEB34ABC_QSEB35ABC.ALIVE, status:
		DEAD IF QSEB34ABC_QSEB35ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34ABC.SVDU35A.LINK DEPENDS_ON QSEB34ABC_SVDU35A.ALIVE, status:
		DEAD IF QSEB34ABC_SVDU35A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34ABC.SVDU35B.LINK DEPENDS_ON QSEB34ABC_SVDU35B.ALIVE, status:
		DEAD IF QSEB34ABC_SVDU35B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34ABC.SVDU35C.LINK DEPENDS_ON QSEB34ABC_SVDU35C.ALIVE, status:
		DEAD IF QSEB34ABC_SVDU35C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34ABC.QSEB33ABC.LINK DEPENDS_ON QSEB34ABC_QSEB33ABC.ALIVE, status:
		DEAD IF QSEB34ABC_QSEB33ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35ABC_QSEB34ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB34ABC_QSEB35ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35A{OK,KO}
	CONSUMES_SERVICE
		SVDU35A_QSEB34ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34ABC_SVDU35A.ALIVE{bool},
		MID.SVDU35A{MID_state},
		MID.SVDU35A.QSEB34ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34ABC_SVDU35A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35A.QSEB34ABC.LINK DEPENDS_ON SVDU35A_QSEB34ABC.ALIVE, status:
		DEAD IF SVDU35A_QSEB34ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34ABC_SVDU35A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35A_QSEB34ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35B{OK,KO}
	CONSUMES_SERVICE
		SVDU35B_QSEB34ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34ABC_SVDU35B.ALIVE{bool},
		MID.SVDU35B{MID_state},
		MID.SVDU35B.QSEB34ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34ABC_SVDU35B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35B.QSEB34ABC.LINK DEPENDS_ON SVDU35B_QSEB34ABC.ALIVE, status:
		DEAD IF SVDU35B_QSEB34ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34ABC_SVDU35B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35B_QSEB34ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35C{OK,KO}
	CONSUMES_SERVICE
		SVDU35C_QSEB34ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34ABC_SVDU35C.ALIVE{bool},
		MID.SVDU35C{MID_state},
		MID.SVDU35C.QSEB34ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34ABC_SVDU35C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35C.QSEB34ABC.LINK DEPENDS_ON SVDU35C_QSEB34ABC.ALIVE, status:
		DEAD IF SVDU35C_QSEB34ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34ABC_SVDU35C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35C_QSEB34ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB33ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB33ABC_QSEB34ABC.ALIVE{bool},
		QSEB33ABC_SVDU34A.ALIVE{bool},
		QSEB33ABC_SVDU34B.ALIVE{bool},
		QSEB33ABC_SVDU34C.ALIVE{bool},
		QSEB33ABC_QSEB32ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34ABC_QSEB33ABC.ALIVE{bool},
		SVDU34A_QSEB33ABC.ALIVE{bool},
		SVDU34B_QSEB33ABC.ALIVE{bool},
		SVDU34C_QSEB33ABC.ALIVE{bool},
		QSEB32ABC_QSEB33ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB33ABC{MID_state},
		MID.QSEB33ABC.QSEB34ABC.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34A.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34B.LINK{LINK_state},
		MID.QSEB33ABC.SVDU34C.LINK{LINK_state},
		MID.QSEB33ABC.QSEB32ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34ABC_QSEB33ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34A_QSEB33ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34B_QSEB33ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34C_QSEB33ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB32ABC_QSEB33ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB33ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB33ABC.QSEB34ABC.LINK DEPENDS_ON QSEB33ABC_QSEB34ABC.ALIVE, status:
		DEAD IF QSEB33ABC_QSEB34ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33ABC.SVDU34A.LINK DEPENDS_ON QSEB33ABC_SVDU34A.ALIVE, status:
		DEAD IF QSEB33ABC_SVDU34A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33ABC.SVDU34B.LINK DEPENDS_ON QSEB33ABC_SVDU34B.ALIVE, status:
		DEAD IF QSEB33ABC_SVDU34B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33ABC.SVDU34C.LINK DEPENDS_ON QSEB33ABC_SVDU34C.ALIVE, status:
		DEAD IF QSEB33ABC_SVDU34C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33ABC.QSEB32ABC.LINK DEPENDS_ON QSEB33ABC_QSEB32ABC.ALIVE, status:
		DEAD IF QSEB33ABC_QSEB32ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34ABC_QSEB33ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB33ABC_QSEB34ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34A{OK,KO}
	CONSUMES_SERVICE
		SVDU34A_QSEB33ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33ABC_SVDU34A.ALIVE{bool},
		MID.SVDU34A{MID_state},
		MID.SVDU34A.QSEB33ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33ABC_SVDU34A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34A.QSEB33ABC.LINK DEPENDS_ON SVDU34A_QSEB33ABC.ALIVE, status:
		DEAD IF SVDU34A_QSEB33ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33ABC_SVDU34A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34A_QSEB33ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34B{OK,KO}
	CONSUMES_SERVICE
		SVDU34B_QSEB33ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33ABC_SVDU34B.ALIVE{bool},
		MID.SVDU34B{MID_state},
		MID.SVDU34B.QSEB33ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33ABC_SVDU34B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34B.QSEB33ABC.LINK DEPENDS_ON SVDU34B_QSEB33ABC.ALIVE, status:
		DEAD IF SVDU34B_QSEB33ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33ABC_SVDU34B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34B_QSEB33ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34C{OK,KO}
	CONSUMES_SERVICE
		SVDU34C_QSEB33ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33ABC_SVDU34C.ALIVE{bool},
		MID.SVDU34C{MID_state},
		MID.SVDU34C.QSEB33ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33ABC_SVDU34C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34C.QSEB33ABC.LINK DEPENDS_ON SVDU34C_QSEB33ABC.ALIVE, status:
		DEAD IF SVDU34C_QSEB33ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33ABC_SVDU34C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34C_QSEB33ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB32ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB32ABC_QSEB33ABC.ALIVE{bool},
		QSEB32ABC_SVDU33A.ALIVE{bool},
		QSEB32ABC_SVDU33B.ALIVE{bool},
		QSEB32ABC_SVDU33C.ALIVE{bool},
		QSEB32ABC_QSEB31ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33ABC_QSEB32ABC.ALIVE{bool},
		SVDU33A_QSEB32ABC.ALIVE{bool},
		SVDU33B_QSEB32ABC.ALIVE{bool},
		SVDU33C_QSEB32ABC.ALIVE{bool},
		QSEB31ABC_QSEB32ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB32ABC{MID_state},
		MID.QSEB32ABC.QSEB33ABC.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33A.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33B.LINK{LINK_state},
		MID.QSEB32ABC.SVDU33C.LINK{LINK_state},
		MID.QSEB32ABC.QSEB31ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33ABC_QSEB32ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33A_QSEB32ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33B_QSEB32ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33C_QSEB32ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB31ABC_QSEB32ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB32ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB32ABC.QSEB33ABC.LINK DEPENDS_ON QSEB32ABC_QSEB33ABC.ALIVE, status:
		DEAD IF QSEB32ABC_QSEB33ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32ABC.SVDU33A.LINK DEPENDS_ON QSEB32ABC_SVDU33A.ALIVE, status:
		DEAD IF QSEB32ABC_SVDU33A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32ABC.SVDU33B.LINK DEPENDS_ON QSEB32ABC_SVDU33B.ALIVE, status:
		DEAD IF QSEB32ABC_SVDU33B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32ABC.SVDU33C.LINK DEPENDS_ON QSEB32ABC_SVDU33C.ALIVE, status:
		DEAD IF QSEB32ABC_SVDU33C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32ABC.QSEB31ABC.LINK DEPENDS_ON QSEB32ABC_QSEB31ABC.ALIVE, status:
		DEAD IF QSEB32ABC_QSEB31ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33ABC_QSEB32ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB32ABC_QSEB33ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33A{OK,KO}
	CONSUMES_SERVICE
		SVDU33A_QSEB32ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32ABC_SVDU33A.ALIVE{bool},
		MID.SVDU33A{MID_state},
		MID.SVDU33A.QSEB32ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32ABC_SVDU33A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33A.QSEB32ABC.LINK DEPENDS_ON SVDU33A_QSEB32ABC.ALIVE, status:
		DEAD IF SVDU33A_QSEB32ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32ABC_SVDU33A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33A_QSEB32ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33B{OK,KO}
	CONSUMES_SERVICE
		SVDU33B_QSEB32ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32ABC_SVDU33B.ALIVE{bool},
		MID.SVDU33B{MID_state},
		MID.SVDU33B.QSEB32ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32ABC_SVDU33B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33B.QSEB32ABC.LINK DEPENDS_ON SVDU33B_QSEB32ABC.ALIVE, status:
		DEAD IF SVDU33B_QSEB32ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32ABC_SVDU33B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33B_QSEB32ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33C{OK,KO}
	CONSUMES_SERVICE
		SVDU33C_QSEB32ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32ABC_SVDU33C.ALIVE{bool},
		MID.SVDU33C{MID_state},
		MID.SVDU33C.QSEB32ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32ABC_SVDU33C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33C.QSEB32ABC.LINK DEPENDS_ON SVDU33C_QSEB32ABC.ALIVE, status:
		DEAD IF SVDU33C_QSEB32ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32ABC_SVDU33C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33C_QSEB32ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB31ABC{OK,KO}
	CONSUMES_SERVICE
		QSEB31ABC_QSEB32ABC.ALIVE{bool},
		QSEB31ABC_SVDU32A.ALIVE{bool},
		QSEB31ABC_SVDU32B.ALIVE{bool},
		QSEB31ABC_SVDU32C.ALIVE{bool},
		QSEB31ABC_ADBG2.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG2_QSEB31ABC.ALIVE{bool},
		QSEB32ABC_QSEB31ABC.ALIVE{bool},
		SVDU32A_QSEB31ABC.ALIVE{bool},
		SVDU32B_QSEB31ABC.ALIVE{bool},
		SVDU32C_QSEB31ABC.ALIVE{bool},
		Communication{okko},
		MID.QSEB31ABC{MID_state},
		MID.QSEB31ABC.QSEB32ABC.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32A.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32B.LINK{LINK_state},
		MID.QSEB31ABC.SVDU32C.LINK{LINK_state},
		MID.QSEB31ABC.ADBG2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG2_QSEB31ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB32ABC_QSEB31ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32A_QSEB31ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32B_QSEB31ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32C_QSEB31ABC.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB31ABC DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB31ABC.QSEB32ABC.LINK DEPENDS_ON QSEB31ABC_QSEB32ABC.ALIVE, status:
		DEAD IF QSEB31ABC_QSEB32ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31ABC.SVDU32A.LINK DEPENDS_ON QSEB31ABC_SVDU32A.ALIVE, status:
		DEAD IF QSEB31ABC_SVDU32A.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31ABC.SVDU32B.LINK DEPENDS_ON QSEB31ABC_SVDU32B.ALIVE, status:
		DEAD IF QSEB31ABC_SVDU32B.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31ABC.SVDU32C.LINK DEPENDS_ON QSEB31ABC_SVDU32C.ALIVE, status:
		DEAD IF QSEB31ABC_SVDU32C.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31ABC.ADBG2.LINK DEPENDS_ON QSEB31ABC_ADBG2.ALIVE, status:
		DEAD IF QSEB31ABC_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32ABC_QSEB31ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB31ABC_QSEB32ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32A{OK,KO}
	CONSUMES_SERVICE
		SVDU32A_QSEB31ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31ABC_SVDU32A.ALIVE{bool},
		MID.SVDU32A{MID_state},
		MID.SVDU32A.QSEB31ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31ABC_SVDU32A.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32A DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32A.QSEB31ABC.LINK DEPENDS_ON SVDU32A_QSEB31ABC.ALIVE, status:
		DEAD IF SVDU32A_QSEB31ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31ABC_SVDU32A{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32A_QSEB31ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32B{OK,KO}
	CONSUMES_SERVICE
		SVDU32B_QSEB31ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31ABC_SVDU32B.ALIVE{bool},
		MID.SVDU32B{MID_state},
		MID.SVDU32B.QSEB31ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31ABC_SVDU32B.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32B DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32B.QSEB31ABC.LINK DEPENDS_ON SVDU32B_QSEB31ABC.ALIVE, status:
		DEAD IF SVDU32B_QSEB31ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31ABC_SVDU32B{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32B_QSEB31ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32C{OK,KO}
	CONSUMES_SERVICE
		SVDU32C_QSEB31ABC.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31ABC_SVDU32C.ALIVE{bool},
		MID.SVDU32C{MID_state},
		MID.SVDU32C.QSEB31ABC.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31ABC_SVDU32C.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32C DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32C.QSEB31ABC.LINK DEPENDS_ON SVDU32C_QSEB31ABC.ALIVE, status:
		DEAD IF SVDU32C_QSEB31ABC.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31ABC_SVDU32C{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32C_QSEB31ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_QSEB31ABC{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB31ABC_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB8DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB8DEF_ADBG1.ALIVE{bool},
		QSEB8DEF_SVDU9D.ALIVE{bool},
		QSEB8DEF_SVDU9E.ALIVE{bool},
		QSEB8DEF_SVDU9F.ALIVE{bool},
		QSEB8DEF_QSEB9_DEF.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG1_QSEB8DEF.ALIVE{bool},
		SVDU9D_QSEB8DEF.ALIVE{bool},
		SVDU9E_QSEB8DEF.ALIVE{bool},
		SVDU9F_QSEB8DEF.ALIVE{bool},
		QSEB9_DEF_QSEB8DEF.ALIVE{bool},
		MID.QSEB8DEF{MID_state},
		Communication{okko},
		MID.QSEB8DEF.ADBG1.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9D.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9E.LINK{LINK_state},
		MID.QSEB8DEF.SVDU9F.LINK{LINK_state},
		MID.QSEB8DEF.QSEB9_DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG1_QSEB8DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9D_QSEB8DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9E_QSEB8DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU9F_QSEB8DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB9_DEF_QSEB8DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB8DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB8DEF.ADBG1.LINK DEPENDS_ON QSEB8DEF_ADBG1.ALIVE, status:
		DEAD IF QSEB8DEF_ADBG1.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8DEF.SVDU9D.LINK DEPENDS_ON QSEB8DEF_SVDU9D.ALIVE, status:
		DEAD IF QSEB8DEF_SVDU9D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8DEF.SVDU9E.LINK DEPENDS_ON QSEB8DEF_SVDU9E.ALIVE, status:
		DEAD IF QSEB8DEF_SVDU9E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8DEF.SVDU9F.LINK DEPENDS_ON QSEB8DEF_SVDU9F.ALIVE, status:
		DEAD IF QSEB8DEF_SVDU9F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB8DEF.QSEB9_DEF.LINK DEPENDS_ON QSEB8DEF_QSEB9_DEF.ALIVE, status:
		DEAD IF QSEB8DEF_QSEB9_DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_ADBG1_QSEB8DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB8DEF_ADBG1{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9D{OK,KO}
	CONSUMES_SERVICE
		SVDU9D_QSEB8DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8DEF_SVDU9D.ALIVE{bool},
		MID.SVDU9D{MID_state},
		MID.SVDU9D.QSEB8DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8DEF_SVDU9D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9D.QSEB8DEF.LINK DEPENDS_ON SVDU9D_QSEB8DEF.ALIVE, status:
		DEAD IF SVDU9D_QSEB8DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8DEF_SVDU9D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9D_QSEB8DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9E{OK,KO}
	CONSUMES_SERVICE
		SVDU9E_QSEB8DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8DEF_SVDU9E.ALIVE{bool},
		MID.SVDU9E{MID_state},
		MID.SVDU9E.QSEB8DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8DEF_SVDU9E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9E.QSEB8DEF.LINK DEPENDS_ON SVDU9E_QSEB8DEF.ALIVE, status:
		DEAD IF SVDU9E_QSEB8DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8DEF_SVDU9E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9E_QSEB8DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU9F{OK,KO}
	CONSUMES_SERVICE
		SVDU9F_QSEB8DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8DEF_SVDU9F.ALIVE{bool},
		MID.SVDU9F{MID_state},
		MID.SVDU9F.QSEB8DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8DEF_SVDU9F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU9F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU9F.QSEB8DEF.LINK DEPENDS_ON SVDU9F_QSEB8DEF.ALIVE, status:
		DEAD IF SVDU9F_QSEB8DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8DEF_SVDU9F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU9F_QSEB8DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB9_DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB9_DEF_QSEB8DEF.ALIVE{bool},
		QSEB9_DEF_SVDU8D.ALIVE{bool},
		QSEB9_DEF_SVDU8E.ALIVE{bool},
		QSEB9_DEF_SVDU8F.ALIVE{bool},
		QSEB9_DEF_QSEB9DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB8DEF_QSEB9_DEF.ALIVE{bool},
		SVDU8D_QSEB9_DEF.ALIVE{bool},
		SVDU8E_QSEB9_DEF.ALIVE{bool},
		SVDU8F_QSEB9_DEF.ALIVE{bool},
		QSEB9DEF_QSEB9_DEF.ALIVE{bool},
		MID.QSEB9_DEF{MID_state},
		Communication{okko},
		MID.QSEB9_DEF.QSEB8DEF.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8D.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8E.LINK{LINK_state},
		MID.QSEB9_DEF.SVDU8F.LINK{LINK_state},
		MID.QSEB9_DEF.QSEB9DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB8DEF_QSEB9_DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8D_QSEB9_DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8E_QSEB9_DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU8F_QSEB9_DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB9DEF_QSEB9_DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB9_DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB9_DEF.QSEB8DEF.LINK DEPENDS_ON QSEB9_DEF_QSEB8DEF.ALIVE, status:
		DEAD IF QSEB9_DEF_QSEB8DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9_DEF.SVDU8D.LINK DEPENDS_ON QSEB9_DEF_SVDU8D.ALIVE, status:
		DEAD IF QSEB9_DEF_SVDU8D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9_DEF.SVDU8E.LINK DEPENDS_ON QSEB9_DEF_SVDU8E.ALIVE, status:
		DEAD IF QSEB9_DEF_SVDU8E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9_DEF.SVDU8F.LINK DEPENDS_ON QSEB9_DEF_SVDU8F.ALIVE, status:
		DEAD IF QSEB9_DEF_SVDU8F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9_DEF.QSEB9DEF.LINK DEPENDS_ON QSEB9_DEF_QSEB9DEF.ALIVE, status:
		DEAD IF QSEB9_DEF_QSEB9DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB8DEF_QSEB9_DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB9_DEF_QSEB8DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8D{OK,KO}
	CONSUMES_SERVICE
		SVDU8D_QSEB9_DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9_DEF_SVDU8D.ALIVE{bool},
		MID.SVDU8D{MID_state},
		MID.SVDU8D.QSEB9_DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9_DEF_SVDU8D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8D.QSEB9_DEF.LINK DEPENDS_ON SVDU8D_QSEB9_DEF.ALIVE, status:
		DEAD IF SVDU8D_QSEB9_DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9_DEF_SVDU8D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8D_QSEB9_DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8E{OK,KO}
	CONSUMES_SERVICE
		SVDU8E_QSEB9_DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9_DEF_SVDU8E.ALIVE{bool},
		MID.SVDU8E{MID_state},
		MID.SVDU8E.QSEB9_DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9_DEF_SVDU8E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8E.QSEB9_DEF.LINK DEPENDS_ON SVDU8E_QSEB9_DEF.ALIVE, status:
		DEAD IF SVDU8E_QSEB9_DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9_DEF_SVDU8E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8E_QSEB9_DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU8F{OK,KO}
	CONSUMES_SERVICE
		SVDU8F_QSEB9_DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9_DEF_SVDU8F.ALIVE{bool},
		MID.SVDU8F{MID_state},
		MID.SVDU8F.QSEB9_DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9_DEF_SVDU8F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU8F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU8F.QSEB9_DEF.LINK DEPENDS_ON SVDU8F_QSEB9_DEF.ALIVE, status:
		DEAD IF SVDU8F_QSEB9_DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9_DEF_SVDU8F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU8F_QSEB9_DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB9DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB9DEF_QSEB9_DEF.ALIVE{bool},
		QSEB9DEF_SVDU10D.ALIVE{bool},
		QSEB9DEF_SVDU10E.ALIVE{bool},
		QSEB9DEF_SVDU10F.ALIVE{bool},
		QSEB9DEF_QSEB10DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9_DEF_QSEB9DEF.ALIVE{bool},
		SVDU10D_QSEB9DEF.ALIVE{bool},
		SVDU10E_QSEB9DEF.ALIVE{bool},
		SVDU10F_QSEB9DEF.ALIVE{bool},
		QSEB10DEF_QSEB9DEF.ALIVE{bool},
		MID.QSEB9DEF{MID_state},
		Communication{okko},
		MID.QSEB9DEF.QSEB9_DEF.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10D.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10E.LINK{LINK_state},
		MID.QSEB9DEF.SVDU10F.LINK{LINK_state},
		MID.QSEB9DEF.QSEB10DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9_DEF_QSEB9DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10D_QSEB9DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10E_QSEB9DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU10F_QSEB9DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB10DEF_QSEB9DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB9DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB9DEF.QSEB9_DEF.LINK DEPENDS_ON QSEB9DEF_QSEB9_DEF.ALIVE, status:
		DEAD IF QSEB9DEF_QSEB9_DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9DEF.SVDU10D.LINK DEPENDS_ON QSEB9DEF_SVDU10D.ALIVE, status:
		DEAD IF QSEB9DEF_SVDU10D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9DEF.SVDU10E.LINK DEPENDS_ON QSEB9DEF_SVDU10E.ALIVE, status:
		DEAD IF QSEB9DEF_SVDU10E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9DEF.SVDU10F.LINK DEPENDS_ON QSEB9DEF_SVDU10F.ALIVE, status:
		DEAD IF QSEB9DEF_SVDU10F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB9DEF.QSEB10DEF.LINK DEPENDS_ON QSEB9DEF_QSEB10DEF.ALIVE, status:
		DEAD IF QSEB9DEF_QSEB10DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9_DEF_QSEB9DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB9DEF_QSEB9_DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10D{OK,KO}
	CONSUMES_SERVICE
		SVDU10D_QSEB9DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9DEF_SVDU10D.ALIVE{bool},
		MID.SVDU10D{MID_state},
		MID.SVDU10D.QSEB9DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9DEF_SVDU10D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10D.QSEB9DEF.LINK DEPENDS_ON SVDU10D_QSEB9DEF.ALIVE, status:
		DEAD IF SVDU10D_QSEB9DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9DEF_SVDU10D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10D_QSEB9DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10E{OK,KO}
	CONSUMES_SERVICE
		SVDU10E_QSEB9DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9DEF_SVDU10E.ALIVE{bool},
		MID.SVDU10E{MID_state},
		MID.SVDU10E.QSEB9DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9DEF_SVDU10E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10E.QSEB9DEF.LINK DEPENDS_ON SVDU10E_QSEB9DEF.ALIVE, status:
		DEAD IF SVDU10E_QSEB9DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9DEF_SVDU10E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10E_QSEB9DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU10F{OK,KO}
	CONSUMES_SERVICE
		SVDU10F_QSEB9DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9DEF_SVDU10F.ALIVE{bool},
		MID.SVDU10F{MID_state},
		MID.SVDU10F.QSEB9DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9DEF_SVDU10F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU10F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU10F.QSEB9DEF.LINK DEPENDS_ON SVDU10F_QSEB9DEF.ALIVE, status:
		DEAD IF SVDU10F_QSEB9DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9DEF_SVDU10F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU10F_QSEB9DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB10DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB10DEF_QSEB9DEF.ALIVE{bool},
		QSEB10DEF_QSEB31DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB9DEF_QSEB10DEF.ALIVE{bool},
		QSEB31DEF_QSEB10DEF.ALIVE{bool},
		MID.QSEB10DEF{MID_state},
		Communication{okko},
		MID.QSEB10DEF.QSEB9DEF.LINK{LINK_state},
		MID.QSEB10DEF.QSEB31DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB9DEF_QSEB10DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB31DEF_QSEB10DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB10DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB10DEF.QSEB9DEF.LINK DEPENDS_ON QSEB10DEF_QSEB9DEF.ALIVE, status:
		DEAD IF QSEB10DEF_QSEB9DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB10DEF.QSEB31DEF.LINK DEPENDS_ON QSEB10DEF_QSEB31DEF.ALIVE, status:
		DEAD IF QSEB10DEF_QSEB31DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB9DEF_QSEB10DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB10DEF_QSEB9DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB31DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB31DEF_QSEB10DEF.ALIVE{bool},
		QSEB31DEF_SVDU32D.ALIVE{bool},
		QSEB31DEF_SVDU32E.ALIVE{bool},
		QSEB31DEF_SVDU32F.ALIVE{bool},
		QSEB31DEF_QSEB32DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB10DEF_QSEB31DEF.ALIVE{bool},
		SVDU32D_QSEB31DEF.ALIVE{bool},
		SVDU32E_QSEB31DEF.ALIVE{bool},
		SVDU32F_QSEB31DEF.ALIVE{bool},
		QSEB32DEF_QSEB31DEF.ALIVE{bool},
		MID.QSEB31DEF{MID_state},
		Communication{okko},
		MID.QSEB31DEF.QSEB10DEF.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32D.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32E.LINK{LINK_state},
		MID.QSEB31DEF.SVDU32F.LINK{LINK_state},
		MID.QSEB31DEF.QSEB32DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB10DEF_QSEB31DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32D_QSEB31DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32E_QSEB31DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU32F_QSEB31DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB32DEF_QSEB31DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB31DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB31DEF.QSEB10DEF.LINK DEPENDS_ON QSEB31DEF_QSEB10DEF.ALIVE, status:
		DEAD IF QSEB31DEF_QSEB10DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31DEF.SVDU32D.LINK DEPENDS_ON QSEB31DEF_SVDU32D.ALIVE, status:
		DEAD IF QSEB31DEF_SVDU32D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31DEF.SVDU32E.LINK DEPENDS_ON QSEB31DEF_SVDU32E.ALIVE, status:
		DEAD IF QSEB31DEF_SVDU32E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31DEF.SVDU32F.LINK DEPENDS_ON QSEB31DEF_SVDU32F.ALIVE, status:
		DEAD IF QSEB31DEF_SVDU32F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB31DEF.QSEB32DEF.LINK DEPENDS_ON QSEB31DEF_QSEB32DEF.ALIVE, status:
		DEAD IF QSEB31DEF_QSEB32DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB10DEF_QSEB31DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB31DEF_QSEB10DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32D{OK,KO}
	CONSUMES_SERVICE
		SVDU32D_QSEB31DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31DEF_SVDU32D.ALIVE{bool},
		MID.SVDU32D{MID_state},
		MID.SVDU32D.QSEB31DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31DEF_SVDU32D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32D.QSEB31DEF.LINK DEPENDS_ON SVDU32D_QSEB31DEF.ALIVE, status:
		DEAD IF SVDU32D_QSEB31DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31DEF_SVDU32D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32D_QSEB31DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32E{OK,KO}
	CONSUMES_SERVICE
		SVDU32E_QSEB31DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31DEF_SVDU32E.ALIVE{bool},
		MID.SVDU32E{MID_state},
		MID.SVDU32E.QSEB31DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31DEF_SVDU32E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32E.QSEB31DEF.LINK DEPENDS_ON SVDU32E_QSEB31DEF.ALIVE, status:
		DEAD IF SVDU32E_QSEB31DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31DEF_SVDU32E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32E_QSEB31DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU32F{OK,KO}
	CONSUMES_SERVICE
		SVDU32F_QSEB31DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31DEF_SVDU32F.ALIVE{bool},
		MID.SVDU32F{MID_state},
		MID.SVDU32F.QSEB31DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31DEF_SVDU32F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU32F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU32F.QSEB31DEF.LINK DEPENDS_ON SVDU32F_QSEB31DEF.ALIVE, status:
		DEAD IF SVDU32F_QSEB31DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31DEF_SVDU32F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU32F_QSEB31DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB32DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB32DEF_QSEB31DEF.ALIVE{bool},
		QSEB32DEF_SVDU33D.ALIVE{bool},
		QSEB32DEF_SVDU33E.ALIVE{bool},
		QSEB32DEF_SVDU33F.ALIVE{bool},
		QSEB32DEF_QSEB33DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB31DEF_QSEB32DEF.ALIVE{bool},
		SVDU33D_QSEB32DEF.ALIVE{bool},
		SVDU33E_QSEB32DEF.ALIVE{bool},
		SVDU33F_QSEB32DEF.ALIVE{bool},
		QSEB33DEF_QSEB32DEF.ALIVE{bool},
		MID.QSEB32DEF{MID_state},
		Communication{okko},
		MID.QSEB32DEF.QSEB31DEF.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33D.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33E.LINK{LINK_state},
		MID.QSEB32DEF.SVDU33F.LINK{LINK_state},
		MID.QSEB32DEF.QSEB33DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB31DEF_QSEB32DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33D_QSEB32DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33E_QSEB32DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU33F_QSEB32DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB33DEF_QSEB32DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB32DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB32DEF.QSEB31DEF.LINK DEPENDS_ON QSEB32DEF_QSEB31DEF.ALIVE, status:
		DEAD IF QSEB32DEF_QSEB31DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32DEF.SVDU33D.LINK DEPENDS_ON QSEB32DEF_SVDU33D.ALIVE, status:
		DEAD IF QSEB32DEF_SVDU33D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32DEF.SVDU33E.LINK DEPENDS_ON QSEB32DEF_SVDU33E.ALIVE, status:
		DEAD IF QSEB32DEF_SVDU33E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32DEF.SVDU33F.LINK DEPENDS_ON QSEB32DEF_SVDU33F.ALIVE, status:
		DEAD IF QSEB32DEF_SVDU33F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB32DEF.QSEB33DEF.LINK DEPENDS_ON QSEB32DEF_QSEB33DEF.ALIVE, status:
		DEAD IF QSEB32DEF_QSEB33DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB31DEF_QSEB32DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB32DEF_QSEB31DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33D{OK,KO}
	CONSUMES_SERVICE
		SVDU33D_QSEB32DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32DEF_SVDU33D.ALIVE{bool},
		MID.SVDU33D{MID_state},
		MID.SVDU33D.QSEB32DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32DEF_SVDU33D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33D.QSEB32DEF.LINK DEPENDS_ON SVDU33D_QSEB32DEF.ALIVE, status:
		DEAD IF SVDU33D_QSEB32DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32DEF_SVDU33D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33D_QSEB32DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33E{OK,KO}
	CONSUMES_SERVICE
		SVDU33E_QSEB32DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32DEF_SVDU33E.ALIVE{bool},
		MID.SVDU33E{MID_state},
		MID.SVDU33E.QSEB32DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32DEF_SVDU33E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33E.QSEB32DEF.LINK DEPENDS_ON SVDU33E_QSEB32DEF.ALIVE, status:
		DEAD IF SVDU33E_QSEB32DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32DEF_SVDU33E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33E_QSEB32DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU33F{OK,KO}
	CONSUMES_SERVICE
		SVDU33F_QSEB32DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32DEF_SVDU33F.ALIVE{bool},
		MID.SVDU33F{MID_state},
		MID.SVDU33F.QSEB32DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32DEF_SVDU33F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU33F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU33F.QSEB32DEF.LINK DEPENDS_ON SVDU33F_QSEB32DEF.ALIVE, status:
		DEAD IF SVDU33F_QSEB32DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32DEF_SVDU33F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU33F_QSEB32DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB33DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB33DEF_QSEB32DEF.ALIVE{bool},
		QSEB33DEF_SVDU34D.ALIVE{bool},
		QSEB33DEF_SVDU34E.ALIVE{bool},
		QSEB33DEF_SVDU34F.ALIVE{bool},
		QSEB33DEF_QSEB34DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB32DEF_QSEB33DEF.ALIVE{bool},
		SVDU34D_QSEB33DEF.ALIVE{bool},
		SVDU34E_QSEB33DEF.ALIVE{bool},
		SVDU34F_QSEB33DEF.ALIVE{bool},
		QSEB34DEF_QSEB33DEF.ALIVE{bool},
		MID.QSEB33DEF{MID_state},
		Communication{okko},
		MID.QSEB33DEF.QSEB32DEF.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34D.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34E.LINK{LINK_state},
		MID.QSEB33DEF.SVDU34F.LINK{LINK_state},
		MID.QSEB33DEF.QSEB34DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB32DEF_QSEB33DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34D_QSEB33DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34E_QSEB33DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU34F_QSEB33DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB34DEF_QSEB33DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB33DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB33DEF.QSEB32DEF.LINK DEPENDS_ON QSEB33DEF_QSEB32DEF.ALIVE, status:
		DEAD IF QSEB33DEF_QSEB32DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33DEF.SVDU34D.LINK DEPENDS_ON QSEB33DEF_SVDU34D.ALIVE, status:
		DEAD IF QSEB33DEF_SVDU34D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33DEF.SVDU34E.LINK DEPENDS_ON QSEB33DEF_SVDU34E.ALIVE, status:
		DEAD IF QSEB33DEF_SVDU34E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33DEF.SVDU34F.LINK DEPENDS_ON QSEB33DEF_SVDU34F.ALIVE, status:
		DEAD IF QSEB33DEF_SVDU34F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB33DEF.QSEB34DEF.LINK DEPENDS_ON QSEB33DEF_QSEB34DEF.ALIVE, status:
		DEAD IF QSEB33DEF_QSEB34DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB32DEF_QSEB33DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB33DEF_QSEB32DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34D{OK,KO}
	CONSUMES_SERVICE
		SVDU34D_QSEB33DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33DEF_SVDU34D.ALIVE{bool},
		MID.SVDU34D{MID_state},
		MID.SVDU34D.QSEB33DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33DEF_SVDU34D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34D.QSEB33DEF.LINK DEPENDS_ON SVDU34D_QSEB33DEF.ALIVE, status:
		DEAD IF SVDU34D_QSEB33DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33DEF_SVDU34D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34D_QSEB33DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34E{OK,KO}
	CONSUMES_SERVICE
		SVDU34E_QSEB33DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33DEF_SVDU34E.ALIVE{bool},
		MID.SVDU34E{MID_state},
		MID.SVDU34E.QSEB33DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33DEF_SVDU34E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34E.QSEB33DEF.LINK DEPENDS_ON SVDU34E_QSEB33DEF.ALIVE, status:
		DEAD IF SVDU34E_QSEB33DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33DEF_SVDU34E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34E_QSEB33DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU34F{OK,KO}
	CONSUMES_SERVICE
		SVDU34F_QSEB33DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33DEF_SVDU34F.ALIVE{bool},
		MID.SVDU34F{MID_state},
		MID.SVDU34F.QSEB33DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33DEF_SVDU34F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU34F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU34F.QSEB33DEF.LINK DEPENDS_ON SVDU34F_QSEB33DEF.ALIVE, status:
		DEAD IF SVDU34F_QSEB33DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33DEF_SVDU34F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU34F_QSEB33DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB34DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB34DEF_QSEB33DEF.ALIVE{bool},
		QSEB34DEF_SVDU35D.ALIVE{bool},
		QSEB34DEF_SVDU35E.ALIVE{bool},
		QSEB34DEF_SVDU35F.ALIVE{bool},
		QSEB34DEF_QSEB35DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB33DEF_QSEB34DEF.ALIVE{bool},
		SVDU35D_QSEB34DEF.ALIVE{bool},
		SVDU35E_QSEB34DEF.ALIVE{bool},
		SVDU35F_QSEB34DEF.ALIVE{bool},
		QSEB35DEF_QSEB34DEF.ALIVE{bool},
		MID.QSEB34DEF{MID_state},
		Communication{okko},
		MID.QSEB34DEF.QSEB33DEF.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35D.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35E.LINK{LINK_state},
		MID.QSEB34DEF.SVDU35F.LINK{LINK_state},
		MID.QSEB34DEF.QSEB35DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB33DEF_QSEB34DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35D_QSEB34DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35E_QSEB34DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU35F_QSEB34DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB35DEF_QSEB34DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB34DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB34DEF.QSEB33DEF.LINK DEPENDS_ON QSEB34DEF_QSEB33DEF.ALIVE, status:
		DEAD IF QSEB34DEF_QSEB33DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34DEF.SVDU35D.LINK DEPENDS_ON QSEB34DEF_SVDU35D.ALIVE, status:
		DEAD IF QSEB34DEF_SVDU35D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34DEF.SVDU35E.LINK DEPENDS_ON QSEB34DEF_SVDU35E.ALIVE, status:
		DEAD IF QSEB34DEF_SVDU35E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34DEF.SVDU35F.LINK DEPENDS_ON QSEB34DEF_SVDU35F.ALIVE, status:
		DEAD IF QSEB34DEF_SVDU35F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB34DEF.QSEB35DEF.LINK DEPENDS_ON QSEB34DEF_QSEB35DEF.ALIVE, status:
		DEAD IF QSEB34DEF_QSEB35DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB33DEF_QSEB34DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB34DEF_QSEB33DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35D{OK,KO}
	CONSUMES_SERVICE
		SVDU35D_QSEB34DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34DEF_SVDU35D.ALIVE{bool},
		MID.SVDU35D{MID_state},
		MID.SVDU35D.QSEB34DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34DEF_SVDU35D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35D.QSEB34DEF.LINK DEPENDS_ON SVDU35D_QSEB34DEF.ALIVE, status:
		DEAD IF SVDU35D_QSEB34DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34DEF_SVDU35D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35D_QSEB34DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35E{OK,KO}
	CONSUMES_SERVICE
		SVDU35E_QSEB34DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34DEF_SVDU35E.ALIVE{bool},
		MID.SVDU35E{MID_state},
		MID.SVDU35E.QSEB34DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34DEF_SVDU35E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35E.QSEB34DEF.LINK DEPENDS_ON SVDU35E_QSEB34DEF.ALIVE, status:
		DEAD IF SVDU35E_QSEB34DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34DEF_SVDU35E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35E_QSEB34DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU35F{OK,KO}
	CONSUMES_SERVICE
		SVDU35F_QSEB34DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34DEF_SVDU35F.ALIVE{bool},
		MID.SVDU35F{MID_state},
		MID.SVDU35F.QSEB34DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34DEF_SVDU35F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU35F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU35F.QSEB34DEF.LINK DEPENDS_ON SVDU35F_QSEB34DEF.ALIVE, status:
		DEAD IF SVDU35F_QSEB34DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34DEF_SVDU35F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU35F_QSEB34DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB35DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB35DEF_QSEB34DEF.ALIVE{bool},
		QSEB35DEF_SVDU36D.ALIVE{bool},
		QSEB35DEF_SVDU36E.ALIVE{bool},
		QSEB35DEF_SVDU36F.ALIVE{bool},
		QSEB35DEF_QSEB24DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB34DEF_QSEB35DEF.ALIVE{bool},
		SVDU36D_QSEB35DEF.ALIVE{bool},
		SVDU36E_QSEB35DEF.ALIVE{bool},
		SVDU36F_QSEB35DEF.ALIVE{bool},
		QSEB24DE_QSEB35DEF.ALIVE{bool},
		MID.QSEB35DEF{MID_state},
		Communication{okko},
		MID.QSEB35DEF.QSEB34DEF.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36D.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36E.LINK{LINK_state},
		MID.QSEB35DEF.SVDU36F.LINK{LINK_state},
		MID.QSEB35DEF.QSEB24DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB34DEF_QSEB35DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36D_QSEB35DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36E_QSEB35DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU36F_QSEB35DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB24DE_QSEB35DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB35DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB35DEF.QSEB34DEF.LINK DEPENDS_ON QSEB35DEF_QSEB34DEF.ALIVE, status:
		DEAD IF QSEB35DEF_QSEB34DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35DEF.SVDU36D.LINK DEPENDS_ON QSEB35DEF_SVDU36D.ALIVE, status:
		DEAD IF QSEB35DEF_SVDU36D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35DEF.SVDU36E.LINK DEPENDS_ON QSEB35DEF_SVDU36E.ALIVE, status:
		DEAD IF QSEB35DEF_SVDU36E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35DEF.SVDU36F.LINK DEPENDS_ON QSEB35DEF_SVDU36F.ALIVE, status:
		DEAD IF QSEB35DEF_SVDU36F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB35DEF.QSEB24DE.LINK DEPENDS_ON QSEB35DEF_QSEB24DE.ALIVE, status:
		DEAD IF QSEB35DEF_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB34DEF_QSEB35DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB35DEF_QSEB34DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36D{OK,KO}
	CONSUMES_SERVICE
		SVDU36D_QSEB35DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35DEF_SVDU36D.ALIVE{bool},
		MID.SVDU36D{MID_state},
		MID.SVDU36D.QSEB35DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35DEF_SVDU36D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36D.QSEB35DEF.LINK DEPENDS_ON SVDU36D_QSEB35DEF.ALIVE, status:
		DEAD IF SVDU36D_QSEB35DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35DEF_SVDU36D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36D_QSEB35DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36E{OK,KO}
	CONSUMES_SERVICE
		SVDU36E_QSEB35DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35DEF_SVDU36E.ALIVE{bool},
		MID.SVDU36E{MID_state},
		MID.SVDU36E.QSEB35DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35DEF_SVDU36E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36E.QSEB35DEF.LINK DEPENDS_ON SVDU36E_QSEB35DEF.ALIVE, status:
		DEAD IF SVDU36E_QSEB35DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35DEF_SVDU36E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36E_QSEB35DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU36F{OK,KO}
	CONSUMES_SERVICE
		SVDU36F_QSEB35DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35DEF_SVDU36F.ALIVE{bool},
		MID.SVDU36F{MID_state},
		MID.SVDU36F.QSEB35DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35DEF_SVDU36F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU36F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU36F.QSEB35DEF.LINK DEPENDS_ON SVDU36F_QSEB35DEF.ALIVE, status:
		DEAD IF SVDU36F_QSEB35DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35DEF_SVDU36F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU36F_QSEB35DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB24DE{OK,KO}
	CONSUMES_SERVICE
		QSEB24DE_QSEB35DEF.ALIVE{bool},
		QSEB24DE_SVDU24D.ALIVE{bool},
		QSEB24DE_SVDU24E.ALIVE{bool},
		QSEB24DE_SVDU25D.ALIVE{bool},
		QSEB24DE_SVDU25E.ALIVE{bool},
		QSEB24DE_QSEB25DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB35DEF_QSEB24DE.ALIVE{bool},
		SVDU24D_QSEB24DE.ALIVE{bool},
		SVDU24E_QSEB24DE.ALIVE{bool},
		SVDU25D_QSEB24DE.ALIVE{bool},
		SVDU25E_QSEB24DE.ALIVE{bool},
		QSEB25DEF_QSEB24DE.ALIVE{bool},
		MID.QSEB24DE{MID_state},
		Communication{okko},
		MID.QSEB24DE.QSEB35DEF.LINK{LINK_state},
		MID.QSEB24DE.SVDU24D.LINK{LINK_state},
		MID.QSEB24DE.SVDU24E.LINK{LINK_state},
		MID.QSEB24DE.SVDU25D.LINK{LINK_state},
		MID.QSEB24DE.SVDU25E.LINK{LINK_state},
		MID.QSEB24DE.QSEB25DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB35DEF_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU24D_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU24E_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25D_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25E_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB25DEF_QSEB24DE.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.QSEB24DE DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB24DE.QSEB35DEF.LINK DEPENDS_ON QSEB24DE_QSEB35DEF.ALIVE, status:
		DEAD IF QSEB24DE_QSEB35DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24DE.SVDU24D.LINK DEPENDS_ON QSEB24DE_SVDU24D.ALIVE, status:
		DEAD IF QSEB24DE_SVDU24D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24DE.SVDU24E.LINK DEPENDS_ON QSEB24DE_SVDU24E.ALIVE, status:
		DEAD IF QSEB24DE_SVDU24E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24DE.SVDU25D.LINK DEPENDS_ON QSEB24DE_SVDU25D.ALIVE, status:
		DEAD IF QSEB24DE_SVDU25D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24DE.SVDU25E.LINK DEPENDS_ON QSEB24DE_SVDU25E.ALIVE, status:
		DEAD IF QSEB24DE_SVDU25E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB24DE.QSEB25DEF.LINK DEPENDS_ON QSEB24DE_QSEB25DEF.ALIVE, status:
		DEAD IF QSEB24DE_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB35DEF_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB24DE_QSEB35DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU24D{OK,KO}
	CONSUMES_SERVICE
		SVDU24D_QSEB24DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24DE_SVDU24D.ALIVE{bool},
		MID.SVDU24D{MID_state},
		MID.SVDU24D.QSEB24DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24DE_SVDU24D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU24D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU24D.QSEB24DE.LINK DEPENDS_ON SVDU24D_QSEB24DE.ALIVE, status:
		DEAD IF SVDU24D_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24DE_SVDU24D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU24D_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU24E{OK,KO}
	CONSUMES_SERVICE
		SVDU24E_QSEB24DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24DE_SVDU24E.ALIVE{bool},
		MID.SVDU24E{MID_state},
		MID.SVDU24E.QSEB24DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24DE_SVDU24E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU24E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU24E.QSEB24DE.LINK DEPENDS_ON SVDU24E_QSEB24DE.ALIVE, status:
		DEAD IF SVDU24E_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24DE_SVDU24E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU24E_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25D{OK,KO}
	CONSUMES_SERVICE
		SVDU25D_QSEB24DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24DE_SVDU25D.ALIVE{bool},
		MID.SVDU25D{MID_state},
		MID.SVDU25D.QSEB24DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24DE_SVDU25D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25D.QSEB24DE.LINK DEPENDS_ON SVDU25D_QSEB24DE.ALIVE, status:
		DEAD IF SVDU25D_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24DE_SVDU25D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25D_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25E{OK,KO}
	CONSUMES_SERVICE
		SVDU25E_QSEB24DE.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24DE_SVDU25E.ALIVE{bool},
		MID.SVDU25E{MID_state},
		MID.SVDU25E.QSEB24DE.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24DE_SVDU25E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25E.QSEB24DE.LINK DEPENDS_ON SVDU25E_QSEB24DE.ALIVE, status:
		DEAD IF SVDU25E_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24DE_SVDU25E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25E_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB25DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB25DEF_QSEB24DE.ALIVE{bool},
		QSEB25DEF_SVDU26D.ALIVE{bool},
		QSEB25DEF_SVDU26E.ALIVE{bool},
		QSEB25DEF_SVDU26F.ALIVE{bool},
		QSEB25DEF_SVDU25F.ALIVE{bool},
		QSEB25DEF_QSEB26DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB24DE_QSEB25DEF.ALIVE{bool},
		SVDU26D_QSEB25DEF.ALIVE{bool},
		SVDU26E_QSEB25DEF.ALIVE{bool},
		SVDU26F_QSEB25DEF.ALIVE{bool},
		SVDU25F_QSEB25DEF.ALIVE{bool},
		QSEB26DEF_QSEB25DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB25DEF{MID_state},
		MID.QSEB25DEF.QSEB24DE.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26D.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26E.LINK{LINK_state},
		MID.QSEB25DEF.SVDU26F.LINK{LINK_state},
		MID.QSEB25DEF.SVDU25F.LINK{LINK_state},
		MID.QSEB25DEF.QSEB26DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB24DE_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26D_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26E_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU26F_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU25F_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB26DEF_QSEB25DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB25DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB25DEF.QSEB24DE.LINK DEPENDS_ON QSEB25DEF_QSEB24DE.ALIVE, status:
		DEAD IF QSEB25DEF_QSEB24DE.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25DEF.SVDU26D.LINK DEPENDS_ON QSEB25DEF_SVDU26D.ALIVE, status:
		DEAD IF QSEB25DEF_SVDU26D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25DEF.SVDU26E.LINK DEPENDS_ON QSEB25DEF_SVDU26E.ALIVE, status:
		DEAD IF QSEB25DEF_SVDU26E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25DEF.SVDU26F.LINK DEPENDS_ON QSEB25DEF_SVDU26F.ALIVE, status:
		DEAD IF QSEB25DEF_SVDU26F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25DEF.SVDU25F.LINK DEPENDS_ON QSEB25DEF_SVDU25F.ALIVE, status:
		DEAD IF QSEB25DEF_SVDU25F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB25DEF.QSEB26DEF.LINK DEPENDS_ON QSEB25DEF_QSEB26DEF.ALIVE, status:
		DEAD IF QSEB25DEF_QSEB26DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB24DE_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB25DEF_QSEB24DE{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26D{OK,KO}
	CONSUMES_SERVICE
		SVDU26D_QSEB25DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25DEF_SVDU26D.ALIVE{bool},
		MID.SVDU26D{MID_state},
		MID.SVDU26D.QSEB25DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25DEF_SVDU26D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26D.QSEB25DEF.LINK DEPENDS_ON SVDU26D_QSEB25DEF.ALIVE, status:
		DEAD IF SVDU26D_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25DEF_SVDU26D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26D_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26E{OK,KO}
	CONSUMES_SERVICE
		SVDU26E_QSEB25DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25DEF_SVDU26E.ALIVE{bool},
		MID.SVDU26E{MID_state},
		MID.SVDU26E.QSEB25DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25DEF_SVDU26E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26E.QSEB25DEF.LINK DEPENDS_ON SVDU26E_QSEB25DEF.ALIVE, status:
		DEAD IF SVDU26E_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25DEF_SVDU26E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26E_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU26F{OK,KO}
	CONSUMES_SERVICE
		SVDU26F_QSEB25DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25DEF_SVDU26F.ALIVE{bool},
		MID.SVDU26F{MID_state},
		MID.SVDU26F.QSEB25DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25DEF_SVDU26F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU26F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU26F.QSEB25DEF.LINK DEPENDS_ON SVDU26F_QSEB25DEF.ALIVE, status:
		DEAD IF SVDU26F_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25DEF_SVDU26F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU26F_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU25F{OK,KO}
	CONSUMES_SERVICE
		SVDU25F_QSEB25DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25DEF_SVDU25F.ALIVE{bool},
		MID.SVDU25F{MID_state},
		MID.SVDU25F.QSEB25DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25DEF_SVDU25F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU25F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU25F.QSEB25DEF.LINK DEPENDS_ON SVDU25F_QSEB25DEF.ALIVE, status:
		DEAD IF SVDU25F_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25DEF_SVDU25F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU25F_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB26DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB26DEF_QSEB25DEF.ALIVE{bool},
		QSEB26DEF_SVDU27D.ALIVE{bool},
		QSEB26DEF_SVDU27E.ALIVE{bool},
		QSEB26DEF_SVDU27F.ALIVE{bool},
		QSEB26DEF_QSEB27DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB25DEF_QSEB26DEF.ALIVE{bool},
		SVDU27D_QSEB26DEF.ALIVE{bool},
		SVDU27E_QSEB26DEF.ALIVE{bool},
		SVDU27F_QSEB26DEF.ALIVE{bool},
		QSEB27DEF_QSEB26DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB26DEF{MID_state},
		MID.QSEB26DEF.QSEB25DEF.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27D.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27E.LINK{LINK_state},
		MID.QSEB26DEF.SVDU27F.LINK{LINK_state},
		MID.QSEB26DEF.QSEB27DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB25DEF_QSEB26DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27D_QSEB26DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27E_QSEB26DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU27F_QSEB26DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB27DEF_QSEB26DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB26DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB26DEF.QSEB25DEF.LINK DEPENDS_ON QSEB26DEF_QSEB25DEF.ALIVE, status:
		DEAD IF QSEB26DEF_QSEB25DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26DEF.SVDU27D.LINK DEPENDS_ON QSEB26DEF_SVDU27D.ALIVE, status:
		DEAD IF QSEB26DEF_SVDU27D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26DEF.SVDU27E.LINK DEPENDS_ON QSEB26DEF_SVDU27E.ALIVE, status:
		DEAD IF QSEB26DEF_SVDU27E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26DEF.SVDU27F.LINK DEPENDS_ON QSEB26DEF_SVDU27F.ALIVE, status:
		DEAD IF QSEB26DEF_SVDU27F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB26DEF.QSEB27DEF.LINK DEPENDS_ON QSEB26DEF_QSEB27DEF.ALIVE, status:
		DEAD IF QSEB26DEF_QSEB27DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB25DEF_QSEB26DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB26DEF_QSEB25DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27D{OK,KO}
	CONSUMES_SERVICE
		SVDU27D_QSEB26DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26DEF_SVDU27D.ALIVE{bool},
		MID.SVDU27D{MID_state},
		MID.SVDU27D.QSEB26DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26DEF_SVDU27D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27D.QSEB26DEF.LINK DEPENDS_ON SVDU27D_QSEB26DEF.ALIVE, status:
		DEAD IF SVDU27D_QSEB26DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26DEF_SVDU27D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27D_QSEB26DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27E{OK,KO}
	CONSUMES_SERVICE
		SVDU27E_QSEB26DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26DEF_SVDU27E.ALIVE{bool},
		MID.SVDU27E{MID_state},
		MID.SVDU27E.QSEB26DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26DEF_SVDU27E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27E.QSEB26DEF.LINK DEPENDS_ON SVDU27E_QSEB26DEF.ALIVE, status:
		DEAD IF SVDU27E_QSEB26DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26DEF_SVDU27E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27E_QSEB26DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU27F{OK,KO}
	CONSUMES_SERVICE
		SVDU27F_QSEB26DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26DEF_SVDU27F.ALIVE{bool},
		MID.SVDU27F{MID_state},
		MID.SVDU27F.QSEB26DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26DEF_SVDU27F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU27F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU27F.QSEB26DEF.LINK DEPENDS_ON SVDU27F_QSEB26DEF.ALIVE, status:
		DEAD IF SVDU27F_QSEB26DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26DEF_SVDU27F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU27F_QSEB26DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB27DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB27DEF_QSEB26DEF.ALIVE{bool},
		QSEB27DEF_SVDU28D.ALIVE{bool},
		QSEB27DEF_SVDU28E.ALIVE{bool},
		QSEB27DEF_SVDU28F.ALIVE{bool},
		QSEB27DEF_QSEB28DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB26DEF_QSEB27DEF.ALIVE{bool},
		SVDU28D_QSEB27DEF.ALIVE{bool},
		SVDU28E_QSEB27DEF.ALIVE{bool},
		SVDU28F_QSEB27DEF.ALIVE{bool},
		QSEB28DEF_QSEB27DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB27DEF{MID_state},
		MID.QSEB27DEF.QSEB26DEF.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28D.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28E.LINK{LINK_state},
		MID.QSEB27DEF.SVDU28F.LINK{LINK_state},
		MID.QSEB27DEF.QSEB28DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB26DEF_QSEB27DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28D_QSEB27DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28E_QSEB27DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU28F_QSEB27DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB28DEF_QSEB27DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB27DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB27DEF.QSEB26DEF.LINK DEPENDS_ON QSEB27DEF_QSEB26DEF.ALIVE, status:
		DEAD IF QSEB27DEF_QSEB26DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27DEF.SVDU28D.LINK DEPENDS_ON QSEB27DEF_SVDU28D.ALIVE, status:
		DEAD IF QSEB27DEF_SVDU28D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27DEF.SVDU28E.LINK DEPENDS_ON QSEB27DEF_SVDU28E.ALIVE, status:
		DEAD IF QSEB27DEF_SVDU28E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27DEF.SVDU28F.LINK DEPENDS_ON QSEB27DEF_SVDU28F.ALIVE, status:
		DEAD IF QSEB27DEF_SVDU28F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB27DEF.QSEB28DEF.LINK DEPENDS_ON QSEB27DEF_QSEB28DEF.ALIVE, status:
		DEAD IF QSEB27DEF_QSEB28DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB26DEF_QSEB27DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB27DEF_QSEB26DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28D{OK,KO}
	CONSUMES_SERVICE
		SVDU28D_QSEB27DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27DEF_SVDU28D.ALIVE{bool},
		MID.SVDU28D{MID_state},
		MID.SVDU28D.QSEB27DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27DEF_SVDU28D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28D.QSEB27DEF.LINK DEPENDS_ON SVDU28D_QSEB27DEF.ALIVE, status:
		DEAD IF SVDU28D_QSEB27DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27DEF_SVDU28D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28D_QSEB27DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28E{OK,KO}
	CONSUMES_SERVICE
		SVDU28E_QSEB27DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27DEF_SVDU28E.ALIVE{bool},
		MID.SVDU28E{MID_state},
		MID.SVDU28E.QSEB27DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27DEF_SVDU28E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28E.QSEB27DEF.LINK DEPENDS_ON SVDU28E_QSEB27DEF.ALIVE, status:
		DEAD IF SVDU28E_QSEB27DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27DEF_SVDU28E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28E_QSEB27DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU28F{OK,KO}
	CONSUMES_SERVICE
		SVDU28F_QSEB27DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27DEF_SVDU28F.ALIVE{bool},
		MID.SVDU28F{MID_state},
		MID.SVDU28F.QSEB27DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27DEF_SVDU28F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU28F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU28F.QSEB27DEF.LINK DEPENDS_ON SVDU28F_QSEB27DEF.ALIVE, status:
		DEAD IF SVDU28F_QSEB27DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27DEF_SVDU28F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU28F_QSEB27DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB28DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB28DEF_QSEB27DEF.ALIVE{bool},
		QSEB28DEF_SVDU29D.ALIVE{bool},
		QSEB28DEF_SVDU29E.ALIVE{bool},
		QSEB28DEF_SVDU29F.ALIVE{bool},
		QSEB28DEF_QSEB29DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB27DEF_QSEB28DEF.ALIVE{bool},
		SVDU29D_QSEB28DEF.ALIVE{bool},
		SVDU29E_QSEB28DEF.ALIVE{bool},
		SVDU29F_QSEB28DEF.ALIVE{bool},
		QSEB29DEF_QSEB28DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB28DEF{MID_state},
		MID.QSEB28DEF.QSEB27DEF.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29D.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29E.LINK{LINK_state},
		MID.QSEB28DEF.SVDU29F.LINK{LINK_state},
		MID.QSEB28DEF.QSEB29DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB27DEF_QSEB28DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29D_QSEB28DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29E_QSEB28DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU29F_QSEB28DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB29DEF_QSEB28DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB28DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB28DEF.QSEB27DEF.LINK DEPENDS_ON QSEB28DEF_QSEB27DEF.ALIVE, status:
		DEAD IF QSEB28DEF_QSEB27DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28DEF.SVDU29D.LINK DEPENDS_ON QSEB28DEF_SVDU29D.ALIVE, status:
		DEAD IF QSEB28DEF_SVDU29D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28DEF.SVDU29E.LINK DEPENDS_ON QSEB28DEF_SVDU29E.ALIVE, status:
		DEAD IF QSEB28DEF_SVDU29E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28DEF.SVDU29F.LINK DEPENDS_ON QSEB28DEF_SVDU29F.ALIVE, status:
		DEAD IF QSEB28DEF_SVDU29F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB28DEF.QSEB29DEF.LINK DEPENDS_ON QSEB28DEF_QSEB29DEF.ALIVE, status:
		DEAD IF QSEB28DEF_QSEB29DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB27DEF_QSEB28DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB28DEF_QSEB27DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29D{OK,KO}
	CONSUMES_SERVICE
		SVDU29D_QSEB28DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28DEF_SVDU29D.ALIVE{bool},
		MID.SVDU29D{MID_state},
		MID.SVDU29D.QSEB28DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28DEF_SVDU29D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29D.QSEB28DEF.LINK DEPENDS_ON SVDU29D_QSEB28DEF.ALIVE, status:
		DEAD IF SVDU29D_QSEB28DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28DEF_SVDU29D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29D_QSEB28DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29E{OK,KO}
	CONSUMES_SERVICE
		SVDU29E_QSEB28DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28DEF_SVDU29E.ALIVE{bool},
		MID.SVDU29E{MID_state},
		MID.SVDU29E.QSEB28DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28DEF_SVDU29E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29E.QSEB28DEF.LINK DEPENDS_ON SVDU29E_QSEB28DEF.ALIVE, status:
		DEAD IF SVDU29E_QSEB28DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28DEF_SVDU29E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29E_QSEB28DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU29F{OK,KO}
	CONSUMES_SERVICE
		SVDU29F_QSEB28DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28DEF_SVDU29F.ALIVE{bool},
		MID.SVDU29F{MID_state},
		MID.SVDU29F.QSEB28DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28DEF_SVDU29F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU29F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU29F.QSEB28DEF.LINK DEPENDS_ON SVDU29F_QSEB28DEF.ALIVE, status:
		DEAD IF SVDU29F_QSEB28DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28DEF_SVDU29F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU29F_QSEB28DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB29DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB29DEF_QSEB28DEF.ALIVE{bool},
		QSEB29DEF_SVDU30D.ALIVE{bool},
		QSEB29DEF_SVDU30E.ALIVE{bool},
		QSEB29DEF_SVDU30F.ALIVE{bool},
		QSEB29DEF_QSEB30DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB28DEF_QSEB29DEF.ALIVE{bool},
		SVDU30D_QSEB29DEF.ALIVE{bool},
		SVDU30E_QSEB29DEF.ALIVE{bool},
		SVDU30F_QSEB29DEF.ALIVE{bool},
		QSEB30DEF_QSEB29DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB29DEF{MID_state},
		MID.QSEB29DEF.QSEB28DEF.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30D.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30E.LINK{LINK_state},
		MID.QSEB29DEF.SVDU30F.LINK{LINK_state},
		MID.QSEB29DEF.QSEB30DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB28DEF_QSEB29DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30D_QSEB29DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30E_QSEB29DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU30F_QSEB29DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB30DEF_QSEB29DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB29DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB29DEF.QSEB28DEF.LINK DEPENDS_ON QSEB29DEF_QSEB28DEF.ALIVE, status:
		DEAD IF QSEB29DEF_QSEB28DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29DEF.SVDU30D.LINK DEPENDS_ON QSEB29DEF_SVDU30D.ALIVE, status:
		DEAD IF QSEB29DEF_SVDU30D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29DEF.SVDU30E.LINK DEPENDS_ON QSEB29DEF_SVDU30E.ALIVE, status:
		DEAD IF QSEB29DEF_SVDU30E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29DEF.SVDU30F.LINK DEPENDS_ON QSEB29DEF_SVDU30F.ALIVE, status:
		DEAD IF QSEB29DEF_SVDU30F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB29DEF.QSEB30DEF.LINK DEPENDS_ON QSEB29DEF_QSEB30DEF.ALIVE, status:
		DEAD IF QSEB29DEF_QSEB30DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB28DEF_QSEB29DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB29DEF_QSEB28DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30D{OK,KO}
	CONSUMES_SERVICE
		SVDU30D_QSEB29DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29DEF_SVDU30D.ALIVE{bool},
		MID.SVDU30D{MID_state},
		MID.SVDU30D.QSEB29DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29DEF_SVDU30D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30D.QSEB29DEF.LINK DEPENDS_ON SVDU30D_QSEB29DEF.ALIVE, status:
		DEAD IF SVDU30D_QSEB29DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29DEF_SVDU30D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30D_QSEB29DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30E{OK,KO}
	CONSUMES_SERVICE
		SVDU30E_QSEB29DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29DEF_SVDU30E.ALIVE{bool},
		MID.SVDU30E{MID_state},
		MID.SVDU30E.QSEB29DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29DEF_SVDU30E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30E.QSEB29DEF.LINK DEPENDS_ON SVDU30E_QSEB29DEF.ALIVE, status:
		DEAD IF SVDU30E_QSEB29DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29DEF_SVDU30E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30E_QSEB29DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU30F{OK,KO}
	CONSUMES_SERVICE
		SVDU30F_QSEB29DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB29DEF_SVDU30F.ALIVE{bool},
		MID.SVDU30F{MID_state},
		MID.SVDU30F.QSEB29DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB29DEF_SVDU30F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU30F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU30F.QSEB29DEF.LINK DEPENDS_ON SVDU30F_QSEB29DEF.ALIVE, status:
		DEAD IF SVDU30F_QSEB29DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29DEF_SVDU30F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU30F_QSEB29DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE QSEB30DEF{OK,KO}
	CONSUMES_SERVICE
		QSEB30DEF_QSEB29DEF.ALIVE{bool},
		QSEB30DEF_SVDU31D.ALIVE{bool},
		QSEB30DEF_SVDU31E.ALIVE{bool},
		QSEB30DEF_SVDU31F.ALIVE{bool},
		QSEB30DEF_ADBG2.ALIVE{bool};
	PROVIDES_SERVICE
		ADBG2_QSEB30DEF.ALIVE{bool},
		QSEB29DEF_QSEB30DEF.ALIVE{bool},
		SVDU31D_QSEB30DEF.ALIVE{bool},
		SVDU31E_QSEB30DEF.ALIVE{bool},
		SVDU31F_QSEB30DEF.ALIVE{bool},
		Communication{okko},
		MID.QSEB30DEF{MID_state},
		MID.QSEB30DEF.QSEB29DEF.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31D.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31E.LINK{LINK_state},
		MID.QSEB30DEF.SVDU31F.LINK{LINK_state},
		MID.QSEB30DEF.ADBG2.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE ADBG2_QSEB30DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE QSEB29DEF_QSEB30DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31D_QSEB30DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31E_QSEB30DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE SVDU31F_QSEB30DEF.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
	SERVICE MID.QSEB30DEF DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.QSEB30DEF.QSEB29DEF.LINK DEPENDS_ON QSEB30DEF_QSEB29DEF.ALIVE, status:
		DEAD IF QSEB30DEF_QSEB29DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30DEF.SVDU31D.LINK DEPENDS_ON QSEB30DEF_SVDU31D.ALIVE, status:
		DEAD IF QSEB30DEF_SVDU31D.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30DEF.SVDU31E.LINK DEPENDS_ON QSEB30DEF_SVDU31E.ALIVE, status:
		DEAD IF QSEB30DEF_SVDU31E.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30DEF.SVDU31F.LINK DEPENDS_ON QSEB30DEF_SVDU31F.ALIVE, status:
		DEAD IF QSEB30DEF_SVDU31F.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
	SERVICE MID.QSEB30DEF.ADBG2.LINK DEPENDS_ON QSEB30DEF_ADBG2.ALIVE, status:
		DEAD IF QSEB30DEF_ADBG2.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB29DEF_QSEB30DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB30DEF_QSEB29DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31D{OK,KO}
	CONSUMES_SERVICE
		SVDU31D_QSEB30DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30DEF_SVDU31D.ALIVE{bool},
		MID.SVDU31D{MID_state},
		MID.SVDU31D.QSEB30DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30DEF_SVDU31D.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31D DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31D.QSEB30DEF.LINK DEPENDS_ON SVDU31D_QSEB30DEF.ALIVE, status:
		DEAD IF SVDU31D_QSEB30DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30DEF_SVDU31D{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31D_QSEB30DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31E{OK,KO}
	CONSUMES_SERVICE
		SVDU31E_QSEB30DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30DEF_SVDU31E.ALIVE{bool},
		MID.SVDU31E{MID_state},
		MID.SVDU31E.QSEB30DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30DEF_SVDU31E.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31E DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31E.QSEB30DEF.LINK DEPENDS_ON SVDU31E_QSEB30DEF.ALIVE, status:
		DEAD IF SVDU31E_QSEB30DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30DEF_SVDU31E{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31E_QSEB30DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE SVDU31F{OK,KO}
	CONSUMES_SERVICE
		SVDU31F_QSEB30DEF.ALIVE{bool};
	PROVIDES_SERVICE
		QSEB30DEF_SVDU31F.ALIVE{bool},
		MID.SVDU31F{MID_state},
		MID.SVDU31F.QSEB30DEF.LINK{LINK_state};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE QSEB30DEF_SVDU31F.ALIVE DEPENDS_ON status:
		true IF status=OK,
		false OTHERWISE;
	SERVICE MID.SVDU31F DEPENDS_ON status:
		not_refreshed IF status=KO,
		OK OTHERWISE;
	SERVICE MID.SVDU31F.QSEB30DEF.LINK DEPENDS_ON SVDU31F_QSEB30DEF.ALIVE, status:
		DEAD IF SVDU31F_QSEB30DEF.ALIVE=false & status=OK,
		not_refreshed IF status=KO,
		UP OTHERWISE;
END

RESOURCE L_QSEB30DEF_SVDU31F{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_SVDU31F_QSEB30DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_ADBG2_QSEB30DEF{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

RESOURCE L_QSEB30DEF_ADBG2{OK,KO}
	PROVIDES_SERVICE
		Communication{okko};

	INITIAL OK;
	FAULTY KO;
	TRANS
		OK -> KO WHENEVER;

	SERVICE Communication DEPENDS_ON status:
		OK IF status=OK,
		KO OTHERWISE;
END

